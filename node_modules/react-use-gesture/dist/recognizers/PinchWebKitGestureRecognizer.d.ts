import { TouchEvent } from 'react';
import DistanceAngleRecognizer from './DistanceAngleRecognizer';
import GestureController from '../controllers/GestureController';
import { UseGestureEvent, ReactEventHandlerKey, WebKitGestureEvent, Fn } from '../types';
export default class PinchWebKitGestureRecognizer extends DistanceAngleRecognizer {
    sharedStartState: {
        pinching: boolean;
        down: boolean;
        touches: number;
    };
    sharedEndState: {
        pinching: boolean;
        down: boolean;
        touches: number;
    };
    private origin?;
    constructor(controller: GestureController, args: any[]);
    getPayloadFromEvent(event: UseGestureEvent<WebKitGestureEvent>): {
        values: [number, number];
    };
    onPinchStart: (event: WebKitGestureEvent) => void;
    onPinchChange: (event: WebKitGestureEvent) => void;
    onGestureEnd: (event: WebKitGestureEvent) => void;
    updateTouchData: (event: TouchEvent<Element> & {
        gesture?: "drag" | "pinch" | "move" | "scroll" | "wheel" | "hover" | undefined;
    }) => void;
    getEventBindings(): [ReactEventHandlerKey | ReactEventHandlerKey[], Fn][];
}
