import { Handler, GestureHandlersPartial, GestureConfig, Coordinates, Fn, ReactEventHandlers, DistanceAngle, Omit } from './types';
/** API
 * const bind = useDrag(() => { ... })
 * const bind = usePinch(() => { ... })
 * const bind = useMove(() => { ... })
 * const bind = useScroll(() => { ... })
 * const bind = useWheel(() => { ... })
 *
 * Handlers object:
 * const bind = useGesture({ onDrag: () => { ... }, onMove: () => { ... } })
 *
 * DomTarget:
 * const bind = useGesture({ onScroll: () => { ... } }, { domTarget: window })
 * React.useEffect(bind, [bind])
 */
declare type PartialGestureConfig = Partial<Omit<GestureConfig, 'passiveEvents'>>;
declare type GetBinderTypeFromDomTarget<T extends PartialGestureConfig> = T['domTarget'] extends object ? Fn : ReactEventHandlers;
export declare function useGesture<Config extends PartialGestureConfig>(handlers: GestureHandlersPartial, config?: Config): (...args: any[]) => GetBinderTypeFromDomTarget<Config>;
export declare const useDrag: (handler: Handler<Coordinates>, config?: Partial<Pick<GestureConfig, "domTarget" | "event" | "window" | "dragDelay" | "pointerEvents" | "enabled" | "drag" | "pinch" | "scroll" | "wheel" | "hover" | "move">> | undefined) => (...args: any[]) => ReactEventHandlers;
export declare const useMove: (handler: Handler<Coordinates>, config?: Partial<Pick<GestureConfig, "domTarget" | "event" | "window" | "dragDelay" | "pointerEvents" | "enabled" | "drag" | "pinch" | "scroll" | "wheel" | "hover" | "move">> | undefined) => (...args: any[]) => ReactEventHandlers;
export declare const useHover: (handler: Handler<Coordinates>, config?: Partial<Pick<GestureConfig, "domTarget" | "event" | "window" | "dragDelay" | "pointerEvents" | "enabled" | "drag" | "pinch" | "scroll" | "wheel" | "hover" | "move">> | undefined) => (...args: any[]) => ReactEventHandlers;
export declare const useScroll: (handler: Handler<Coordinates>, config?: Partial<Pick<GestureConfig, "domTarget" | "event" | "window" | "dragDelay" | "pointerEvents" | "enabled" | "drag" | "pinch" | "scroll" | "wheel" | "hover" | "move">> | undefined) => (...args: any[]) => ReactEventHandlers;
export declare const useWheel: (handler: Handler<Coordinates>, config?: Partial<Pick<GestureConfig, "domTarget" | "event" | "window" | "dragDelay" | "pointerEvents" | "enabled" | "drag" | "pinch" | "scroll" | "wheel" | "hover" | "move">> | undefined) => (...args: any[]) => ReactEventHandlers;
export declare const usePinch: (handler: Handler<DistanceAngle>, config?: Partial<Pick<GestureConfig, "domTarget" | "event" | "window" | "dragDelay" | "pointerEvents" | "enabled" | "drag" | "pinch" | "scroll" | "wheel" | "hover" | "move">> | undefined) => (...args: any[]) => ReactEventHandlers;
export {};
