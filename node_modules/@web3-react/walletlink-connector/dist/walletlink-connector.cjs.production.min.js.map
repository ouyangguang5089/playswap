{"version":3,"file":"walletlink-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: [CHAIN_ID] })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletLink) {\n      const { default: WalletLink } = await import('walletlink')\n      this.walletLink = new WalletLink({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const account = await this.provider.send('eth_requestAccounts').then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.provider, chainId: CHAIN_ID, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return CHAIN_ID\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {}\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n}\n"],"names":["url","appName","appLogoUrl","darkMode","supportedChainIds","activate","_this3","provider","send","then","accounts","account","chainId","this","walletLink","WalletLink","makeWeb3Provider","getProvider","getChainId","getAccount","deactivate","close","emitDeactivate","AbstractConnector"],"mappings":"gVAqBgBA,IAAAA,IAAKC,IAAAA,QAASC,IAAAA,WAAYC,IAAAA,8BAChC,CAAEC,kBAAmB,CAnBd,YAqBRJ,IAAMA,IACNC,QAAUA,IACVC,WAAaA,IACbC,SAAWA,IAAY,sHAGjBE,gEAWWC,EAAKC,SAASC,KAAK,uBAAuBC,MAAK,SAACC,UAA+BA,EAAS,sBAAxGC,SAEC,CAAEJ,SAAUD,EAAKC,SAAUK,QAxCrB,EAwCwCD,QAASA,SAZzDE,sBAAAP,EAAKQ,kCAC8B,8QAAO,wCACxCA,WAAa,IAAIC,gBACpBd,QAASK,EAAKL,QACdE,SAAUG,EAAKH,UACXG,EAAKJ,WAAa,CAAEA,WAAYI,EAAKJ,YAAe,OAErDK,SAAWD,EAAKQ,WAAWE,iBAAiBV,EAAKN,IAnC3C,+FA2CFiB,kDACJJ,KAAKN,gDAGDW,6CA/CE,MAmDFC,iDACJN,KAAKN,SAASC,KAAK,gBAAgBC,MAAK,SAACC,UAA+BA,EAAS,6CAGnFU,WAAA,eAEMC,4BACXR,KAAKN,SAASc,QAAdR,KACKS,0EAlDgCC"}