{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["// # Relative luminance\n//\n// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n// https://en.wikipedia.org/wiki/Luminance_(relative)\n// https://en.wikipedia.org/wiki/Luminosity_function\n// https://en.wikipedia.org/wiki/Rec._709#Luma_coefficients\n\n// red, green, and blue coefficients\nconst rc = 0.2126;\nconst gc = 0.7152;\nconst bc = 0.0722;\n// low-gamma adjust coefficient\nconst lowc = 1 / 12.92;\n\nfunction adjustGamma(_) {\n  return Math.pow((_ + 0.055) / 1.055, 2.4);\n}\n\n/**\n * Given a 3-element array of R, G, B varying from 0 to 255, return the luminance\n * as a number from 0 to 1.\n * @param {Array<number>} rgb 3-element array of a color\n * @returns {number} luminance, between 0 and 1\n * @example\n * var luminance = require('relative-luminance');\n * var black_lum = luminance([0, 0, 0]); // 0\n */\nexport default function relativeLuminance(rgb) {\n  const rsrgb = rgb[0] / 255;\n  const gsrgb = rgb[1] / 255;\n  const bsrgb = rgb[2] / 255;\n\n  const r = rsrgb <= 0.03928 ? rsrgb * lowc : adjustGamma(rsrgb);\n  const g = gsrgb <= 0.03928 ? gsrgb * lowc : adjustGamma(gsrgb);\n  const b = bsrgb <= 0.03928 ? bsrgb * lowc : adjustGamma(bsrgb);\n\n  return r * rc + g * gc + b * bc;\n}\n"],"names":["const","rc","gc","bc","lowc","adjustGamma","_","Math","pow","rgb","rsrgb","gsrgb","bsrgb","r","g","b"],"mappings":"AAQAA,IAAMC,EAAK,MACLC,EAAK,MACLC,EAAK,MAELC,EAAO,EAAI,MAEjB,SAASC,EAAYC,GACnB,OAAOC,KAAKC,KAAKF,EAAI,MAAS,MAAO,oBAYxB,SAA2BG,GACxCT,IAAMU,EAAQD,EAAI,GAAK,IACjBE,EAAQF,EAAI,GAAK,IACjBG,EAAQH,EAAI,GAAK,IAEjBI,EAAIH,GAAS,OAAUA,EAAQN,EAAOC,EAAYK,GAClDI,EAAIH,GAAS,OAAUA,EAAQP,EAAOC,EAAYM,GAClDI,EAAIH,GAAS,OAAUA,EAAQR,EAAOC,EAAYO,GAExD,OAAOC,EAAIZ,EAAKa,EAAIZ,EAAKa,EAAIZ"}