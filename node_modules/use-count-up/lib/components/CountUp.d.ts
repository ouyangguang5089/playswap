/// <reference types="react" />
import PropTypes from 'prop-types';
import { CountUpProps } from '../types';
declare const CountUp: {
    (props: CountUpProps): JSX.Element;
    displayName: string;
    propTypes: {
        isCounting: PropTypes.Requireable<boolean>;
        start: PropTypes.Requireable<number>;
        end: PropTypes.Requireable<number>;
        duration: PropTypes.Requireable<number>;
        decimalPlaces: PropTypes.Requireable<number>;
        decimalSeparator: PropTypes.Requireable<string>;
        thousandsSeparator: PropTypes.Requireable<string>;
        prefix: PropTypes.Requireable<string>;
        suffix: PropTypes.Requireable<string>;
        shouldUseToLocaleString: PropTypes.Requireable<boolean>;
        toLocaleStringParams: PropTypes.Requireable<PropTypes.InferProps<{
            locale: PropTypes.Requireable<string | (string | null | undefined)[]>;
            options: PropTypes.Requireable<object>;
        }>>;
        fallbackPrefix: PropTypes.Requireable<string>;
        fallbackSuffix: PropTypes.Requireable<string>;
        autoResetKey: PropTypes.Requireable<string | number>;
        easing: PropTypes.Requireable<string | ((...args: any[]) => any)>;
        onComplete: PropTypes.Requireable<(...args: any[]) => any>;
        formatter: PropTypes.Requireable<(...args: any[]) => any>;
        children: PropTypes.Requireable<(...args: any[]) => any>;
    };
};
export { CountUp };
