{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport baseLogger from './logger.js';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil = /*#__PURE__*/function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase(); // if lenght 2 guess it's a country\n\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks.default || []; // asume we have an object defining fallbacks\n\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks.default;\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this.isWhitelisted(c)) {\n          codes.push(c);\n        } else {\n          _this.logger.warn(\"rejecting non-whitelisted language code: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\nexport default LanguageUtil;","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/i18next/dist/es/LanguageUtils.js"],"names":["_classCallCheck","_createClass","baseLogger","capitalize","string","charAt","toUpperCase","slice","LanguageUtil","options","whitelist","logger","create","key","value","getScriptPartFromCode","code","indexOf","p","split","length","pop","formatLanguageCode","join","getLanguagePartFromCode","specialCases","lowerCaseLng","map","part","toLowerCase","cleanCode","isWhitelisted","load","nonExplicitWhitelist","getFallbackCodes","fallbacks","Object","prototype","toString","apply","default","found","toResolveHierarchy","fallbackCode","_this","fallbackCodes","fallbackLng","codes","addCode","c","push","warn","concat","forEach","fc"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport baseLogger from './logger.js';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil =\n/*#__PURE__*/\nfunction () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase(); // if lenght 2 guess it's a country\n\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks.default || []; // asume we have an object defining fallbacks\n\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks.default;\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this.isWhitelisted(c)) {\n          codes.push(c);\n        } else {\n          _this.logger.warn(\"rejecting non-whitelisted language code: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\nexport default LanguageUtil;"]},"metadata":{},"sourceType":"module"}