{"ast":null,"code":"import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{TradeType}from'@uniswap/sdk';import React,{useContext,useMemo,useState}from'react';import{Repeat}from'react-feather';import{Text}from'rebass';import{ThemeContext}from'styled-components';import{Field}from'../../state/swap/actions';import{TYPE}from'../../theme';import{computeSlippageAdjustedAmounts,computeTradePriceBreakdown,formatExecutionPrice,warningSeverity}from'../../utils/prices';import{ButtonError}from'../Button';import{AutoColumn}from'../Column';import QuestionHelper from'../QuestionHelper';import{AutoRow,RowBetween,RowFixed}from'../Row';import FormattedPriceImpact from'./FormattedPriceImpact';import{StyledBalanceMaxMini,SwapCallbackError}from'./styleds';export default function SwapModalFooter(_ref){var _slippageAdjustedAmou,_slippageAdjustedAmou2,_slippageAdjustedAmou3,_slippageAdjustedAmou4;var trade=_ref.trade,onConfirm=_ref.onConfirm,allowedSlippage=_ref.allowedSlippage,swapErrorMessage=_ref.swapErrorMessage,disabledConfirm=_ref.disabledConfirm;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showInverted=_useState2[0],setShowInverted=_useState2[1];var theme=useContext(ThemeContext);var slippageAdjustedAmounts=useMemo(function(){return computeSlippageAdjustedAmounts(trade,allowedSlippage);},[allowedSlippage,trade]);var _useMemo=useMemo(function(){return computeTradePriceBreakdown(trade);},[trade]),priceImpactWithoutFee=_useMemo.priceImpactWithoutFee,realizedLPFee=_useMemo.realizedLPFee;var severity=warningSeverity(priceImpactWithoutFee);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoColumn,{gap:\"0px\"},/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(Text,{fontWeight:400,fontSize:14,color:theme.text2},\"Price\"),/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:14,color:theme.text1,style:{justifyContent:'center',alignItems:'center',display:'flex',textAlign:'right',paddingLeft:'10px'}},formatExecutionPrice(trade,showInverted),/*#__PURE__*/React.createElement(StyledBalanceMaxMini,{onClick:function onClick(){return setShowInverted(!showInverted);}},/*#__PURE__*/React.createElement(Repeat,{size:14})))),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,fontWeight:400,color:theme.text2},trade.tradeType===TradeType.EXACT_INPUT?'Minimum received':'Maximum sold'),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"})),/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14},trade.tradeType===TradeType.EXACT_INPUT?(_slippageAdjustedAmou=(_slippageAdjustedAmou2=slippageAdjustedAmounts[Field.OUTPUT])===null||_slippageAdjustedAmou2===void 0?void 0:_slippageAdjustedAmou2.toSignificant(4))!==null&&_slippageAdjustedAmou!==void 0?_slippageAdjustedAmou:'-':(_slippageAdjustedAmou3=(_slippageAdjustedAmou4=slippageAdjustedAmounts[Field.INPUT])===null||_slippageAdjustedAmou4===void 0?void 0:_slippageAdjustedAmou4.toSignificant(4))!==null&&_slippageAdjustedAmou3!==void 0?_slippageAdjustedAmou3:'-'),/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,marginLeft:'4px'},trade.tradeType===TradeType.EXACT_INPUT?trade.outputAmount.currency.symbol:trade.inputAmount.currency.symbol))),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{color:theme.text2,fontSize:14,fontWeight:400},\"Price Impact\"),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"The difference between the market price and your price due to trade size.\"})),/*#__PURE__*/React.createElement(FormattedPriceImpact,{priceImpact:priceImpactWithoutFee})),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14,fontWeight:400,color:theme.text2},\"Liquidity Provider Fee\"),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\"})),/*#__PURE__*/React.createElement(TYPE.black,{fontSize:14},realizedLPFee?(realizedLPFee===null||realizedLPFee===void 0?void 0:realizedLPFee.toSignificant(6))+' '+trade.inputAmount.currency.symbol:'-'))),/*#__PURE__*/React.createElement(AutoRow,null,/*#__PURE__*/React.createElement(ButtonError,{onClick:onConfirm,disabled:disabledConfirm,error:severity>2,style:{margin:'10px 0 0 0'},id:\"confirm-swap-or-send\"},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500},severity>2?'Swap Anyway':'Confirm Swap')),swapErrorMessage?/*#__PURE__*/React.createElement(SwapCallbackError,{error:swapErrorMessage}):null));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/components/swap/SwapModalFooter.tsx"],"names":["TradeType","React","useContext","useMemo","useState","Repeat","Text","ThemeContext","Field","TYPE","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","warningSeverity","ButtonError","AutoColumn","QuestionHelper","AutoRow","RowBetween","RowFixed","FormattedPriceImpact","StyledBalanceMaxMini","SwapCallbackError","SwapModalFooter","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","theme","slippageAdjustedAmounts","priceImpactWithoutFee","realizedLPFee","severity","text2","text1","justifyContent","alignItems","display","textAlign","paddingLeft","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","outputAmount","currency","symbol","inputAmount","margin"],"mappings":"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","sourcesContent":["import { Trade, TradeType } from '@uniswap/sdk'\nimport React, { useContext, useMemo, useState } from 'react'\nimport { Repeat } from 'react-feather'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { Field } from '../../state/swap/actions'\nimport { TYPE } from '../../theme'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity\n} from '../../utils/prices'\nimport { ButtonError } from '../Button'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const theme = useContext(ThemeContext)\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    allowedSlippage,\n    trade\n  ])\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontWeight={400} fontSize={14} color={theme.text2}>\n            Price\n          </Text>\n          <Text\n            fontWeight={500}\n            fontSize={14}\n            color={theme.text1}\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px'\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </TYPE.black>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <TYPE.black fontSize={14}>\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </TYPE.black>\n            <TYPE.black fontSize={14} marginLeft={'4px'}>\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </TYPE.black>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black color={theme.text2} fontSize={14} fontWeight={400}>\n              Price Impact\n            </TYPE.black>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              Liquidity Provider Fee\n            </TYPE.black>\n            <QuestionHelper text=\"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\" />\n          </RowFixed>\n          <TYPE.black fontSize={14}>\n            {realizedLPFee ? realizedLPFee?.toSignificant(6) + ' ' + trade.inputAmount.currency.symbol : '-'}\n          </TYPE.black>\n        </RowBetween>\n      </AutoColumn>\n\n      <AutoRow>\n        <ButtonError\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          error={severity > 2}\n          style={{ margin: '10px 0 0 0' }}\n          id=\"confirm-swap-or-send\"\n        >\n          <Text fontSize={20} fontWeight={500}>\n            {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n          </Text>\n        </ButtonError>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}