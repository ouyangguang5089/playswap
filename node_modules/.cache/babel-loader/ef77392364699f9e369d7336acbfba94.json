{"ast":null,"code":"import _taggedTemplateLiteral from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  flex-wrap: nowrap;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext}from'react';import{AlertCircle,CheckCircle}from'react-feather';import styled,{ThemeContext}from'styled-components';import{useActiveWeb3React}from'../../hooks';import{TYPE}from'../../theme';import{ExternalLink}from'../../theme/components';import{getEtherscanLink}from'../../utils';import{AutoColumn}from'../Column';import{AutoRow}from'../Row';var RowNoFlex=styled(AutoRow)(_templateObject());export default function TransactionPopup(_ref){var hash=_ref.hash,success=_ref.success,summary=_ref.summary;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);return/*#__PURE__*/React.createElement(RowNoFlex,null,/*#__PURE__*/React.createElement(\"div\",{style:{paddingRight:16}},success?/*#__PURE__*/React.createElement(CheckCircle,{color:theme.green1,size:24}):/*#__PURE__*/React.createElement(AlertCircle,{color:theme.red1,size:24})),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"8px\"},/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:500},summary!==null&&summary!==void 0?summary:'Hash: '+hash.slice(0,8)+'...'+hash.slice(58,65)),chainId&&/*#__PURE__*/React.createElement(ExternalLink,{href:getEtherscanLink(chainId,hash,'transaction')},\"View on Etherscan\")));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/components/Popups/TransactionPopup.tsx"],"names":["React","useContext","AlertCircle","CheckCircle","styled","ThemeContext","useActiveWeb3React","TYPE","ExternalLink","getEtherscanLink","AutoColumn","AutoRow","RowNoFlex","TransactionPopup","hash","success","summary","chainId","theme","paddingRight","green1","red1","slice"],"mappings":"0UAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CACA,MAAOC,CAAAA,MAAP,EAAiBC,YAAjB,KAAqC,mBAArC,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,OAASC,IAAT,KAAqB,aAArB,CACA,OAASC,YAAT,KAA6B,wBAA7B,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAGR,MAAM,CAACO,OAAD,CAAT,mBAAf,CAIA,cAAe,SAASE,CAAAA,gBAAT,MAQZ,IAPDC,CAAAA,IAOC,MAPDA,IAOC,CANDC,OAMC,MANDA,OAMC,CALDC,OAKC,MALDA,OAKC,yBACmBV,kBAAkB,EADrC,CACOW,OADP,qBACOA,OADP,CAGD,GAAMC,CAAAA,KAAK,CAAGjB,UAAU,CAACI,YAAD,CAAxB,CAEA,mBACE,oBAAC,SAAD,mBACE,2BAAK,KAAK,CAAE,CAAEc,YAAY,CAAE,EAAhB,CAAZ,EACGJ,OAAO,cAAG,oBAAC,WAAD,EAAa,KAAK,CAAEG,KAAK,CAACE,MAA1B,CAAkC,IAAI,CAAE,EAAxC,EAAH,cAAoD,oBAAC,WAAD,EAAa,KAAK,CAAEF,KAAK,CAACG,IAA1B,CAAgC,IAAI,CAAE,EAAtC,EAD9D,CADF,cAIE,oBAAC,UAAD,EAAY,GAAG,CAAC,KAAhB,eACE,oBAAC,IAAD,CAAM,IAAN,EAAW,UAAU,CAAE,GAAvB,EAA6BL,OAA7B,SAA6BA,OAA7B,UAA6BA,OAA7B,CAAwC,SAAWF,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAc,CAAd,CAAX,CAA8B,KAA9B,CAAsCR,IAAI,CAACQ,KAAL,CAAW,EAAX,CAAe,EAAf,CAA9E,CADF,CAEGL,OAAO,eACN,oBAAC,YAAD,EAAc,IAAI,CAAER,gBAAgB,CAACQ,OAAD,CAAUH,IAAV,CAAgB,aAAhB,CAApC,sBAHJ,CAJF,CADF,CAaD","sourcesContent":["import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { TYPE } from '../../theme'\nimport { ExternalLink } from '../../theme/components'\nimport { getEtherscanLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <TYPE.body fontWeight={500}>{summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</TYPE.body>\n        {chainId && (\n          <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>View on Etherscan</ExternalLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}