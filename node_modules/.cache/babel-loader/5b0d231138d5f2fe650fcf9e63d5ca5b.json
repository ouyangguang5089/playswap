{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nfunction decode(textData) {\n  textData = atob(textData);\n  var data = [];\n\n  for (var i = 0; i < textData.length; i++) {\n    data.push(textData.charCodeAt(i));\n  }\n\n  return bytes_1.arrayify(data);\n}\n\nexports.decode = decode;\n\nfunction encode(data) {\n  data = bytes_1.arrayify(data);\n  var textData = \"\";\n\n  for (var i = 0; i < data.length; i++) {\n    textData += String.fromCharCode(data[i]);\n  }\n\n  return btoa(textData);\n}\n\nexports.encode = encode;","map":{"version":3,"sources":["../src.ts/browser.ts"],"names":[],"mappings":"AAAA;;;;;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,SAAgB,MAAhB,CAAuB,QAAvB,EAAuC;AACnC,EAAA,QAAQ,GAAG,IAAI,CAAC,QAAD,CAAf;AACA,MAAM,IAAI,GAAG,EAAb;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACtC,IAAA,IAAI,CAAC,IAAL,CAAU,QAAQ,CAAC,UAAT,CAAoB,CAApB,CAAV;AACH;;AACD,SAAO,OAAA,CAAA,QAAA,CAAS,IAAT,CAAP;AACH;;AAPD,OAAA,CAAA,MAAA,GAAA,MAAA;;AASA,SAAgB,MAAhB,CAAuB,IAAvB,EAAsC;AAClC,EAAA,IAAI,GAAG,OAAA,CAAA,QAAA,CAAS,IAAT,CAAP;AACA,MAAI,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AAClC,IAAA,QAAQ,IAAI,MAAM,CAAC,YAAP,CAAoB,IAAI,CAAC,CAAD,CAAxB,CAAZ;AACH;;AACD,SAAO,IAAI,CAAC,QAAD,CAAX;AACH;;AAPD,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nfunction decode(textData) {\n    textData = atob(textData);\n    var data = [];\n    for (var i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return bytes_1.arrayify(data);\n}\nexports.decode = decode;\nfunction encode(data) {\n    data = bytes_1.arrayify(data);\n    var textData = \"\";\n    for (var i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\nexports.encode = encode;\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"script"}