{"ast":null,"code":"import{useEffect,useRef}from'react';export default function useInterval(callback,delay){var leading=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var savedCallback=useRef();// Remember the latest callback.\nuseEffect(function(){savedCallback.current=callback;},[callback]);// Set up the interval.\nuseEffect(function(){function tick(){var current=savedCallback.current;current&&current();}if(delay!==null){if(leading)tick();var id=setInterval(tick,delay);return function(){return clearInterval(id);};}return undefined;},[delay,leading]);}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/hooks/useInterval.ts"],"names":["useEffect","useRef","useInterval","callback","delay","leading","savedCallback","current","tick","id","setInterval","clearInterval","undefined"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,QAArB,CAA2CC,KAA3C,CAAiF,IAAhBC,CAAAA,OAAgB,2DAAN,IAAM,CAC9F,GAAMC,CAAAA,aAAa,CAAGL,MAAM,EAA5B,CAEA;AACAD,SAAS,CAAC,UAAM,CACdM,aAAa,CAACC,OAAd,CAAwBJ,QAAxB,CACD,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA;AACAH,SAAS,CAAC,UAAM,CACd,QAASQ,CAAAA,IAAT,EAAgB,CACd,GAAMD,CAAAA,OAAO,CAAGD,aAAa,CAACC,OAA9B,CACAA,OAAO,EAAIA,OAAO,EAAlB,CACD,CAED,GAAIH,KAAK,GAAK,IAAd,CAAoB,CAClB,GAAIC,OAAJ,CAAaG,IAAI,GACjB,GAAMC,CAAAA,EAAE,CAAGC,WAAW,CAACF,IAAD,CAAOJ,KAAP,CAAtB,CACA,MAAO,kBAAMO,CAAAA,aAAa,CAACF,EAAD,CAAnB,EAAP,CACD,CACD,MAAOG,CAAAA,SAAP,CACD,CAZQ,CAYN,CAACR,KAAD,CAAQC,OAAR,CAZM,CAAT,CAaD","sourcesContent":["import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current\n      current && current()\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n"]},"metadata":{},"sourceType":"module"}