{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { effectCar } from './medium';\nimport { useMergeRefs } from 'use-callback-ref';\n\nvar nothing = function nothing() {\n  return;\n};\n\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n  var ref = React.useRef(null);\n\n  var _a = React.useState({\n    onScrollCapture: nothing,\n    onWheelCapture: nothing,\n    onTouchMoveCapture: nothing\n  }),\n      callbacks = _a[0],\n      setCallbacks = _a[1];\n\n  var forwardProps = props.forwardProps,\n      children = props.children,\n      className = props.className,\n      removeScrollBar = props.removeScrollBar,\n      enabled = props.enabled,\n      shards = props.shards,\n      sideCar = props.sideCar,\n      noIsolation = props.noIsolation,\n      inert = props.inert,\n      allowPinchZoom = props.allowPinchZoom,\n      rest = tslib_1.__rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\"]);\n\n  var SideCar = sideCar;\n\n  var containerProps = tslib_1.__assign({\n    ref: useMergeRefs([ref, parentRef])\n  }, rest, callbacks);\n\n  return React.createElement(React.Fragment, null, enabled && React.createElement(SideCar, {\n    sideCar: effectCar,\n    removeScrollBar: removeScrollBar,\n    shards: shards,\n    noIsolation: noIsolation,\n    inert: inert,\n    setCallbacks: setCallbacks,\n    allowPinchZoom: !!allowPinchZoom,\n    lockRef: ref\n  }), forwardProps ? React.cloneElement(React.Children.only(children), containerProps) : React.createElement(\"div\", tslib_1.__assign({}, containerProps, {\n    className: className\n  }), children));\n});\nRemoveScroll.defaultProps = {\n  enabled: true,\n  removeScrollBar: true,\n  inert: false\n};\nRemoveScroll.classNames = {\n  fullWidth: fullWidthClassName,\n  zeroRight: zeroRightClassName\n};\nexport { RemoveScroll };","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/react-remove-scroll/dist/es2015/UI.js"],"names":["tslib_1","React","fullWidthClassName","zeroRightClassName","effectCar","useMergeRefs","nothing","RemoveScroll","forwardRef","props","parentRef","ref","useRef","_a","useState","onScrollCapture","onWheelCapture","onTouchMoveCapture","callbacks","setCallbacks","forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","rest","__rest","SideCar","containerProps","__assign","createElement","Fragment","lockRef","cloneElement","Children","only","defaultProps","classNames","fullWidth","zeroRight"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { effectCar } from './medium';\nimport { useMergeRefs } from 'use-callback-ref';\nvar nothing = function () {\n    return;\n};\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, rest = tslib_1.__rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\"]);\n    var SideCar = sideCar;\n    var containerProps = tslib_1.__assign({ ref: useMergeRefs([\n            ref,\n            parentRef\n        ]) }, rest, callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), containerProps)) : (React.createElement(\"div\", tslib_1.__assign({}, containerProps, { className: className }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName\n};\nexport { RemoveScroll };\n"]},"metadata":{},"sourceType":"module"}