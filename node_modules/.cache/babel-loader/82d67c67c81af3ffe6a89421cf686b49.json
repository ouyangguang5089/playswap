{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar CHAIN_ID = 1;\n\nvar WalletLinkConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(WalletLinkConnector, _AbstractConnector);\n\n  function WalletLinkConnector(_ref) {\n    var _this;\n\n    var url = _ref.url,\n        appName = _ref.appName,\n        appLogoUrl = _ref.appLogoUrl,\n        darkMode = _ref.darkMode;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: [CHAIN_ID]\n    }) || this;\n    _this.url = url;\n    _this.appName = appName;\n    _this.appLogoUrl = appLogoUrl;\n    _this.darkMode = darkMode || false;\n    return _this;\n  }\n\n  var _proto = WalletLinkConnector.prototype;\n\n  _proto.activate = function activate() {\n    try {\n      var _temp3 = function _temp3() {\n        return Promise.resolve(_this3.provider.send('eth_requestAccounts').then(function (accounts) {\n          return accounts[0];\n        })).then(function (account) {\n          return {\n            provider: _this3.provider,\n            chainId: CHAIN_ID,\n            account: account\n          };\n        });\n      };\n\n      var _this3 = this;\n\n      var _temp4 = function () {\n        if (!_this3.walletLink) {\n          return Promise.resolve(import('walletlink')).then(function (_ref2) {\n            var WalletLink = _ref2[\"default\"];\n            _this3.walletLink = new WalletLink(_extends({\n              appName: _this3.appName,\n              darkMode: _this3.darkMode\n            }, _this3.appLogoUrl ? {\n              appLogoUrl: _this3.appLogoUrl\n            } : {}));\n            _this3.provider = _this3.walletLink.makeWeb3Provider(_this3.url, CHAIN_ID);\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n\n      return Promise.resolve(_this5.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getChainId = function getChainId() {\n    return Promise.resolve(CHAIN_ID);\n  };\n\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this7 = this;\n\n      return Promise.resolve(_this7.provider.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.deactivate = function deactivate() {};\n\n  _proto.close = function close() {\n    try {\n      var _this9 = this;\n\n      _this9.provider.close();\n\n      _this9.emitDeactivate();\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return WalletLinkConnector;\n}(AbstractConnector);\n\nexport { WalletLinkConnector };","map":{"version":3,"sources":["../src/index.ts"],"names":["CHAIN_ID","WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","walletLink","WalletLink","account","accounts","provider","chainId","deactivate"],"mappings":"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","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: [CHAIN_ID] })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletLink) {\n      const { default: WalletLink } = await import('walletlink')\n      this.walletLink = new WalletLink({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const account = await this.provider.send('eth_requestAccounts').then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.provider, chainId: CHAIN_ID, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return CHAIN_ID\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {}\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}