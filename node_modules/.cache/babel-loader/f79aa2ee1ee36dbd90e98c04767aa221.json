{"ast":null,"code":"import{CurrencyAmount,ETHER,JSBI}from'@uniswap/sdk';import{MIN_ETH}from'../constants';/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */export function maxAmountSpend(currencyAmount){if(!currencyAmount)return undefined;if(currencyAmount.currency===ETHER){if(JSBI.greaterThan(currencyAmount.raw,MIN_ETH)){return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw,MIN_ETH));}else{return CurrencyAmount.ether(JSBI.BigInt(0));}}return currencyAmount;}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/utils/maxAmountSpend.ts"],"names":["CurrencyAmount","ETHER","JSBI","MIN_ETH","maxAmountSpend","currencyAmount","undefined","currency","greaterThan","raw","ether","subtract","BigInt"],"mappings":"AAAA,OAASA,cAAT,CAAyBC,KAAzB,CAAgCC,IAAhC,KAA4C,cAA5C,CACA,OAASC,OAAT,KAAwB,cAAxB,CAEA;;;GAIA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,cAAxB,CAAqF,CAC1F,GAAI,CAACA,cAAL,CAAqB,MAAOC,CAAAA,SAAP,CACrB,GAAID,cAAc,CAACE,QAAf,GAA4BN,KAAhC,CAAuC,CACrC,GAAIC,IAAI,CAACM,WAAL,CAAiBH,cAAc,CAACI,GAAhC,CAAqCN,OAArC,CAAJ,CAAmD,CACjD,MAAOH,CAAAA,cAAc,CAACU,KAAf,CAAqBR,IAAI,CAACS,QAAL,CAAcN,cAAc,CAACI,GAA7B,CAAkCN,OAAlC,CAArB,CAAP,CACD,CAFD,IAEO,CACL,MAAOH,CAAAA,cAAc,CAACU,KAAf,CAAqBR,IAAI,CAACU,MAAL,CAAY,CAAZ,CAArB,CAAP,CACD,CACF,CACD,MAAOP,CAAAA,cAAP,CACD","sourcesContent":["import { CurrencyAmount, ETHER, JSBI } from '@uniswap/sdk'\nimport { MIN_ETH } from '../constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH))\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0))\n    }\n  }\n  return currencyAmount\n}\n"]},"metadata":{},"sourceType":"module"}