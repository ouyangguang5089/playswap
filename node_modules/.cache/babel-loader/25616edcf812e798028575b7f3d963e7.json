{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getQueryString(url) {\n  var pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n  var queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n  return queryString;\n}\n\nexports.getQueryString = getQueryString;\n\nfunction appendToQueryString(queryString, newQueryParams) {\n  var queryParams = parseQueryString(queryString);\n  queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n  queryString = formatQueryString(queryParams);\n  return queryString;\n}\n\nexports.appendToQueryString = appendToQueryString;\n\nfunction parseQueryString(queryString) {\n  var result = {};\n  var pairs = (queryString[0] === \"?\" ? queryString.substr(1) : queryString).split(\"&\");\n\n  for (var i = 0; i < pairs.length; i++) {\n    var keyArr = pairs[i].match(/\\w+(?==)/i) || [];\n    var valueArr = pairs[i].match(/=.+/i) || [];\n\n    if (keyArr[0]) {\n      result[decodeURIComponent(keyArr[0])] = decodeURIComponent(valueArr[0].substr(1));\n    }\n  }\n\n  return result;\n}\n\nexports.parseQueryString = parseQueryString;\n\nfunction formatQueryString(queryParams) {\n  var result = \"\";\n  var keys = Object.keys(queryParams);\n\n  if (keys) {\n    keys.forEach(function (key, idx) {\n      var value = queryParams[key];\n\n      if (idx === 0) {\n        result = \"?\".concat(key, \"=\").concat(value);\n      } else {\n        result = result + \"&\".concat(key, \"=\").concat(value);\n      }\n    });\n  }\n\n  return result;\n}\n\nexports.formatQueryString = formatQueryString;","map":{"version":3,"sources":["../../src/url.ts"],"names":[],"mappings":";;;;;;AAAA,SAAgB,cAAhB,CAA+B,GAA/B,EAA0C;AACxC,MAAM,OAAO,GAAuB,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAA1B,GAA6C,SAAjF;AAEA,MAAM,WAAW,GAAW,OAAO,OAAP,KAAmB,WAAnB,GAAiC,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAjC,GAAuD,EAAnF;AAEA,SAAO,WAAP;AACD;;AAND,OAAA,CAAA,cAAA,GAAA,cAAA;;AAQA,SAAgB,mBAAhB,CAAoC,WAApC,EAAyD,cAAzD,EAA4E;AAC1E,MAAI,WAAW,GAAG,gBAAgB,CAAC,WAAD,CAAlC;AAEA,EAAA,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,WAAR,CAAA,EAAwB,cAAxB,CAAX;AAEA,EAAA,WAAW,GAAG,iBAAiB,CAAC,WAAD,CAA/B;AAEA,SAAO,WAAP;AACD;;AARD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAUA,SAAgB,gBAAhB,CAAiC,WAAjC,EAAoD;AAClD,MAAM,MAAM,GAAQ,EAApB;AAEA,MAAM,KAAK,GAAG,CAAC,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAnB,GAAyB,WAAW,CAAC,MAAZ,CAAmB,CAAnB,CAAzB,GAAiD,WAAlD,EAA+D,KAA/D,CAAqE,GAArE,CAAd;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,QAAM,MAAM,GAAa,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,WAAf,KAA+B,EAAxD;AACA,QAAM,QAAQ,GAAa,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,MAAf,KAA0B,EAArD;;AACA,QAAI,MAAM,CAAC,CAAD,CAAV,EAAe;AACb,MAAA,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAD,CAAP,CAAnB,CAAN,GAAwC,kBAAkB,CAAC,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,CAAmB,CAAnB,CAAD,CAA1D;AACD;AACF;;AAED,SAAO,MAAP;AACD;;AAdD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAgBA,SAAgB,iBAAhB,CAAkC,WAAlC,EAAkD;AAChD,MAAI,MAAM,GAAG,EAAb;AAEA,MAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,WAAZ,CAAb;;AAEA,MAAI,IAAJ,EAAU;AACR,IAAA,IAAI,CAAC,OAAL,CAAa,UAAC,GAAD,EAAc,GAAd,EAA6B;AACxC,UAAM,KAAK,GAAG,WAAW,CAAC,GAAD,CAAzB;;AACA,UAAI,GAAG,KAAK,CAAZ,EAAe;AACb,QAAA,MAAM,cAAO,GAAP,cAAc,KAAd,CAAN;AACD,OAFD,MAEO;AACL,QAAA,MAAM,GAAG,MAAM,cAAO,GAAP,cAAc,KAAd,CAAf;AACD;AACF,KAPD;AAQD;;AAED,SAAO,MAAP;AACD;;AAjBD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getQueryString(url) {\n    const pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n    const queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n    return queryString;\n}\nexports.getQueryString = getQueryString;\nfunction appendToQueryString(queryString, newQueryParams) {\n    let queryParams = parseQueryString(queryString);\n    queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n    queryString = formatQueryString(queryParams);\n    return queryString;\n}\nexports.appendToQueryString = appendToQueryString;\nfunction parseQueryString(queryString) {\n    const result = {};\n    const pairs = (queryString[0] === \"?\" ? queryString.substr(1) : queryString).split(\"&\");\n    for (let i = 0; i < pairs.length; i++) {\n        const keyArr = pairs[i].match(/\\w+(?==)/i) || [];\n        const valueArr = pairs[i].match(/=.+/i) || [];\n        if (keyArr[0]) {\n            result[decodeURIComponent(keyArr[0])] = decodeURIComponent(valueArr[0].substr(1));\n        }\n    }\n    return result;\n}\nexports.parseQueryString = parseQueryString;\nfunction formatQueryString(queryParams) {\n    let result = \"\";\n    const keys = Object.keys(queryParams);\n    if (keys) {\n        keys.forEach((key, idx) => {\n            const value = queryParams[key];\n            if (idx === 0) {\n                result = `?${key}=${value}`;\n            }\n            else {\n                result = result + `&${key}=${value}`;\n            }\n        });\n    }\n    return result;\n}\nexports.formatQueryString = formatQueryString;\n//# sourceMappingURL=url.js.map"]},"metadata":{},"sourceType":"script"}