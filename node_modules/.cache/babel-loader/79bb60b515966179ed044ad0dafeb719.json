{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crypto_1 = __importDefault(require(\"crypto\"));\n\nvar constants_1 = require(\"../constants\");\n\nvar helpers_1 = require(\"../helpers\");\n\nfunction nodeRandomBytes(length) {\n  return crypto_1.default.randomBytes(length);\n}\n\nexports.nodeRandomBytes = nodeRandomBytes;\n\nfunction nodeAesEncrypt(iv, key, data) {\n  var cipher = crypto_1.default.createCipheriv(constants_1.AES_NODE_ALGO, key, iv);\n  return helpers_1.concatBuffers(cipher.update(data), cipher.final());\n}\n\nexports.nodeAesEncrypt = nodeAesEncrypt;\n\nfunction nodeAesDecrypt(iv, key, data) {\n  var decipher = crypto_1.default.createDecipheriv(constants_1.AES_NODE_ALGO, key, iv);\n  return helpers_1.concatBuffers(decipher.update(data), decipher.final());\n}\n\nexports.nodeAesDecrypt = nodeAesDecrypt;\n\nfunction nodeHmacSha256Sign(key, data) {\n  return crypto_1.default.createHmac(constants_1.HMAC_NODE_ALGO, Buffer.from(key)).update(data).digest();\n}\n\nexports.nodeHmacSha256Sign = nodeHmacSha256Sign;\n\nfunction nodeHmacSha512Sign(key, data) {\n  return crypto_1.default.createHmac(constants_1.SHA512_NODE_ALGO, Buffer.from(key)).update(data).digest();\n}\n\nexports.nodeHmacSha512Sign = nodeHmacSha512Sign;\n\nfunction nodeSha256(data) {\n  return crypto_1.default.createHash(constants_1.SHA256_NODE_ALGO).update(data).digest();\n}\n\nexports.nodeSha256 = nodeSha256;\n\nfunction nodeSha512(data) {\n  return crypto_1.default.createHash(constants_1.SHA512_NODE_ALGO).update(data).digest();\n}\n\nexports.nodeSha512 = nodeSha512;\n\nfunction nodeRipemd160(data) {\n  return crypto_1.default.createHash(constants_1.RIPEMD160_NODE_ALGO).update(data).digest();\n}\n\nexports.nodeRipemd160 = nodeRipemd160;","map":{"version":3,"sources":["../../../src/lib/node.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAOA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAEA,SAAgB,eAAhB,CAAgC,MAAhC,EAA8C;AAC5C,SAAO,QAAA,CAAA,OAAA,CAAO,WAAP,CAAmB,MAAnB,CAAP;AACD;;AAFD,OAAA,CAAA,eAAA,GAAA,eAAA;;AAIA,SAAgB,cAAhB,CAA+B,EAA/B,EAA2C,GAA3C,EAAwD,IAAxD,EAAoE;AAClE,MAAM,MAAM,GAAG,QAAA,CAAA,OAAA,CAAO,cAAP,CAAsB,WAAA,CAAA,aAAtB,EAAqC,GAArC,EAA0C,EAA1C,CAAf;AACA,SAAO,SAAA,CAAA,aAAA,CAAc,MAAM,CAAC,MAAP,CAAc,IAAd,CAAd,EAAmC,MAAM,CAAC,KAAP,EAAnC,CAAP;AACD;;AAHD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAKA,SAAgB,cAAhB,CAA+B,EAA/B,EAA2C,GAA3C,EAAwD,IAAxD,EAAoE;AAClE,MAAM,QAAQ,GAAG,QAAA,CAAA,OAAA,CAAO,gBAAP,CAAwB,WAAA,CAAA,aAAxB,EAAuC,GAAvC,EAA4C,EAA5C,CAAjB;AACA,SAAO,SAAA,CAAA,aAAA,CAAc,QAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAd,EAAqC,QAAQ,CAAC,KAAT,EAArC,CAAP;AACD;;AAHD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAKA,SAAgB,kBAAhB,CAAmC,GAAnC,EAAgD,IAAhD,EAA4D;AAC1D,SAAO,QAAA,CAAA,OAAA,CACJ,UADI,CACO,WAAA,CAAA,cADP,EACuB,MAAM,CAAC,IAAP,CAAY,GAAZ,CADvB,EAEJ,MAFI,CAEG,IAFH,EAGJ,MAHI,EAAP;AAID;;AALD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAOA,SAAgB,kBAAhB,CAAmC,GAAnC,EAAgD,IAAhD,EAA4D;AAC1D,SAAO,QAAA,CAAA,OAAA,CACJ,UADI,CACO,WAAA,CAAA,gBADP,EACyB,MAAM,CAAC,IAAP,CAAY,GAAZ,CADzB,EAEJ,MAFI,CAEG,IAFH,EAGJ,MAHI,EAAP;AAID;;AALD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAOA,SAAgB,UAAhB,CAA2B,IAA3B,EAAuC;AACrC,SAAO,QAAA,CAAA,OAAA,CACJ,UADI,CACO,WAAA,CAAA,gBADP,EAEJ,MAFI,CAEG,IAFH,EAGJ,MAHI,EAAP;AAID;;AALD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAOA,SAAgB,UAAhB,CAA2B,IAA3B,EAAuC;AACrC,SAAO,QAAA,CAAA,OAAA,CACJ,UADI,CACO,WAAA,CAAA,gBADP,EAEJ,MAFI,CAEG,IAFH,EAGJ,MAHI,EAAP;AAID;;AALD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAOA,SAAgB,aAAhB,CAA8B,IAA9B,EAA0C;AACxC,SAAO,QAAA,CAAA,OAAA,CACJ,UADI,CACO,WAAA,CAAA,mBADP,EAEJ,MAFI,CAEG,IAFH,EAGJ,MAHI,EAAP;AAID;;AALD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst constants_1 = require(\"../constants\");\nconst helpers_1 = require(\"../helpers\");\nfunction nodeRandomBytes(length) {\n    return crypto_1.default.randomBytes(length);\n}\nexports.nodeRandomBytes = nodeRandomBytes;\nfunction nodeAesEncrypt(iv, key, data) {\n    const cipher = crypto_1.default.createCipheriv(constants_1.AES_NODE_ALGO, key, iv);\n    return helpers_1.concatBuffers(cipher.update(data), cipher.final());\n}\nexports.nodeAesEncrypt = nodeAesEncrypt;\nfunction nodeAesDecrypt(iv, key, data) {\n    const decipher = crypto_1.default.createDecipheriv(constants_1.AES_NODE_ALGO, key, iv);\n    return helpers_1.concatBuffers(decipher.update(data), decipher.final());\n}\nexports.nodeAesDecrypt = nodeAesDecrypt;\nfunction nodeHmacSha256Sign(key, data) {\n    return crypto_1.default\n        .createHmac(constants_1.HMAC_NODE_ALGO, Buffer.from(key))\n        .update(data)\n        .digest();\n}\nexports.nodeHmacSha256Sign = nodeHmacSha256Sign;\nfunction nodeHmacSha512Sign(key, data) {\n    return crypto_1.default\n        .createHmac(constants_1.SHA512_NODE_ALGO, Buffer.from(key))\n        .update(data)\n        .digest();\n}\nexports.nodeHmacSha512Sign = nodeHmacSha512Sign;\nfunction nodeSha256(data) {\n    return crypto_1.default\n        .createHash(constants_1.SHA256_NODE_ALGO)\n        .update(data)\n        .digest();\n}\nexports.nodeSha256 = nodeSha256;\nfunction nodeSha512(data) {\n    return crypto_1.default\n        .createHash(constants_1.SHA512_NODE_ALGO)\n        .update(data)\n        .digest();\n}\nexports.nodeSha512 = nodeSha512;\nfunction nodeRipemd160(data) {\n    return crypto_1.default\n        .createHash(constants_1.RIPEMD160_NODE_ALGO)\n        .update(data)\n        .digest();\n}\nexports.nodeRipemd160 = nodeRipemd160;\n//# sourceMappingURL=node.js.map"]},"metadata":{},"sourceType":"script"}