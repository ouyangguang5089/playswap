{"ast":null,"code":"import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Pair,Token}from'@uniswap/sdk';import flatMap from'lodash.flatmap';import ReactGA from'react-ga';import{useCallback,useMemo}from'react';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{BASES_TO_TRACK_LIQUIDITY_FOR,PINNED_PAIRS}from'../../constants';import{useActiveWeb3React}from'../../hooks';import{useAllTokens}from'../../hooks/Tokens';import{addSerializedPair,addSerializedToken,removeSerializedToken,updateUserDarkMode,updateUserDeadline,updateUserExpertMode,updateUserSlippageTolerance,toggleURLWarning,updateUserSingleHopOnly}from'./actions';function serializeToken(token){return{chainId:token.chainId,address:token.address,decimals:token.decimals,symbol:token.symbol,name:token.name};}function deserializeToken(serializedToken){return new Token(serializedToken.chainId,serializedToken.address,serializedToken.decimals,serializedToken.symbol,serializedToken.name);}export function useIsDarkMode(){var _useSelector=useSelector(function(_ref){var _ref$user=_ref.user,matchesDarkMode=_ref$user.matchesDarkMode,userDarkMode=_ref$user.userDarkMode;return{userDarkMode:userDarkMode,matchesDarkMode:matchesDarkMode};},shallowEqual),userDarkMode=_useSelector.userDarkMode,matchesDarkMode=_useSelector.matchesDarkMode;return userDarkMode===null?matchesDarkMode:userDarkMode;}export function useDarkModeManager(){var dispatch=useDispatch();var darkMode=useIsDarkMode();var toggleSetDarkMode=useCallback(function(){dispatch(updateUserDarkMode({userDarkMode:!darkMode}));},[darkMode,dispatch]);return[darkMode,toggleSetDarkMode];}export function useIsExpertMode(){return useSelector(function(state){return state.user.userExpertMode;});}export function useExpertModeManager(){var dispatch=useDispatch();var expertMode=useIsExpertMode();var toggleSetExpertMode=useCallback(function(){dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useUserSingleHopOnly(){var dispatch=useDispatch();var singleHopOnly=useSelector(function(state){return state.user.userSingleHopOnly;});var setSingleHopOnly=useCallback(function(newSingleHopOnly){ReactGA.event({category:'Routing',action:newSingleHopOnly?'enable single hop':'disable single hop'});dispatch(updateUserSingleHopOnly({userSingleHopOnly:newSingleHopOnly}));},[dispatch]);return[singleHopOnly,setSingleHopOnly];}export function useUserSlippageTolerance(){var dispatch=useDispatch();var userSlippageTolerance=useSelector(function(state){return state.user.userSlippageTolerance;});var setUserSlippageTolerance=useCallback(function(userSlippageTolerance){dispatch(updateUserSlippageTolerance({userSlippageTolerance:userSlippageTolerance}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useUserTransactionTTL(){var dispatch=useDispatch();var userDeadline=useSelector(function(state){return state.user.userDeadline;});var setUserDeadline=useCallback(function(userDeadline){dispatch(updateUserDeadline({userDeadline:userDeadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){var dispatch=useDispatch();return useCallback(function(token){dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){var dispatch=useDispatch();return useCallback(function(chainId,address){dispatch(removeSerializedToken({chainId:chainId,address:address}));},[dispatch]);}export function useUserAddedTokens(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var serializedTokensMap=useSelector(function(_ref2){var tokens=_ref2.user.tokens;return tokens;});return useMemo(function(){var _serializedTokensMap;if(!chainId)return[];return Object.values((_serializedTokensMap=serializedTokensMap[chainId])!==null&&_serializedTokensMap!==void 0?_serializedTokensMap:{}).map(deserializeToken);},[serializedTokensMap,chainId]);}function serializePair(pair){return{token0:serializeToken(pair.token0),token1:serializeToken(pair.token1)};}export function usePairAdder(){var dispatch=useDispatch();return useCallback(function(pair){dispatch(addSerializedPair({serializedPair:serializePair(pair)}));},[dispatch]);}export function useURLWarningVisible(){return useSelector(function(state){return state.user.URLWarningVisible;});}export function useURLWarningToggle(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleURLWarning());},[dispatch]);}/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */export function toV2LiquidityToken(_ref3){var _ref4=_slicedToArray(_ref3,2),tokenA=_ref4[0],tokenB=_ref4[1];return new Token(tokenA.chainId,Pair.getAddress(tokenA,tokenB),18,'UNI-V2','Uniswap V2');}/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */export function useTrackedTokenPairs(){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var tokens=useAllTokens();// pinned pairs\nvar pinnedPairs=useMemo(function(){var _PINNED_PAIRS$chainId;return chainId?(_PINNED_PAIRS$chainId=PINNED_PAIRS[chainId])!==null&&_PINNED_PAIRS$chainId!==void 0?_PINNED_PAIRS$chainId:[]:[];},[chainId]);// pairs for every token against every base\nvar generatedPairs=useMemo(function(){return chainId?flatMap(Object.keys(tokens),function(tokenAddress){var _BASES_TO_TRACK_LIQUI;var token=tokens[tokenAddress];// for each token on the current chain,\nreturn(// loop though all bases on the current chain\n((_BASES_TO_TRACK_LIQUI=BASES_TO_TRACK_LIQUIDITY_FOR[chainId])!==null&&_BASES_TO_TRACK_LIQUI!==void 0?_BASES_TO_TRACK_LIQUI:[]).// to construct pairs of the given token with each base\nmap(function(base){if(base.address===token.address){return null;}else{return[base,token];}}).filter(function(p){return p!==null;}));}):[];},[tokens,chainId]);// pairs saved by users\nvar savedSerializedPairs=useSelector(function(_ref5){var pairs=_ref5.user.pairs;return pairs;});var userPairs=useMemo(function(){if(!chainId||!savedSerializedPairs)return[];var forChain=savedSerializedPairs[chainId];if(!forChain)return[];return Object.keys(forChain).map(function(pairId){return[deserializeToken(forChain[pairId].token0),deserializeToken(forChain[pairId].token1)];});},[savedSerializedPairs,chainId]);var combinedList=useMemo(function(){return userPairs.concat(generatedPairs).concat(pinnedPairs);},[generatedPairs,pinnedPairs,userPairs]);return useMemo(function(){// dedupes pairs of tokens in the combined list\nvar keyed=combinedList.reduce(function(memo,_ref6){var _ref7=_slicedToArray(_ref6,2),tokenA=_ref7[0],tokenB=_ref7[1];var sorted=tokenA.sortsBefore(tokenB);var key=sorted?\"\".concat(tokenA.address,\":\").concat(tokenB.address):\"\".concat(tokenB.address,\":\").concat(tokenA.address);if(memo[key])return memo;memo[key]=sorted?[tokenA,tokenB]:[tokenB,tokenA];return memo;},{});return Object.keys(keyed).map(function(key){return keyed[key];});},[combinedList]);}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/state/user/hooks.tsx"],"names":["Pair","Token","flatMap","ReactGA","useCallback","useMemo","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","toggleURLWarning","updateUserSingleHopOnly","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","user","matchesDarkMode","userDarkMode","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useIsExpertMode","state","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","event","category","action","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","serializedTokensMap","tokens","Object","values","map","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","useURLWarningToggle","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","pinnedPairs","generatedPairs","keys","tokenAddress","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"mappings":"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","sourcesContent":["import { ChainId, Pair, Token } from '@uniswap/sdk'\nimport flatMap from 'lodash.flatmap'\nimport ReactGA from 'react-ga'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  toggleURLWarning,\n  updateUserSingleHopOnly\n} from './actions'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>(state => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    state => state.user.userSingleHopOnly\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      ReactGA.event({\n        category: 'Routing',\n        action: newSingleHopOnly ? 'enable single hop' : 'disable single hop'\n      })\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch]\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>(state => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>(state => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'UNI-V2', 'Uniswap V2')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), tokenAddress => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map(base => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\n    generatedPairs,\n    pinnedPairs,\n    userPairs\n  ])\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map(key => keyed[key])\n  }, [combinedList])\n}\n"]},"metadata":{},"sourceType":"module"}