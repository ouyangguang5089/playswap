{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\n\nvar toggle = require('state-toggle');\n\nvar vfileLocation = require('vfile-location');\n\nvar unescape = require('./unescape');\n\nvar decode = require('./decode');\n\nvar tokenizer = require('./tokenizer');\n\nmodule.exports = Parser;\n\nfunction Parser(doc, file) {\n  this.file = file;\n  this.offset = {};\n  this.options = xtend(this.options);\n  this.setOptions({});\n  this.inList = false;\n  this.inBlock = false;\n  this.inLink = false;\n  this.atStart = true;\n  this.toOffset = vfileLocation(file).toOffset;\n  this.unescape = unescape(this, 'escape');\n  this.decode = decode(this);\n}\n\nvar proto = Parser.prototype;\n/* Expose core. */\n\nproto.setOptions = require('./set-options');\nproto.parse = require('./parse');\n/* Expose `defaults`. */\n\nproto.options = require('./defaults');\n/* Enter and exit helpers. */\n\nproto.exitStart = toggle('atStart', true);\nproto.enterList = toggle('inList', false);\nproto.enterLink = toggle('inLink', false);\nproto.enterBlock = toggle('inBlock', false);\n/* Nodes that can interupt a paragraph:\n *\n * ```markdown\n * A paragraph, followed by a thematic break.\n * ___\n * ```\n *\n * In the above example, the thematic break “interupts”\n * the paragraph. */\n\nproto.interruptParagraph = [['thematicBreak'], ['atxHeading'], ['fencedCode'], ['blockquote'], ['html'], ['setextHeading', {\n  commonmark: false\n}], ['definition', {\n  commonmark: false\n}], ['footnote', {\n  commonmark: false\n}]];\n/* Nodes that can interupt a list:\n *\n * ```markdown\n * - One\n * ___\n * ```\n *\n * In the above example, the thematic break “interupts”\n * the list. */\n\nproto.interruptList = [['atxHeading', {\n  pedantic: false\n}], ['fencedCode', {\n  pedantic: false\n}], ['thematicBreak', {\n  pedantic: false\n}], ['definition', {\n  commonmark: false\n}], ['footnote', {\n  commonmark: false\n}]];\n/* Nodes that can interupt a blockquote:\n *\n * ```markdown\n * > A paragraph.\n * ___\n * ```\n *\n * In the above example, the thematic break “interupts”\n * the blockquote. */\n\nproto.interruptBlockquote = [['indentedCode', {\n  commonmark: true\n}], ['fencedCode', {\n  commonmark: true\n}], ['atxHeading', {\n  commonmark: true\n}], ['setextHeading', {\n  commonmark: true\n}], ['thematicBreak', {\n  commonmark: true\n}], ['html', {\n  commonmark: true\n}], ['list', {\n  commonmark: true\n}], ['definition', {\n  commonmark: false\n}], ['footnote', {\n  commonmark: false\n}]];\n/* Handlers. */\n\nproto.blockTokenizers = {\n  newline: require('./tokenize/newline'),\n  indentedCode: require('./tokenize/code-indented'),\n  fencedCode: require('./tokenize/code-fenced'),\n  blockquote: require('./tokenize/blockquote'),\n  atxHeading: require('./tokenize/heading-atx'),\n  thematicBreak: require('./tokenize/thematic-break'),\n  list: require('./tokenize/list'),\n  setextHeading: require('./tokenize/heading-setext'),\n  html: require('./tokenize/html-block'),\n  footnote: require('./tokenize/footnote-definition'),\n  definition: require('./tokenize/definition'),\n  table: require('./tokenize/table'),\n  paragraph: require('./tokenize/paragraph')\n};\nproto.inlineTokenizers = {\n  escape: require('./tokenize/escape'),\n  autoLink: require('./tokenize/auto-link'),\n  url: require('./tokenize/url'),\n  html: require('./tokenize/html-inline'),\n  link: require('./tokenize/link'),\n  reference: require('./tokenize/reference'),\n  strong: require('./tokenize/strong'),\n  emphasis: require('./tokenize/emphasis'),\n  deletion: require('./tokenize/delete'),\n  code: require('./tokenize/code-inline'),\n  break: require('./tokenize/break'),\n  text: require('./tokenize/text')\n};\n/* Expose precedence. */\n\nproto.blockMethods = keys(proto.blockTokenizers);\nproto.inlineMethods = keys(proto.inlineTokenizers);\n/* Tokenizers. */\n\nproto.tokenizeBlock = tokenizer('block');\nproto.tokenizeInline = tokenizer('inline');\nproto.tokenizeFactory = tokenizer;\n/* Get all keys in `value`. */\n\nfunction keys(value) {\n  var result = [];\n  var key;\n\n  for (key in value) {\n    result.push(key);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/remark-parse/lib/parser.js"],"names":["xtend","require","toggle","vfileLocation","unescape","decode","tokenizer","module","exports","Parser","doc","file","offset","options","setOptions","inList","inBlock","inLink","atStart","toOffset","proto","prototype","parse","exitStart","enterList","enterLink","enterBlock","interruptParagraph","commonmark","interruptList","pedantic","interruptBlockquote","blockTokenizers","newline","indentedCode","fencedCode","blockquote","atxHeading","thematicBreak","list","setextHeading","html","footnote","definition","table","paragraph","inlineTokenizers","escape","autoLink","url","link","reference","strong","emphasis","deletion","code","break","text","blockMethods","keys","inlineMethods","tokenizeBlock","tokenizeInline","tokenizeFactory","value","result","key","push"],"mappings":"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","sourcesContent":["'use strict';\n\nvar xtend = require('xtend');\nvar toggle = require('state-toggle');\nvar vfileLocation = require('vfile-location');\nvar unescape = require('./unescape');\nvar decode = require('./decode');\nvar tokenizer = require('./tokenizer');\n\nmodule.exports = Parser;\n\nfunction Parser(doc, file) {\n  this.file = file;\n  this.offset = {};\n  this.options = xtend(this.options);\n  this.setOptions({});\n\n  this.inList = false;\n  this.inBlock = false;\n  this.inLink = false;\n  this.atStart = true;\n\n  this.toOffset = vfileLocation(file).toOffset;\n  this.unescape = unescape(this, 'escape');\n  this.decode = decode(this);\n}\n\nvar proto = Parser.prototype;\n\n/* Expose core. */\nproto.setOptions = require('./set-options');\nproto.parse = require('./parse');\n\n/* Expose `defaults`. */\nproto.options = require('./defaults');\n\n/* Enter and exit helpers. */\nproto.exitStart = toggle('atStart', true);\nproto.enterList = toggle('inList', false);\nproto.enterLink = toggle('inLink', false);\nproto.enterBlock = toggle('inBlock', false);\n\n/* Nodes that can interupt a paragraph:\n *\n * ```markdown\n * A paragraph, followed by a thematic break.\n * ___\n * ```\n *\n * In the above example, the thematic break “interupts”\n * the paragraph. */\nproto.interruptParagraph = [\n  ['thematicBreak'],\n  ['atxHeading'],\n  ['fencedCode'],\n  ['blockquote'],\n  ['html'],\n  ['setextHeading', {commonmark: false}],\n  ['definition', {commonmark: false}],\n  ['footnote', {commonmark: false}]\n];\n\n/* Nodes that can interupt a list:\n *\n * ```markdown\n * - One\n * ___\n * ```\n *\n * In the above example, the thematic break “interupts”\n * the list. */\nproto.interruptList = [\n  ['atxHeading', {pedantic: false}],\n  ['fencedCode', {pedantic: false}],\n  ['thematicBreak', {pedantic: false}],\n  ['definition', {commonmark: false}],\n  ['footnote', {commonmark: false}]\n];\n\n/* Nodes that can interupt a blockquote:\n *\n * ```markdown\n * > A paragraph.\n * ___\n * ```\n *\n * In the above example, the thematic break “interupts”\n * the blockquote. */\nproto.interruptBlockquote = [\n  ['indentedCode', {commonmark: true}],\n  ['fencedCode', {commonmark: true}],\n  ['atxHeading', {commonmark: true}],\n  ['setextHeading', {commonmark: true}],\n  ['thematicBreak', {commonmark: true}],\n  ['html', {commonmark: true}],\n  ['list', {commonmark: true}],\n  ['definition', {commonmark: false}],\n  ['footnote', {commonmark: false}]\n];\n\n/* Handlers. */\nproto.blockTokenizers = {\n  newline: require('./tokenize/newline'),\n  indentedCode: require('./tokenize/code-indented'),\n  fencedCode: require('./tokenize/code-fenced'),\n  blockquote: require('./tokenize/blockquote'),\n  atxHeading: require('./tokenize/heading-atx'),\n  thematicBreak: require('./tokenize/thematic-break'),\n  list: require('./tokenize/list'),\n  setextHeading: require('./tokenize/heading-setext'),\n  html: require('./tokenize/html-block'),\n  footnote: require('./tokenize/footnote-definition'),\n  definition: require('./tokenize/definition'),\n  table: require('./tokenize/table'),\n  paragraph: require('./tokenize/paragraph')\n};\n\nproto.inlineTokenizers = {\n  escape: require('./tokenize/escape'),\n  autoLink: require('./tokenize/auto-link'),\n  url: require('./tokenize/url'),\n  html: require('./tokenize/html-inline'),\n  link: require('./tokenize/link'),\n  reference: require('./tokenize/reference'),\n  strong: require('./tokenize/strong'),\n  emphasis: require('./tokenize/emphasis'),\n  deletion: require('./tokenize/delete'),\n  code: require('./tokenize/code-inline'),\n  break: require('./tokenize/break'),\n  text: require('./tokenize/text')\n};\n\n/* Expose precedence. */\nproto.blockMethods = keys(proto.blockTokenizers);\nproto.inlineMethods = keys(proto.inlineTokenizers);\n\n/* Tokenizers. */\nproto.tokenizeBlock = tokenizer('block');\nproto.tokenizeInline = tokenizer('inline');\nproto.tokenizeFactory = tokenizer;\n\n/* Get all keys in `value`. */\nfunction keys(value) {\n  var result = [];\n  var key;\n\n  for (key in value) {\n    result.push(key);\n  }\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"script"}