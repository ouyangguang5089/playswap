{"ast":null,"code":"import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from'react';import{useActiveWeb3React}from'../../hooks';import useDebounce from'../../hooks/useDebounce';import useIsWindowVisible from'../../hooks/useIsWindowVisible';import{updateBlockNumber}from'./actions';import{useDispatch}from'react-redux';export default function Updater(){var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library,chainId=_useActiveWeb3React.chainId;var dispatch=useDispatch();var windowVisible=useIsWindowVisible();var _useState=useState({chainId:chainId,blockNumber:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var blockNumberCallback=useCallback(function(blockNumber){setState(function(state){if(chainId===state.chainId){if(typeof state.blockNumber!=='number')return{chainId:chainId,blockNumber:blockNumber};return{chainId:chainId,blockNumber:Math.max(blockNumber,state.blockNumber)};}return state;});},[chainId,setState]);// attach/detach listeners\nuseEffect(function(){if(!library||!chainId||!windowVisible)return undefined;setState({chainId:chainId,blockNumber:null});library.getBlockNumber().then(blockNumberCallback).catch(function(error){return console.error(\"Failed to get block number for chainId: \".concat(chainId),error);});library.on('block',blockNumberCallback);return function(){library.removeListener('block',blockNumberCallback);};},[dispatch,chainId,library,blockNumberCallback,windowVisible]);var debouncedState=useDebounce(state,100);useEffect(function(){if(!debouncedState.chainId||!debouncedState.blockNumber||!windowVisible)return;dispatch(updateBlockNumber({chainId:debouncedState.chainId,blockNumber:debouncedState.blockNumber}));},[windowVisible,dispatch,debouncedState.blockNumber,debouncedState.chainId]);return null;}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/state/application/updater.ts"],"names":["useCallback","useEffect","useState","useActiveWeb3React","useDebounce","useIsWindowVisible","updateBlockNumber","useDispatch","Updater","library","chainId","dispatch","windowVisible","blockNumber","state","setState","blockNumberCallback","Math","max","undefined","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState"],"mappings":"2JAAA,OAASA,WAAT,CAAsBC,SAAtB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CACA,OAASC,iBAAT,KAAkC,WAAlC,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,cAAe,SAASC,CAAAA,OAAT,EAAyB,yBACTL,kBAAkB,EADT,CAC9BM,OAD8B,qBAC9BA,OAD8B,CACrBC,OADqB,qBACrBA,OADqB,CAEtC,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAEA,GAAMK,CAAAA,aAAa,CAAGP,kBAAkB,EAAxC,CAJsC,cAMZH,QAAQ,CAA8D,CAC9FQ,OAAO,CAAPA,OAD8F,CAE9FG,WAAW,CAAE,IAFiF,CAA9D,CANI,wCAM/BC,KAN+B,eAMxBC,QANwB,eAWtC,GAAMC,CAAAA,mBAAmB,CAAGhB,WAAW,CACrC,SAACa,WAAD,CAAyB,CACvBE,QAAQ,CAAC,SAAAD,KAAK,CAAI,CAChB,GAAIJ,OAAO,GAAKI,KAAK,CAACJ,OAAtB,CAA+B,CAC7B,GAAI,MAAOI,CAAAA,KAAK,CAACD,WAAb,GAA6B,QAAjC,CAA2C,MAAO,CAAEH,OAAO,CAAPA,OAAF,CAAWG,WAAW,CAAXA,WAAX,CAAP,CAC3C,MAAO,CAAEH,OAAO,CAAPA,OAAF,CAAWG,WAAW,CAAEI,IAAI,CAACC,GAAL,CAASL,WAAT,CAAsBC,KAAK,CAACD,WAA5B,CAAxB,CAAP,CACD,CACD,MAAOC,CAAAA,KAAP,CACD,CANO,CAAR,CAOD,CAToC,CAUrC,CAACJ,OAAD,CAAUK,QAAV,CAVqC,CAAvC,CAaA;AACAd,SAAS,CAAC,UAAM,CACd,GAAI,CAACQ,OAAD,EAAY,CAACC,OAAb,EAAwB,CAACE,aAA7B,CAA4C,MAAOO,CAAAA,SAAP,CAE5CJ,QAAQ,CAAC,CAAEL,OAAO,CAAPA,OAAF,CAAWG,WAAW,CAAE,IAAxB,CAAD,CAAR,CAEAJ,OAAO,CACJW,cADH,GAEGC,IAFH,CAEQL,mBAFR,EAGGM,KAHH,CAGS,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACD,KAAR,mDAAyDb,OAAzD,EAAoEa,KAApE,CAAJ,EAHd,EAKAd,OAAO,CAACgB,EAAR,CAAW,OAAX,CAAoBT,mBAApB,EACA,MAAO,WAAM,CACXP,OAAO,CAACiB,cAAR,CAAuB,OAAvB,CAAgCV,mBAAhC,EACD,CAFD,CAGD,CAdQ,CAcN,CAACL,QAAD,CAAWD,OAAX,CAAoBD,OAApB,CAA6BO,mBAA7B,CAAkDJ,aAAlD,CAdM,CAAT,CAgBA,GAAMe,CAAAA,cAAc,CAAGvB,WAAW,CAACU,KAAD,CAAQ,GAAR,CAAlC,CAEAb,SAAS,CAAC,UAAM,CACd,GAAI,CAAC0B,cAAc,CAACjB,OAAhB,EAA2B,CAACiB,cAAc,CAACd,WAA3C,EAA0D,CAACD,aAA/D,CAA8E,OAC9ED,QAAQ,CAACL,iBAAiB,CAAC,CAAEI,OAAO,CAAEiB,cAAc,CAACjB,OAA1B,CAAmCG,WAAW,CAAEc,cAAc,CAACd,WAA/D,CAAD,CAAlB,CAAR,CACD,CAHQ,CAGN,CAACD,aAAD,CAAgBD,QAAhB,CAA0BgB,cAAc,CAACd,WAAzC,CAAsDc,cAAc,CAACjB,OAArE,CAHM,CAAT,CAKA,MAAO,KAAP,CACD","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { useActiveWeb3React } from '../../hooks'\nimport useDebounce from '../../hooks/useDebounce'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\nimport { useDispatch } from 'react-redux'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState(state => {\n        if (chainId === state.chainId) {\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) }\n        }\n        return state\n      })\n    },\n    [chainId, setState]\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch(error => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}