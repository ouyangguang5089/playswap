{"ast":null,"code":"import _taggedTemplateLiteral from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  animation: \",\" 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  0% {\\n    transform: perspective(1000px) rotateY(0deg);\\n  }\\n\\n  100% {\\n    transform: perspective(1000px) rotateY(360deg);\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n\\n  :hover {\\n    cursor: pointer;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\\n  border-radius: 20px;\\n  padding: 1.5rem;\\n  overflow: hidden;\\n  position: relative;\\n  max-width: 360px;\\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect}from'react';import{X}from'react-feather';import styled,{keyframes}from'styled-components';import tokenLogo from'../../assets/images/token-logo.png';import{ButtonPrimary}from'../../components/Button';import{useActiveWeb3React}from'../../hooks';import{ApplicationModal}from'../../state/application/actions';import{useModalOpen,useShowClaimPopup,useToggleSelfClaimModal,useToggleShowClaimPopup}from'../../state/application/hooks';import{useUserHasAvailableClaim,useUserUnclaimedAmount}from'../../state/claim/hooks';import{TYPE}from'../../theme';import{AutoColumn}from'../Column';import{CardBGImage,CardNoise}from'../earn/styled';var StyledClaimPopup=styled(AutoColumn)(_templateObject());var StyledClose=styled(X)(_templateObject2());var rotate=keyframes(_templateObject3());var UniToken=styled.img(_templateObject4(),rotate);export default function ClaimPopup(){var _groupSeparator;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;// dont store these in persisted state yet\nvar showClaimPopup=useShowClaimPopup();var toggleShowClaimPopup=useToggleShowClaimPopup();// toggle for showing this modal\nvar showClaimModal=useModalOpen(ApplicationModal.SELF_CLAIM);var toggleSelfClaimModal=useToggleSelfClaimModal();// const userHasAvailableclaim = useUserHasAvailableClaim()\nvar userHasAvailableclaim=useUserHasAvailableClaim(account);var unclaimedAmount=useUserUnclaimedAmount(account);// listen for available claim and show popup if needed\nuseEffect(function(){if(userHasAvailableclaim){toggleShowClaimPopup();}// the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[userHasAvailableclaim]);return/*#__PURE__*/React.createElement(React.Fragment,null,showClaimPopup&&!showClaimModal&&/*#__PURE__*/React.createElement(StyledClaimPopup,{gap:\"md\"},/*#__PURE__*/React.createElement(CardBGImage,null),/*#__PURE__*/React.createElement(CardNoise,null),/*#__PURE__*/React.createElement(StyledClose,{stroke:\"white\",onClick:toggleShowClaimPopup}),/*#__PURE__*/React.createElement(AutoColumn,{style:{padding:'2rem 0',zIndex:10},justify:\"center\"},/*#__PURE__*/React.createElement(UniToken,{width:\"48px\",src:tokenLogo}),' ',/*#__PURE__*/React.createElement(TYPE.white,{style:{marginTop:'1rem'},fontSize:36,fontWeight:600},unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator={groupSeparator:','})!==null&&_groupSeparator!==void 0?_groupSeparator:'-'),\" UNI\"),/*#__PURE__*/React.createElement(TYPE.white,{style:{paddingTop:'1.25rem',textAlign:'center'},fontWeight:600,color:\"white\"},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"party\"},\"\\uD83C\\uDF89\"),' ',\"UNI has arrived\",' ',/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"party\"},\"\\uD83C\\uDF89\")),/*#__PURE__*/React.createElement(TYPE.subHeader,{style:{paddingTop:'0.5rem',textAlign:'center'},color:\"white\"},\"Thanks for being part of the Uniswap community <3\")),/*#__PURE__*/React.createElement(AutoColumn,{style:{zIndex:10},justify:\"center\"},/*#__PURE__*/React.createElement(ButtonPrimary,{padding:\"8px\",borderRadius:\"8px\",width:'fit-content',onClick:toggleSelfClaimModal},\"Claim your UNI tokens\"))));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/components/Popups/ClaimPopup.tsx"],"names":["React","useEffect","X","styled","keyframes","tokenLogo","ButtonPrimary","useActiveWeb3React","ApplicationModal","useModalOpen","useShowClaimPopup","useToggleSelfClaimModal","useToggleShowClaimPopup","useUserHasAvailableClaim","useUserUnclaimedAmount","TYPE","AutoColumn","CardBGImage","CardNoise","StyledClaimPopup","StyledClose","rotate","UniToken","img","ClaimPopup","account","showClaimPopup","toggleShowClaimPopup","showClaimModal","SELF_CLAIM","toggleSelfClaimModal","userHasAvailableclaim","unclaimedAmount","padding","zIndex","marginTop","toFixed","groupSeparator","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import { TokenAmount } from '@uniswap/sdk'\nimport React, { useEffect } from 'react'\nimport { X } from 'react-feather'\nimport styled, { keyframes } from 'styled-components'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { ButtonPrimary } from '../../components/Button'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ApplicationModal } from '../../state/application/actions'\nimport {\n  useModalOpen,\n  useShowClaimPopup,\n  useToggleSelfClaimModal,\n  useToggleShowClaimPopup\n} from '../../state/application/hooks'\n\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { TYPE } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { CardBGImage, CardNoise } from '../earn/styled'\n\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`\n\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`\n\nexport default function ClaimPopup() {\n  const { account } = useActiveWeb3React()\n\n  // dont store these in persisted state yet\n  const showClaimPopup: boolean = useShowClaimPopup()\n  const toggleShowClaimPopup = useToggleShowClaimPopup()\n\n  // toggle for showing this modal\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM)\n  const toggleSelfClaimModal = useToggleSelfClaimModal()\n\n  // const userHasAvailableclaim = useUserHasAvailableClaim()\n  const userHasAvailableclaim: boolean = useUserHasAvailableClaim(account)\n  const unclaimedAmount: TokenAmount | undefined = useUserUnclaimedAmount(account)\n\n  // listen for available claim and show popup if needed\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      toggleShowClaimPopup()\n    }\n    // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userHasAvailableclaim])\n\n  return (\n    <>\n      {showClaimPopup && !showClaimModal && (\n        <StyledClaimPopup gap=\"md\">\n          <CardBGImage />\n          <CardNoise />\n          <StyledClose stroke=\"white\" onClick={toggleShowClaimPopup} />\n          <AutoColumn style={{ padding: '2rem 0', zIndex: 10 }} justify=\"center\">\n            <UniToken width=\"48px\" src={tokenLogo} />{' '}\n            <TYPE.white style={{ marginTop: '1rem' }} fontSize={36} fontWeight={600}>\n              {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\n            </TYPE.white>\n            <TYPE.white style={{ paddingTop: '1.25rem', textAlign: 'center' }} fontWeight={600} color=\"white\">\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>{' '}\n              UNI has arrived{' '}\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>\n            </TYPE.white>\n            <TYPE.subHeader style={{ paddingTop: '0.5rem', textAlign: 'center' }} color=\"white\">\n              {`Thanks for being part of the Uniswap community <3`}\n            </TYPE.subHeader>\n          </AutoColumn>\n          <AutoColumn style={{ zIndex: 10 }} justify=\"center\">\n            <ButtonPrimary padding=\"8px\" borderRadius=\"8px\" width={'fit-content'} onClick={toggleSelfClaimModal}>\n              Claim your UNI tokens\n            </ButtonPrimary>\n          </AutoColumn>\n        </StyledClaimPopup>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}