{"ast":null,"code":"'use strict';\n\nmodule.exports = thematicBreak;\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_ASTERISK = '*';\nvar C_UNDERSCORE = '_';\nvar C_DASH = '-';\nvar THEMATIC_BREAK_MARKER_COUNT = 3;\n\nfunction thematicBreak(eat, value, silent) {\n  var index = -1;\n  var length = value.length + 1;\n  var subvalue = '';\n  var character;\n  var marker;\n  var markerCount;\n  var queue;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n  }\n\n  if (character !== C_ASTERISK && character !== C_DASH && character !== C_UNDERSCORE) {\n    return;\n  }\n\n  marker = character;\n  subvalue += character;\n  markerCount = 1;\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === marker) {\n      markerCount++;\n      subvalue += queue + marker;\n      queue = '';\n    } else if (character === C_SPACE) {\n      queue += character;\n    } else if (markerCount >= THEMATIC_BREAK_MARKER_COUNT && (!character || character === C_NEWLINE)) {\n      subvalue += queue;\n\n      if (silent) {\n        return true;\n      }\n\n      return eat(subvalue)({\n        type: 'thematicBreak'\n      });\n    } else {\n      return;\n    }\n  }\n}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/remark-parse/lib/tokenize/thematic-break.js"],"names":["module","exports","thematicBreak","C_NEWLINE","C_TAB","C_SPACE","C_ASTERISK","C_UNDERSCORE","C_DASH","THEMATIC_BREAK_MARKER_COUNT","eat","value","silent","index","length","subvalue","character","marker","markerCount","queue","charAt","type"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEA,IAAIC,SAAS,GAAG,IAAhB;AACA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAIC,OAAO,GAAG,GAAd;AACA,IAAIC,UAAU,GAAG,GAAjB;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,MAAM,GAAG,GAAb;AAEA,IAAIC,2BAA2B,GAAG,CAAlC;;AAEA,SAASP,aAAT,CAAuBQ,GAAvB,EAA4BC,KAA5B,EAAmCC,MAAnC,EAA2C;AACzC,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAM,GAAGH,KAAK,CAACG,MAAN,GAAe,CAA5B;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,SAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,KAAJ;;AAEA,SAAO,EAAEN,KAAF,GAAUC,MAAjB,EAAyB;AACvBE,IAAAA,SAAS,GAAGL,KAAK,CAACS,MAAN,CAAaP,KAAb,CAAZ;;AAEA,QAAIG,SAAS,KAAKZ,KAAd,IAAuBY,SAAS,KAAKX,OAAzC,EAAkD;AAChD;AACD;;AAEDU,IAAAA,QAAQ,IAAIC,SAAZ;AACD;;AAED,MACEA,SAAS,KAAKV,UAAd,IACAU,SAAS,KAAKR,MADd,IAEAQ,SAAS,KAAKT,YAHhB,EAIE;AACA;AACD;;AAEDU,EAAAA,MAAM,GAAGD,SAAT;AACAD,EAAAA,QAAQ,IAAIC,SAAZ;AACAE,EAAAA,WAAW,GAAG,CAAd;AACAC,EAAAA,KAAK,GAAG,EAAR;;AAEA,SAAO,EAAEN,KAAF,GAAUC,MAAjB,EAAyB;AACvBE,IAAAA,SAAS,GAAGL,KAAK,CAACS,MAAN,CAAaP,KAAb,CAAZ;;AAEA,QAAIG,SAAS,KAAKC,MAAlB,EAA0B;AACxBC,MAAAA,WAAW;AACXH,MAAAA,QAAQ,IAAII,KAAK,GAAGF,MAApB;AACAE,MAAAA,KAAK,GAAG,EAAR;AACD,KAJD,MAIO,IAAIH,SAAS,KAAKX,OAAlB,EAA2B;AAChCc,MAAAA,KAAK,IAAIH,SAAT;AACD,KAFM,MAEA,IACLE,WAAW,IAAIT,2BAAf,KACC,CAACO,SAAD,IAAcA,SAAS,KAAKb,SAD7B,CADK,EAGL;AACAY,MAAAA,QAAQ,IAAII,KAAZ;;AAEA,UAAIP,MAAJ,EAAY;AACV,eAAO,IAAP;AACD;;AAED,aAAOF,GAAG,CAACK,QAAD,CAAH,CAAc;AAACM,QAAAA,IAAI,EAAE;AAAP,OAAd,CAAP;AACD,KAXM,MAWA;AACL;AACD;AACF;AACF","sourcesContent":["'use strict';\n\nmodule.exports = thematicBreak;\n\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_ASTERISK = '*';\nvar C_UNDERSCORE = '_';\nvar C_DASH = '-';\n\nvar THEMATIC_BREAK_MARKER_COUNT = 3;\n\nfunction thematicBreak(eat, value, silent) {\n  var index = -1;\n  var length = value.length + 1;\n  var subvalue = '';\n  var character;\n  var marker;\n  var markerCount;\n  var queue;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n  }\n\n  if (\n    character !== C_ASTERISK &&\n    character !== C_DASH &&\n    character !== C_UNDERSCORE\n  ) {\n    return;\n  }\n\n  marker = character;\n  subvalue += character;\n  markerCount = 1;\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === marker) {\n      markerCount++;\n      subvalue += queue + marker;\n      queue = '';\n    } else if (character === C_SPACE) {\n      queue += character;\n    } else if (\n      markerCount >= THEMATIC_BREAK_MARKER_COUNT &&\n      (!character || character === C_NEWLINE)\n    ) {\n      subvalue += queue;\n\n      if (silent) {\n        return true;\n      }\n\n      return eat(subvalue)({type: 'thematicBreak'});\n    } else {\n      return;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}