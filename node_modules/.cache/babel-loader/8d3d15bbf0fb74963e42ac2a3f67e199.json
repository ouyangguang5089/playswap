{"ast":null,"code":"import _objectSpread from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from'react';import{useDispatch}from'react-redux';import{Redirect}from'react-router-dom';import{ApplicationModal,setOpenModal}from'../../state/application/actions';// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly(_ref){var location=_ref.location;return/*#__PURE__*/React.createElement(Redirect,{to:_objectSpread(_objectSpread({},location),{},{pathname:'/swap'})});}// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props){var search=props.location.search,outputCurrency=props.match.params.outputCurrency;return/*#__PURE__*/React.createElement(Redirect,{to:_objectSpread(_objectSpread({},props.location),{},{pathname:'/swap',search:search&&search.length>1?\"\".concat(search,\"&outputCurrency=\").concat(outputCurrency):\"?outputCurrency=\".concat(outputCurrency)})});}export function OpenClaimAddressModalAndRedirectToSwap(props){var dispatch=useDispatch();useEffect(function(){dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM));},[dispatch]);return/*#__PURE__*/React.createElement(RedirectPathToSwapOnly,props);}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/pages/Swap/redirects.tsx"],"names":["React","useEffect","useDispatch","Redirect","ApplicationModal","setOpenModal","RedirectPathToSwapOnly","location","pathname","RedirectToSwap","props","search","outputCurrency","match","params","length","OpenClaimAddressModalAndRedirectToSwap","dispatch","ADDRESS_CLAIM"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,QAAT,KAA8C,kBAA9C,CAEA,OAASC,gBAAT,CAA2BC,YAA3B,KAA+C,iCAA/C,CAEA;AACA,MAAO,SAASC,CAAAA,sBAAT,MAAmE,IAAjCC,CAAAA,QAAiC,MAAjCA,QAAiC,CACxE,mBAAO,oBAAC,QAAD,EAAU,EAAE,gCAAOA,QAAP,MAAiBC,QAAQ,CAAE,OAA3B,EAAZ,EAAP,CACD,CAED;AACA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAAgF,IAEvEC,CAAAA,MAFuE,CAMjFD,KANiF,CAEnFH,QAFmF,CAEvEI,MAFuE,CAIvEC,cAJuE,CAMjFF,KANiF,CAGnFG,KAHmF,CAIjFC,MAJiF,CAIvEF,cAJuE,CAQrF,mBACE,oBAAC,QAAD,EACE,EAAE,gCACGF,KAAK,CAACH,QADT,MAEAC,QAAQ,CAAE,OAFV,CAGAG,MAAM,CACJA,MAAM,EAAIA,MAAM,CAACI,MAAP,CAAgB,CAA1B,WACOJ,MADP,4BACgCC,cADhC,4BAEuBA,cAFvB,CAJF,EADJ,EADF,CAYD,CAED,MAAO,SAASI,CAAAA,sCAAT,CAAgDN,KAAhD,CAA4E,CACjF,GAAMO,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACAD,SAAS,CAAC,UAAM,CACdgB,QAAQ,CAACZ,YAAY,CAACD,gBAAgB,CAACc,aAAlB,CAAb,CAAR,CACD,CAFQ,CAEN,CAACD,QAAD,CAFM,CAAT,CAGA,mBAAO,oBAAC,sBAAD,CAA4BP,KAA5B,CAAP,CACD","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { AppDispatch } from '../../state'\nimport { ApplicationModal, setOpenModal } from '../../state/application/actions'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location: { search },\n    match: {\n      params: { outputCurrency }\n    }\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...props.location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`\n      }}\n    />\n  )\n}\n\nexport function OpenClaimAddressModalAndRedirectToSwap(props: RouteComponentProps) {\n  const dispatch = useDispatch<AppDispatch>()\n  useEffect(() => {\n    dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM))\n  }, [dispatch])\n  return <RedirectPathToSwapOnly {...props} />\n}\n"]},"metadata":{},"sourceType":"module"}