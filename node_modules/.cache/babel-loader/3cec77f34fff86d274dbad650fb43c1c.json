{"ast":null,"code":"import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ChainId,currencyEquals,JSBI,Price,WETH}from'@uniswap/sdk';import{useMemo}from'react';import{USDC}from'../constants';import{PairState,usePairs}from'../data/Reserves';import{useActiveWeb3React}from'../hooks';import{wrappedCurrency}from'./wrappedCurrency';/**\n * Returns the price in USDC of the input currency\n * @param currency currency to compute the USDC price of\n */export default function useUSDCPrice(currency){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var wrapped=wrappedCurrency(currency,chainId);var tokenPairs=useMemo(function(){return[[chainId&&wrapped&&currencyEquals(WETH[chainId],wrapped)?undefined:currency,chainId?WETH[chainId]:undefined],[(wrapped===null||wrapped===void 0?void 0:wrapped.equals(USDC))?undefined:wrapped,chainId===ChainId.MAINNET?USDC:undefined],[chainId?WETH[chainId]:undefined,chainId===ChainId.MAINNET?USDC:undefined]];},[chainId,currency,wrapped]);var _usePairs=usePairs(tokenPairs),_usePairs2=_slicedToArray(_usePairs,3),_usePairs2$=_slicedToArray(_usePairs2[0],2),ethPairState=_usePairs2$[0],ethPair=_usePairs2$[1],_usePairs2$2=_slicedToArray(_usePairs2[1],2),usdcPairState=_usePairs2$2[0],usdcPair=_usePairs2$2[1],_usePairs2$3=_slicedToArray(_usePairs2[2],2),usdcEthPairState=_usePairs2$3[0],usdcEthPair=_usePairs2$3[1];return useMemo(function(){if(!currency||!wrapped||!chainId){return undefined;}// handle weth/eth\nif(wrapped.equals(WETH[chainId])){if(usdcPair){var price=usdcPair.priceOf(WETH[chainId]);return new Price(currency,USDC,price.denominator,price.numerator);}else{return undefined;}}// handle usdc\nif(wrapped.equals(USDC)){return new Price(USDC,USDC,'1','1');}var ethPairETHAmount=ethPair===null||ethPair===void 0?void 0:ethPair.reserveOf(WETH[chainId]);var ethPairETHUSDCValue=ethPairETHAmount&&usdcEthPair?usdcEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw:JSBI.BigInt(0);// all other tokens\n// first try the usdc pair\nif(usdcPairState===PairState.EXISTS&&usdcPair&&usdcPair.reserveOf(USDC).greaterThan(ethPairETHUSDCValue)){var _price=usdcPair.priceOf(wrapped);return new Price(currency,USDC,_price.denominator,_price.numerator);}if(ethPairState===PairState.EXISTS&&ethPair&&usdcEthPairState===PairState.EXISTS&&usdcEthPair){if(usdcEthPair.reserveOf(USDC).greaterThan('0')&&ethPair.reserveOf(WETH[chainId]).greaterThan('0')){var ethUsdcPrice=usdcEthPair.priceOf(USDC);var currencyEthPrice=ethPair.priceOf(WETH[chainId]);var usdcPrice=ethUsdcPrice.multiply(currencyEthPrice).invert();return new Price(currency,USDC,usdcPrice.denominator,usdcPrice.numerator);}}return undefined;},[chainId,currency,ethPair,ethPairState,usdcEthPair,usdcEthPairState,usdcPair,usdcPairState,wrapped]);}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/utils/useUSDCPrice.ts"],"names":["ChainId","currencyEquals","JSBI","Price","WETH","useMemo","USDC","PairState","usePairs","useActiveWeb3React","wrappedCurrency","useUSDCPrice","currency","chainId","wrapped","tokenPairs","undefined","equals","MAINNET","ethPairState","ethPair","usdcPairState","usdcPair","usdcEthPairState","usdcEthPair","price","priceOf","denominator","numerator","ethPairETHAmount","reserveOf","ethPairETHUSDCValue","quote","raw","BigInt","EXISTS","greaterThan","ethUsdcPrice","currencyEthPrice","usdcPrice","multiply","invert"],"mappings":"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","sourcesContent":["import { ChainId, Currency, currencyEquals, JSBI, Price, WETH } from '@uniswap/sdk'\nimport { useMemo } from 'react'\nimport { USDC } from '../constants'\nimport { PairState, usePairs } from '../data/Reserves'\nimport { useActiveWeb3React } from '../hooks'\nimport { wrappedCurrency } from './wrappedCurrency'\n\n/**\n * Returns the price in USDC of the input currency\n * @param currency currency to compute the USDC price of\n */\nexport default function useUSDCPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [\n        chainId && wrapped && currencyEquals(WETH[chainId], wrapped) ? undefined : currency,\n        chainId ? WETH[chainId] : undefined\n      ],\n      [wrapped?.equals(USDC) ? undefined : wrapped, chainId === ChainId.MAINNET ? USDC : undefined],\n      [chainId ? WETH[chainId] : undefined, chainId === ChainId.MAINNET ? USDC : undefined]\n    ],\n    [chainId, currency, wrapped]\n  )\n  const [[ethPairState, ethPair], [usdcPairState, usdcPair], [usdcEthPairState, usdcEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WETH[chainId])) {\n      if (usdcPair) {\n        const price = usdcPair.priceOf(WETH[chainId])\n        return new Price(currency, USDC, price.denominator, price.numerator)\n      } else {\n        return undefined\n      }\n    }\n    // handle usdc\n    if (wrapped.equals(USDC)) {\n      return new Price(USDC, USDC, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WETH[chainId])\n    const ethPairETHUSDCValue: JSBI =\n      ethPairETHAmount && usdcEthPair ? usdcEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the usdc pair\n    if (usdcPairState === PairState.EXISTS && usdcPair && usdcPair.reserveOf(USDC).greaterThan(ethPairETHUSDCValue)) {\n      const price = usdcPair.priceOf(wrapped)\n      return new Price(currency, USDC, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && usdcEthPairState === PairState.EXISTS && usdcEthPair) {\n      if (usdcEthPair.reserveOf(USDC).greaterThan('0') && ethPair.reserveOf(WETH[chainId]).greaterThan('0')) {\n        const ethUsdcPrice = usdcEthPair.priceOf(USDC)\n        const currencyEthPrice = ethPair.priceOf(WETH[chainId])\n        const usdcPrice = ethUsdcPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, USDC, usdcPrice.denominator, usdcPrice.numerator)\n      }\n    }\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, usdcEthPair, usdcEthPairState, usdcPair, usdcPairState, wrapped])\n}\n"]},"metadata":{},"sourceType":"module"}