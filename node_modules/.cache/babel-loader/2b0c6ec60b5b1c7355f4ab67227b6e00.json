{"ast":null,"code":"import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  animation: \",\" 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\\n  transform: translateZ(0);\\n\\n  border-top: 1px solid transparent;\\n  border-right: 1px solid transparent;\\n  border-bottom: 1px solid transparent;\\n  border-left: 2px solid \",\";\\n  background: transparent;\\n  width: 14px;\\n  height: 14px;\\n  border-radius: 50%;\\n  position: relative;\\n\\n  left: -3px;\\n  top: -3px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 8px;\\n  height: 8px;\\n  min-height: 8px;\\n  min-width: 8px;\\n  margin-left: 0.5rem;\\n  margin-top: 3px;\\n  border-radius: 50%;\\n  position: relative;\\n  background-color: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    display: none;\\n  \"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  display: flex;\\n  right: 0;\\n  bottom: 0;\\n  padding: 1rem;\\n  color: white;\\n  transition: opacity 0.25s ease;\\n  color: \",\";\\n  :hover {\\n    opacity: 1;\\n  }\\n\\n  \",\"\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from'react';import styled,{keyframes}from'styled-components';import{TYPE,ExternalLink}from'../../theme';import{useBlockNumber}from'../../state/application/hooks';import{getEtherscanLink}from'../../utils';import{useActiveWeb3React}from'../../hooks';var StyledPolling=styled.div(_templateObject(),function(_ref){var theme=_ref.theme;return theme.green1;},function(_ref2){var theme=_ref2.theme;return theme.mediaWidth.upToMedium(_templateObject2());});var StyledPollingDot=styled.div(_templateObject3(),function(_ref3){var theme=_ref3.theme;return theme.green1;});var rotate360=keyframes(_templateObject4());var Spinner=styled.div(_templateObject5(),rotate360,function(_ref4){var theme=_ref4.theme;return theme.green1;});export default function Polling(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var blockNumber=useBlockNumber();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isMounted=_useState2[0],setIsMounted=_useState2[1];useEffect(function(){var timer1=setTimeout(function(){return setIsMounted(true);},1000);// this will clear Timeout when component unmount like in willComponentUnmount\nreturn function(){setIsMounted(false);clearTimeout(timer1);};},[blockNumber]//useEffect will run only one time\n//if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n);return/*#__PURE__*/React.createElement(ExternalLink,{href:chainId&&blockNumber?getEtherscanLink(chainId,blockNumber.toString(),'block'):''},/*#__PURE__*/React.createElement(StyledPolling,null,/*#__PURE__*/React.createElement(TYPE.small,{style:{opacity:isMounted?'0.2':'0.6'}},blockNumber),/*#__PURE__*/React.createElement(StyledPollingDot,null,!isMounted&&/*#__PURE__*/React.createElement(Spinner,null))));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/components/Header/Polling.tsx"],"names":["React","useState","useEffect","styled","keyframes","TYPE","ExternalLink","useBlockNumber","getEtherscanLink","useActiveWeb3React","StyledPolling","div","theme","green1","mediaWidth","upToMedium","StyledPollingDot","rotate360","Spinner","Polling","chainId","blockNumber","isMounted","setIsMounted","timer1","setTimeout","clearTimeout","toString","opacity"],"mappings":"u2DAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,EAAiBC,SAAjB,KAAkC,mBAAlC,CACA,OAASC,IAAT,CAAeC,YAAf,KAAmC,aAAnC,CAEA,OAASC,cAAT,KAA+B,+BAA/B,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,OAASC,kBAAT,KAAmC,aAAnC,CAEA,GAAMC,CAAAA,aAAa,CAAGP,MAAM,CAACQ,GAAV,mBAQR,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAArB,EARQ,CAaf,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACE,UAAN,CAAiBC,UAAhC,sBAbe,CAAnB,CAiBA,GAAMC,CAAAA,gBAAgB,CAAGb,MAAM,CAACQ,GAAV,oBASA,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAArB,EATA,CAAtB,CAYA,GAAMI,CAAAA,SAAS,CAAGb,SAAH,oBAAf,CASA,GAAMc,CAAAA,OAAO,CAAGf,MAAM,CAACQ,GAAV,oBACEM,SADF,CAOc,mBAAGL,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAArB,EAPd,CAAb,CAkBA,cAAe,SAASM,CAAAA,OAAT,EAAmB,yBACZV,kBAAkB,EADN,CACxBW,OADwB,qBACxBA,OADwB,CAGhC,GAAMC,CAAAA,WAAW,CAAGd,cAAc,EAAlC,CAHgC,cAKEN,QAAQ,CAAC,IAAD,CALV,wCAKzBqB,SALyB,eAKdC,YALc,eAOhCrB,SAAS,CACP,UAAM,CACJ,GAAMsB,CAAAA,MAAM,CAAGC,UAAU,CAAC,iBAAMF,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAAD,CAA2B,IAA3B,CAAzB,CAEA;AACA,MAAO,WAAM,CACXA,YAAY,CAAC,KAAD,CAAZ,CACAG,YAAY,CAACF,MAAD,CAAZ,CACD,CAHD,CAID,CATM,CAUP,CAACH,WAAD,CAAc;AACd;AAXO,CAAT,CAcA,mBACE,oBAAC,YAAD,EAAc,IAAI,CAAED,OAAO,EAAIC,WAAX,CAAyBb,gBAAgB,CAACY,OAAD,CAAUC,WAAW,CAACM,QAAZ,EAAV,CAAkC,OAAlC,CAAzC,CAAsF,EAA1G,eACE,oBAAC,aAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAE,CAAEC,OAAO,CAAEN,SAAS,CAAG,KAAH,CAAW,KAA/B,CAAnB,EAA4DD,WAA5D,CADF,cAEE,oBAAC,gBAAD,MAAmB,CAACC,SAAD,eAAc,oBAAC,OAAD,MAAjC,CAFF,CADF,CADF,CAQD","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { TYPE, ExternalLink } from '../../theme'\n\nimport { useBlockNumber } from '../../state/application/hooks'\nimport { getEtherscanLink } from '../../utils'\nimport { useActiveWeb3React } from '../../hooks'\n\nconst StyledPolling = styled.div`\n  position: fixed;\n  display: flex;\n  right: 0;\n  bottom: 0;\n  padding: 1rem;\n  color: white;\n  transition: opacity 0.25s ease;\n  color: ${({ theme }) => theme.green1};\n  :hover {\n    opacity: 1;\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `}\n`\nconst StyledPollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-left: 0.5rem;\n  margin-top: 3px;\n  border-radius: 50%;\n  position: relative;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.div`\n  animation: ${rotate360} 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  transform: translateZ(0);\n\n  border-top: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  border-left: 2px solid ${({ theme }) => theme.green1};\n  background: transparent;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  position: relative;\n\n  left: -3px;\n  top: -3px;\n`\n\nexport default function Polling() {\n  const { chainId } = useActiveWeb3React()\n\n  const blockNumber = useBlockNumber()\n\n  const [isMounted, setIsMounted] = useState(true)\n\n  useEffect(\n    () => {\n      const timer1 = setTimeout(() => setIsMounted(true), 1000)\n\n      // this will clear Timeout when component unmount like in willComponentUnmount\n      return () => {\n        setIsMounted(false)\n        clearTimeout(timer1)\n      }\n    },\n    [blockNumber] //useEffect will run only one time\n    //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n  )\n\n  return (\n    <ExternalLink href={chainId && blockNumber ? getEtherscanLink(chainId, blockNumber.toString(), 'block') : ''}>\n      <StyledPolling>\n        <TYPE.small style={{ opacity: isMounted ? '0.2' : '0.6' }}>{blockNumber}</TYPE.small>\n        <StyledPollingDot>{!isMounted && <Spinner />}</StyledPollingDot>\n      </StyledPolling>\n    </ExternalLink>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}