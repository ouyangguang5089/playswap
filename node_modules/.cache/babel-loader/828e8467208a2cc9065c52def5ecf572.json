{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crypto_1 = __importDefault(require(\"crypto\"));\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar STORAGE_KEY_SESSION_ID = \"session:id\";\nvar STORAGE_KEY_SESSION_SECRET = \"session:secret\";\nvar STORAGE_KEY_SESSION_LINKED = \"session:linked\";\n\nvar Session = /*#__PURE__*/function () {\n  function Session(storage, id, secret, linked) {\n    _classCallCheck(this, Session);\n\n    this._storage = storage;\n    this._id = id || crypto_1.default.randomBytes(16).toString(\"hex\");\n    this._secret = secret || crypto_1.default.randomBytes(32).toString(\"hex\");\n    this._key = crypto_1.default.createHash(\"sha256\").update(\"\".concat(this._id, \", \").concat(this._secret, \" WalletLink\"), \"ascii\").digest(\"hex\");\n    this._linked = !!linked;\n  }\n\n  _createClass(Session, [{\n    key: \"save\",\n    value: function save() {\n      this._storage.setItem(STORAGE_KEY_SESSION_ID, this._id);\n\n      this._storage.setItem(STORAGE_KEY_SESSION_SECRET, this._secret);\n\n      this.persistLinked();\n      return this;\n    }\n  }, {\n    key: \"persistLinked\",\n    value: function persistLinked() {\n      this._storage.setItem(STORAGE_KEY_SESSION_LINKED, this._linked ? \"1\" : \"0\");\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"secret\",\n    get: function get() {\n      return this._secret;\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"linked\",\n    get: function get() {\n      return this._linked;\n    },\n    set: function set(val) {\n      this._linked = val;\n      this.persistLinked();\n    }\n  }], [{\n    key: \"load\",\n    value: function load(storage) {\n      var id = storage.getItem(STORAGE_KEY_SESSION_ID);\n      var linked = storage.getItem(STORAGE_KEY_SESSION_LINKED);\n      var secret = storage.getItem(STORAGE_KEY_SESSION_SECRET);\n\n      if (id && secret) {\n        return new Session(storage, id, secret, linked === \"1\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(storage) {\n      storage.removeItem(STORAGE_KEY_SESSION_SECRET);\n      storage.removeItem(STORAGE_KEY_SESSION_ID);\n      storage.removeItem(STORAGE_KEY_SESSION_LINKED);\n    }\n  }, {\n    key: \"persistedSessionIdChange$\",\n    get: function get() {\n      return rxjs_1.fromEvent(window, \"storage\").pipe(operators_1.filter(function (evt) {\n        return evt.key === STORAGE_KEY_SESSION_ID;\n      }), operators_1.map(function (evt) {\n        return {\n          oldValue: evt.oldValue || null,\n          newValue: evt.newValue || null\n        };\n      }));\n    }\n  }]);\n\n  return Session;\n}();\n\nexports.Session = Session;","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/walletlink/dist/relay/Session.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","crypto_1","require","rxjs_1","operators_1","STORAGE_KEY_SESSION_ID","STORAGE_KEY_SESSION_SECRET","STORAGE_KEY_SESSION_LINKED","Session","storage","id","secret","linked","_storage","_id","default","randomBytes","toString","_secret","_key","createHash","update","digest","_linked","setItem","persistLinked","val","getItem","removeItem","fromEvent","window","pipe","filter","evt","key","map","oldValue","newValue"],"mappings":"AAAA,a,CACA;AACA;AACA;;;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,QAAQ,GAAGP,eAAe,CAACQ,OAAO,CAAC,QAAD,CAAR,CAAhC;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMG,sBAAsB,GAAG,YAA/B;AACA,IAAMC,0BAA0B,GAAG,gBAAnC;AACA,IAAMC,0BAA0B,GAAG,gBAAnC;;IACMC,O;AACF,mBAAYC,OAAZ,EAAqBC,EAArB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyC;AAAA;;AACrC,SAAKC,QAAL,GAAgBJ,OAAhB;AACA,SAAKK,GAAL,GAAWJ,EAAE,IAAIT,QAAQ,CAACc,OAAT,CAAiBC,WAAjB,CAA6B,EAA7B,EAAiCC,QAAjC,CAA0C,KAA1C,CAAjB;AACA,SAAKC,OAAL,GAAeP,MAAM,IAAIV,QAAQ,CAACc,OAAT,CAAiBC,WAAjB,CAA6B,EAA7B,EAAiCC,QAAjC,CAA0C,KAA1C,CAAzB;AACA,SAAKE,IAAL,GAAYlB,QAAQ,CAACc,OAAT,CACPK,UADO,CACI,QADJ,EAEPC,MAFO,WAEG,KAAKP,GAFR,eAEgB,KAAKI,OAFrB,kBAE2C,OAF3C,EAGPI,MAHO,CAGA,KAHA,CAAZ;AAIA,SAAKC,OAAL,GAAe,CAAC,CAACX,MAAjB;AACH;;;;2BAqCM;AACH,WAAKC,QAAL,CAAcW,OAAd,CAAsBnB,sBAAtB,EAA8C,KAAKS,GAAnD;;AACA,WAAKD,QAAL,CAAcW,OAAd,CAAsBlB,0BAAtB,EAAkD,KAAKY,OAAvD;;AACA,WAAKO,aAAL;AACA,aAAO,IAAP;AACH;;;oCACe;AACZ,WAAKZ,QAAL,CAAcW,OAAd,CAAsBjB,0BAAtB,EAAkD,KAAKgB,OAAL,GAAe,GAAf,GAAqB,GAAvE;AACH;;;wBAxBQ;AACL,aAAO,KAAKT,GAAZ;AACH;;;wBACY;AACT,aAAO,KAAKI,OAAZ;AACH;;;wBACS;AACN,aAAO,KAAKC,IAAZ;AACH;;;wBACY;AACT,aAAO,KAAKI,OAAZ;AACH,K;sBACUG,G,EAAK;AACZ,WAAKH,OAAL,GAAeG,GAAf;AACA,WAAKD,aAAL;AACH;;;yBAnCWhB,O,EAAS;AACjB,UAAMC,EAAE,GAAGD,OAAO,CAACkB,OAAR,CAAgBtB,sBAAhB,CAAX;AACA,UAAMO,MAAM,GAAGH,OAAO,CAACkB,OAAR,CAAgBpB,0BAAhB,CAAf;AACA,UAAMI,MAAM,GAAGF,OAAO,CAACkB,OAAR,CAAgBrB,0BAAhB,CAAf;;AACA,UAAII,EAAE,IAAIC,MAAV,EAAkB;AACd,eAAO,IAAIH,OAAJ,CAAYC,OAAZ,EAAqBC,EAArB,EAAyBC,MAAzB,EAAiCC,MAAM,KAAK,GAA5C,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;;0BACYH,O,EAAS;AAClBA,MAAAA,OAAO,CAACmB,UAAR,CAAmBtB,0BAAnB;AACAG,MAAAA,OAAO,CAACmB,UAAR,CAAmBvB,sBAAnB;AACAI,MAAAA,OAAO,CAACmB,UAAR,CAAmBrB,0BAAnB;AACH;;;wBACsC;AACnC,aAAOJ,MAAM,CAAC0B,SAAP,CAAiBC,MAAjB,EAAyB,SAAzB,EAAoCC,IAApC,CAAyC3B,WAAW,CAAC4B,MAAZ,CAAmB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,GAAJ,KAAY7B,sBAAhB;AAAA,OAAtB,CAAzC,EAAwGD,WAAW,CAAC+B,GAAZ,CAAgB,UAAAF,GAAG;AAAA,eAAK;AACnIG,UAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAJ,IAAgB,IADyG;AAEnIC,UAAAA,QAAQ,EAAEJ,GAAG,CAACI,QAAJ,IAAgB;AAFyG,SAAL;AAAA,OAAnB,CAAxG,CAAP;AAIH;;;;;;AA2BLtC,OAAO,CAACS,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst STORAGE_KEY_SESSION_ID = \"session:id\";\nconst STORAGE_KEY_SESSION_SECRET = \"session:secret\";\nconst STORAGE_KEY_SESSION_LINKED = \"session:linked\";\nclass Session {\n    constructor(storage, id, secret, linked) {\n        this._storage = storage;\n        this._id = id || crypto_1.default.randomBytes(16).toString(\"hex\");\n        this._secret = secret || crypto_1.default.randomBytes(32).toString(\"hex\");\n        this._key = crypto_1.default\n            .createHash(\"sha256\")\n            .update(`${this._id}, ${this._secret} WalletLink`, \"ascii\")\n            .digest(\"hex\");\n        this._linked = !!linked;\n    }\n    static load(storage) {\n        const id = storage.getItem(STORAGE_KEY_SESSION_ID);\n        const linked = storage.getItem(STORAGE_KEY_SESSION_LINKED);\n        const secret = storage.getItem(STORAGE_KEY_SESSION_SECRET);\n        if (id && secret) {\n            return new Session(storage, id, secret, linked === \"1\");\n        }\n        return null;\n    }\n    static clear(storage) {\n        storage.removeItem(STORAGE_KEY_SESSION_SECRET);\n        storage.removeItem(STORAGE_KEY_SESSION_ID);\n        storage.removeItem(STORAGE_KEY_SESSION_LINKED);\n    }\n    static get persistedSessionIdChange$() {\n        return rxjs_1.fromEvent(window, \"storage\").pipe(operators_1.filter(evt => evt.key === STORAGE_KEY_SESSION_ID), operators_1.map(evt => ({\n            oldValue: evt.oldValue || null,\n            newValue: evt.newValue || null\n        })));\n    }\n    get id() {\n        return this._id;\n    }\n    get secret() {\n        return this._secret;\n    }\n    get key() {\n        return this._key;\n    }\n    get linked() {\n        return this._linked;\n    }\n    set linked(val) {\n        this._linked = val;\n        this.persistLinked();\n    }\n    save() {\n        this._storage.setItem(STORAGE_KEY_SESSION_ID, this._id);\n        this._storage.setItem(STORAGE_KEY_SESSION_SECRET, this._secret);\n        this.persistLinked();\n        return this;\n    }\n    persistLinked() {\n        this._storage.setItem(STORAGE_KEY_SESSION_LINKED, this._linked ? \"1\" : \"0\");\n    }\n}\nexports.Session = Session;\n"]},"metadata":{},"sourceType":"script"}