{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      var _this2 = this;\n\n      if (!this.observers[event]) {\n        return;\n      }\n\n      this.observers[event].forEach(function () {\n        if (!listener) {\n          delete _this2.observers[event];\n        } else {\n          var index = _this2.observers[event].indexOf(listener);\n\n          if (index > -1) {\n            _this2.observers[event].splice(index, 1);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nexport default EventEmitter;","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/i18next/dist/es/EventEmitter.js"],"names":["_classCallCheck","_createClass","EventEmitter","observers","key","value","on","events","listener","_this","split","forEach","event","push","off","_this2","index","indexOf","splice","emit","_len","arguments","length","args","Array","_key","cloned","concat","observer","apply","_cloned"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar EventEmitter =\n/*#__PURE__*/\nfunction () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      var _this2 = this;\n\n      if (!this.observers[event]) {\n        return;\n      }\n\n      this.observers[event].forEach(function () {\n        if (!listener) {\n          delete _this2.observers[event];\n        } else {\n          var index = _this2.observers[event].indexOf(listener);\n\n          if (index > -1) {\n            _this2.observers[event].splice(index, 1);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nexport default EventEmitter;"]},"metadata":{},"sourceType":"module"}