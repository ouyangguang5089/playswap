{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _slicedToArray = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar preact_1 = require(\"preact\");\n\nvar hooks_1 = require(\"preact/hooks\");\n\nvar qrcode_svg_1 = __importDefault(require(\"../vendor-js/qrcode-svg\"));\n\nexports.QRCode = function (props) {\n  var _hooks_1$useState = hooks_1.useState(\"\"),\n      _hooks_1$useState2 = _slicedToArray(_hooks_1$useState, 2),\n      svg = _hooks_1$useState2[0],\n      setSvg = _hooks_1$useState2[1];\n\n  hooks_1.useEffect(function () {\n    var _a, _b;\n\n    var qrcode = new qrcode_svg_1.default({\n      content: props.content,\n      background: props.bgColor || \"#ffffff\",\n      color: props.fgColor || \"#000000\",\n      container: \"svg\",\n      ecl: \"M\",\n      width: (_a = props.width) !== null && _a !== void 0 ? _a : 256,\n      height: (_b = props.height) !== null && _b !== void 0 ? _b : 256,\n      padding: 0\n    });\n    var base64 = Buffer.from(qrcode.svg(), \"utf8\").toString(\"base64\");\n    setSvg(\"data:image/svg+xml;base64,\".concat(base64));\n  });\n  return svg ? preact_1.h(\"img\", {\n    src: svg,\n    alt: \"QR Code\"\n  }) : null;\n};","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/walletlink/dist/components/QRCode.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","preact_1","require","hooks_1","qrcode_svg_1","QRCode","props","useState","svg","setSvg","useEffect","_a","_b","qrcode","default","content","background","bgColor","color","fgColor","container","ecl","width","height","padding","base64","Buffer","from","toString","h","src","alt"],"mappings":"AAAA,a,CACA;AACA;AACA;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAME,YAAY,GAAGV,eAAe,CAACQ,OAAO,CAAC,yBAAD,CAAR,CAApC;;AACAH,OAAO,CAACM,MAAR,GAAiB,UAAAC,KAAK,EAAI;AAAA,0BACAH,OAAO,CAACI,QAAR,CAAiB,EAAjB,CADA;AAAA;AAAA,MACfC,GADe;AAAA,MACVC,MADU;;AAEtBN,EAAAA,OAAO,CAACO,SAAR,CAAkB,YAAM;AACpB,QAAIC,EAAJ,EAAQC,EAAR;;AACA,QAAMC,MAAM,GAAG,IAAIT,YAAY,CAACU,OAAjB,CAAyB;AACpCC,MAAAA,OAAO,EAAET,KAAK,CAACS,OADqB;AAEpCC,MAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,IAAiB,SAFO;AAGpCC,MAAAA,KAAK,EAAEZ,KAAK,CAACa,OAAN,IAAiB,SAHY;AAIpCC,MAAAA,SAAS,EAAE,KAJyB;AAKpCC,MAAAA,GAAG,EAAE,GAL+B;AAMpCC,MAAAA,KAAK,EAAE,CAACX,EAAE,GAAGL,KAAK,CAACgB,KAAZ,MAAuB,IAAvB,IAA+BX,EAAE,KAAK,KAAK,CAA3C,GAA+CA,EAA/C,GAAoD,GANvB;AAOpCY,MAAAA,MAAM,EAAE,CAACX,EAAE,GAAGN,KAAK,CAACiB,MAAZ,MAAwB,IAAxB,IAAgCX,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAqD,GAPzB;AAQpCY,MAAAA,OAAO,EAAE;AAR2B,KAAzB,CAAf;AAUA,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYd,MAAM,CAACL,GAAP,EAAZ,EAA0B,MAA1B,EAAkCoB,QAAlC,CAA2C,QAA3C,CAAf;AACAnB,IAAAA,MAAM,qCAA8BgB,MAA9B,EAAN;AACH,GAdD;AAeA,SAAOjB,GAAG,GAAGP,QAAQ,CAAC4B,CAAT,CAAW,KAAX,EAAkB;AAAEC,IAAAA,GAAG,EAAEtB,GAAP;AAAYuB,IAAAA,GAAG,EAAE;AAAjB,GAAlB,CAAH,GAAqD,IAA/D;AACH,CAlBD","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst preact_1 = require(\"preact\");\nconst hooks_1 = require(\"preact/hooks\");\nconst qrcode_svg_1 = __importDefault(require(\"../vendor-js/qrcode-svg\"));\nexports.QRCode = props => {\n    const [svg, setSvg] = hooks_1.useState(\"\");\n    hooks_1.useEffect(() => {\n        var _a, _b;\n        const qrcode = new qrcode_svg_1.default({\n            content: props.content,\n            background: props.bgColor || \"#ffffff\",\n            color: props.fgColor || \"#000000\",\n            container: \"svg\",\n            ecl: \"M\",\n            width: (_a = props.width) !== null && _a !== void 0 ? _a : 256,\n            height: (_b = props.height) !== null && _b !== void 0 ? _b : 256,\n            padding: 0\n        });\n        const base64 = Buffer.from(qrcode.svg(), \"utf8\").toString(\"base64\");\n        setSvg(`data:image/svg+xml;base64,${base64}`);\n    });\n    return svg ? preact_1.h(\"img\", { src: svg, alt: \"QR Code\" }) : null;\n};\n"]},"metadata":{},"sourceType":"script"}