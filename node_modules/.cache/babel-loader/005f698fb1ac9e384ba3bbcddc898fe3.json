{"ast":null,"code":"import _taggedTemplateLiteral from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  max-height: 400px;\\n  overflow: auto;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{diffTokenLists}from'@uniswap/token-lists';import React,{useCallback,useMemo}from'react';import ReactGA from'react-ga';import{useDispatch}from'react-redux';import{Text}from'rebass';import styled from'styled-components';import{useRemovePopup}from'../../state/application/hooks';import{acceptListUpdate}from'../../state/lists/actions';import{TYPE}from'../../theme';import listVersionLabel from'../../utils/listVersionLabel';import{ButtonSecondary}from'../Button';import{AutoColumn}from'../Column';import{AutoRow}from'../Row';export var ChangesList=styled.ul(_templateObject());export default function ListUpdatePopup(_ref){var popKey=_ref.popKey,listUrl=_ref.listUrl,oldList=_ref.oldList,newList=_ref.newList,auto=_ref.auto;var removePopup=useRemovePopup();var removeThisPopup=useCallback(function(){return removePopup(popKey);},[popKey,removePopup]);var dispatch=useDispatch();var handleAcceptUpdate=useCallback(function(){if(auto)return;ReactGA.event({category:'Lists',action:'Update List from Popup',label:listUrl});dispatch(acceptListUpdate(listUrl));removeThisPopup();},[auto,dispatch,listUrl,removeThisPopup]);var _useMemo=useMemo(function(){return diffTokenLists(oldList.tokens,newList.tokens);},[newList.tokens,oldList.tokens]),tokensAdded=_useMemo.added,tokensChanged=_useMemo.changed,tokensRemoved=_useMemo.removed;var numTokensChanged=useMemo(function(){return Object.keys(tokensChanged).reduce(function(memo,chainId){return memo+Object.keys(tokensChanged[chainId]).length;},0);},[tokensChanged]);return/*#__PURE__*/React.createElement(AutoRow,null,/*#__PURE__*/React.createElement(AutoColumn,{style:{flex:'1'},gap:\"8px\"},auto?/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:500},\"The token list \\\"\",oldList.name,\"\\\" has been updated to\",' ',/*#__PURE__*/React.createElement(\"strong\",null,listVersionLabel(newList.version)),\".\"):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Text,null,\"An update is available for the token list \\\"\",oldList.name,\"\\\" (\",listVersionLabel(oldList.version),\" to \",listVersionLabel(newList.version),\").\"),/*#__PURE__*/React.createElement(ChangesList,null,tokensAdded.length>0?/*#__PURE__*/React.createElement(\"li\",null,tokensAdded.map(function(token,i){return/*#__PURE__*/React.createElement(React.Fragment,{key:\"\".concat(token.chainId,\"-\").concat(token.address)},/*#__PURE__*/React.createElement(\"strong\",{title:token.address},token.symbol),i===tokensAdded.length-1?null:', ');}),' ',\"added\"):null,tokensRemoved.length>0?/*#__PURE__*/React.createElement(\"li\",null,tokensRemoved.map(function(token,i){return/*#__PURE__*/React.createElement(React.Fragment,{key:\"\".concat(token.chainId,\"-\").concat(token.address)},/*#__PURE__*/React.createElement(\"strong\",{title:token.address},token.symbol),i===tokensRemoved.length-1?null:', ');}),' ',\"removed\"):null,numTokensChanged>0?/*#__PURE__*/React.createElement(\"li\",null,numTokensChanged,\" tokens updated\"):null)),/*#__PURE__*/React.createElement(AutoRow,null,/*#__PURE__*/React.createElement(\"div\",{style:{flexGrow:1,marginRight:12}},/*#__PURE__*/React.createElement(ButtonSecondary,{onClick:handleAcceptUpdate},\"Accept update\")),/*#__PURE__*/React.createElement(\"div\",{style:{flexGrow:1}},/*#__PURE__*/React.createElement(ButtonSecondary,{onClick:removeThisPopup},\"Dismiss\"))))));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/components/Popups/ListUpdatePopup.tsx"],"names":["diffTokenLists","React","useCallback","useMemo","ReactGA","useDispatch","Text","styled","useRemovePopup","acceptListUpdate","TYPE","listVersionLabel","ButtonSecondary","AutoColumn","AutoRow","ChangesList","ul","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removePopup","removeThisPopup","dispatch","handleAcceptUpdate","event","category","action","label","tokens","tokensAdded","added","tokensChanged","changed","tokensRemoved","removed","numTokensChanged","Object","keys","reduce","memo","chainId","length","flex","name","version","map","token","i","address","symbol","flexGrow","marginRight"],"mappings":"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","sourcesContent":["import { diffTokenLists, TokenList } from '@uniswap/token-lists'\nimport React, { useCallback, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { useDispatch } from 'react-redux'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport { TYPE } from '../../theme'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { ButtonSecondary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nexport const ChangesList = styled.ul`\n  max-height: 400px;\n  overflow: auto;\n`\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from Popup',\n      label: listUrl\n    })\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens)\n  }, [newList.tokens, oldList.tokens])\n  const numTokensChanged = useMemo(\n    () =>\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\n    [tokensChanged]\n  )\n\n  return (\n    <AutoRow>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <TYPE.body fontWeight={500}>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{listVersionLabel(newList.version)}</strong>.\n          </TYPE.body>\n        ) : (\n          <>\n            <div>\n              <Text>\n                An update is available for the token list &quot;{oldList.name}&quot; (\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\n              </Text>\n              <ChangesList>\n                {tokensAdded.length > 0 ? (\n                  <li>\n                    {tokensAdded.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensAdded.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    added\n                  </li>\n                ) : null}\n                {tokensRemoved.length > 0 ? (\n                  <li>\n                    {tokensRemoved.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensRemoved.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    removed\n                  </li>\n                ) : null}\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\n              </ChangesList>\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\n                <ButtonSecondary onClick={handleAcceptUpdate}>Accept update</ButtonSecondary>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <ButtonSecondary onClick={removeThisPopup}>Dismiss</ButtonSecondary>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}