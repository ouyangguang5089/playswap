{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar core_1 = tslib_1.__importDefault(require(\"@walletconnect/core\"));\n\nvar cryptoLib = tslib_1.__importStar(require(\"@walletconnect/iso-crypto\"));\n\nvar WalletConnect = /*#__PURE__*/function (_core_1$default) {\n  _inherits(WalletConnect, _core_1$default);\n\n  var _super = _createSuper(WalletConnect);\n\n  function WalletConnect(connectorOpts, pushServerOpts) {\n    _classCallCheck(this, WalletConnect);\n\n    return _super.call(this, {\n      cryptoLib: cryptoLib,\n      connectorOpts: connectorOpts,\n      pushServerOpts: pushServerOpts\n    });\n  }\n\n  return WalletConnect;\n}(core_1.default);\n\nexports.default = WalletConnect;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;;IAEM,a;;;;;AACJ,yBAAY,aAAZ,EAAkD,cAAlD,EAAqF;AAAA;;AAAA,6BAC7E;AACJ,MAAA,SAAS,EAAT,SADI;AAEJ,MAAA,aAAa,EAAb,aAFI;AAGJ,MAAA,cAAc,EAAd;AAHI,KAD6E;AAMpF;;;EAPyB,MAAA,CAAA,O;;AAU5B,OAAA,CAAA,OAAA,GAAe,aAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst core_1 = tslib_1.__importDefault(require(\"@walletconnect/core\"));\nconst cryptoLib = tslib_1.__importStar(require(\"@walletconnect/iso-crypto\"));\nclass WalletConnect extends core_1.default {\n    constructor(connectorOpts, pushServerOpts) {\n        super({\n            cryptoLib,\n            connectorOpts,\n            pushServerOpts,\n        });\n    }\n}\nexports.default = WalletConnect;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}