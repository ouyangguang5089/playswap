{"ast":null,"code":"import{parse}from'qs';import{useMemo}from'react';import{useLocation}from'react-router-dom';export default function useParsedQueryString(){var _useLocation=useLocation(),search=_useLocation.search;return useMemo(function(){return search&&search.length>1?parse(search,{parseArrays:false,ignoreQueryPrefix:true}):{};},[search]);}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/hooks/useParsedQueryString.ts"],"names":["parse","useMemo","useLocation","useParsedQueryString","search","length","parseArrays","ignoreQueryPrefix"],"mappings":"AAAA,OAASA,KAAT,KAAgC,IAAhC,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,cAAe,SAASC,CAAAA,oBAAT,EAA0C,kBACpCD,WAAW,EADyB,CAC/CE,MAD+C,cAC/CA,MAD+C,CAEvD,MAAOH,CAAAA,OAAO,CACZ,iBAAOG,CAAAA,MAAM,EAAIA,MAAM,CAACC,MAAP,CAAgB,CAA1B,CAA8BL,KAAK,CAACI,MAAD,CAAS,CAAEE,WAAW,CAAE,KAAf,CAAsBC,iBAAiB,CAAE,IAAzC,CAAT,CAAnC,CAA+F,EAAtG,EADY,CAEZ,CAACH,MAAD,CAFY,CAAd,CAID","sourcesContent":["import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}