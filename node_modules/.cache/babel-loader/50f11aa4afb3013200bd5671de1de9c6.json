{"ast":null,"code":"import{createAction}from'@reduxjs/toolkit';export var updateMatchesDarkMode=createAction('user/updateMatchesDarkMode');export var updateUserDarkMode=createAction('user/updateUserDarkMode');export var updateUserExpertMode=createAction('user/updateUserExpertMode');export var updateUserSingleHopOnly=createAction('user/updateUserSingleHopOnly');export var updateUserSlippageTolerance=createAction('user/updateUserSlippageTolerance');export var updateUserDeadline=createAction('user/updateUserDeadline');export var addSerializedToken=createAction('user/addSerializedToken');export var removeSerializedToken=createAction('user/removeSerializedToken');export var addSerializedPair=createAction('user/addSerializedPair');export var removeSerializedPair=createAction('user/removeSerializedPair');export var toggleURLWarning=createAction('app/toggleURLWarning');","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/state/user/actions.ts"],"names":["createAction","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","toggleURLWarning"],"mappings":"AAAA,OAASA,YAAT,KAA6B,kBAA7B,CAeA,MAAO,IAAMC,CAAAA,qBAAqB,CAAGD,YAAY,CAA+B,4BAA/B,CAA1C,CACP,MAAO,IAAME,CAAAA,kBAAkB,CAAGF,YAAY,CAA4B,yBAA5B,CAAvC,CACP,MAAO,IAAMG,CAAAA,oBAAoB,CAAGH,YAAY,CAA8B,2BAA9B,CAAzC,CACP,MAAO,IAAMI,CAAAA,uBAAuB,CAAGJ,YAAY,CAAiC,8BAAjC,CAA5C,CACP,MAAO,IAAMK,CAAAA,2BAA2B,CAAGL,YAAY,CACrD,kCADqD,CAAhD,CAGP,MAAO,IAAMM,CAAAA,kBAAkB,CAAGN,YAAY,CAA2B,yBAA3B,CAAvC,CACP,MAAO,IAAMO,CAAAA,kBAAkB,CAAGP,YAAY,CAAuC,yBAAvC,CAAvC,CACP,MAAO,IAAMQ,CAAAA,qBAAqB,CAAGR,YAAY,CAAuC,4BAAvC,CAA1C,CACP,MAAO,IAAMS,CAAAA,iBAAiB,CAAGT,YAAY,CAAqC,wBAArC,CAAtC,CACP,MAAO,IAAMU,CAAAA,oBAAoB,CAAGV,YAAY,CAC9C,2BAD8C,CAAzC,CAGP,MAAO,IAAMW,CAAAA,gBAAgB,CAAGX,YAAY,CAAO,sBAAP,CAArC","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance'\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair'\n)\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning')\n"]},"metadata":{},"sourceType":"module"}