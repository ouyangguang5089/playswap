{"ast":null,"code":"import _regeneratorRuntime from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState,useLayoutEffect}from'react';import{shade}from'polished';import Vibrant from'node-vibrant';import{hex}from'wcag-contrast';import{ChainId}from'@uniswap/sdk';import uriToHttp from'utils/uriToHttp';function getColorFromToken(_x){return _getColorFromToken.apply(this,arguments);}function _getColorFromToken(){_getColorFromToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token){var path;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(token.chainId===ChainId.RINKEBY&&token.address==='0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735')){_context.next=2;break;}return _context.abrupt(\"return\",Promise.resolve('#FAAB14'));case 2:path=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\".concat(token.address,\"/logo.png\");return _context.abrupt(\"return\",Vibrant.from(path).getPalette().then(function(palette){if(palette===null||palette===void 0?void 0:palette.Vibrant){var detectedHex=palette.Vibrant.hex;var AAscore=hex(detectedHex,'#FFF');while(AAscore<3){detectedHex=shade(0.005,detectedHex);AAscore=hex(detectedHex,'#FFF');}return detectedHex;}return null;}).catch(function(){return null;}));case 4:case\"end\":return _context.stop();}}},_callee);}));return _getColorFromToken.apply(this,arguments);}function getColorFromUriPath(_x2){return _getColorFromUriPath.apply(this,arguments);}function _getColorFromUriPath(){_getColorFromUriPath=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(uri){var formattedPath;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:formattedPath=uriToHttp(uri)[0];return _context2.abrupt(\"return\",Vibrant.from(formattedPath).getPalette().then(function(palette){if(palette===null||palette===void 0?void 0:palette.Vibrant){return palette.Vibrant.hex;}return null;}).catch(function(){return null;}));case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _getColorFromUriPath.apply(this,arguments);}export function useColor(token){var _useState=useState('#2172E5'),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];useLayoutEffect(function(){var stale=false;if(token){getColorFromToken(token).then(function(tokenColor){if(!stale&&tokenColor!==null){setColor(tokenColor);}});}return function(){stale=true;setColor('#2172E5');};},[token]);return color;}export function useListColor(listImageUri){var _useState3=useState('#2172E5'),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];useLayoutEffect(function(){var stale=false;if(listImageUri){getColorFromUriPath(listImageUri).then(function(color){if(!stale&&color!==null){setColor(color);}});}return function(){stale=true;setColor('#2172E5');};},[listImageUri]);return color;}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/hooks/useColor.ts"],"names":["useState","useLayoutEffect","shade","Vibrant","hex","ChainId","uriToHttp","getColorFromToken","token","chainId","RINKEBY","address","Promise","resolve","path","from","getPalette","then","palette","detectedHex","AAscore","catch","getColorFromUriPath","uri","formattedPath","useColor","color","setColor","stale","tokenColor","useListColor","listImageUri"],"mappings":"8cAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,OAA1C,CACA,OAASC,KAAT,KAAsB,UAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,cAApB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,OAAgBC,OAAhB,KAA+B,cAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,C,QAEeC,CAAAA,iB,+JAAf,iBAAiCC,KAAjC,gIACMA,KAAK,CAACC,OAAN,GAAkBJ,OAAO,CAACK,OAA1B,EAAqCF,KAAK,CAACG,OAAN,GAAkB,4CAD7D,0DAEWC,OAAO,CAACC,OAAR,CAAgB,SAAhB,CAFX,SAKQC,IALR,mGAK0GN,KAAK,CAACG,OALhH,8CAOSR,OAAO,CAACY,IAAR,CAAaD,IAAb,EACJE,UADI,GAEJC,IAFI,CAEC,SAAAC,OAAO,CAAI,CACf,GAAIA,OAAJ,SAAIA,OAAJ,iBAAIA,OAAO,CAAEf,OAAb,CAAsB,CACpB,GAAIgB,CAAAA,WAAW,CAAGD,OAAO,CAACf,OAAR,CAAgBC,GAAlC,CACA,GAAIgB,CAAAA,OAAO,CAAGhB,GAAG,CAACe,WAAD,CAAc,MAAd,CAAjB,CACA,MAAOC,OAAO,CAAG,CAAjB,CAAoB,CAClBD,WAAW,CAAGjB,KAAK,CAAC,KAAD,CAAQiB,WAAR,CAAnB,CACAC,OAAO,CAAGhB,GAAG,CAACe,WAAD,CAAc,MAAd,CAAb,CACD,CACD,MAAOA,CAAAA,WAAP,CACD,CACD,MAAO,KAAP,CACD,CAbI,EAcJE,KAdI,CAcE,iBAAM,KAAN,EAdF,CAPT,wD,4DAwBeC,CAAAA,mB,sKAAf,kBAAmCC,GAAnC,wIACQC,aADR,CACwBlB,SAAS,CAACiB,GAAD,CAAT,CAAe,CAAf,CADxB,kCAGSpB,OAAO,CAACY,IAAR,CAAaS,aAAb,EACJR,UADI,GAEJC,IAFI,CAEC,SAAAC,OAAO,CAAI,CACf,GAAIA,OAAJ,SAAIA,OAAJ,iBAAIA,OAAO,CAAEf,OAAb,CAAsB,CACpB,MAAOe,CAAAA,OAAO,CAACf,OAAR,CAAgBC,GAAvB,CACD,CACD,MAAO,KAAP,CACD,CAPI,EAQJiB,KARI,CAQE,iBAAM,KAAN,EARF,CAHT,0D,sDAcA,MAAO,SAASI,CAAAA,QAAT,CAAkBjB,KAAlB,CAAiC,eACZR,QAAQ,CAAC,SAAD,CADI,wCAC/B0B,KAD+B,eACxBC,QADwB,eAGtC1B,eAAe,CAAC,UAAM,CACpB,GAAI2B,CAAAA,KAAK,CAAG,KAAZ,CAEA,GAAIpB,KAAJ,CAAW,CACTD,iBAAiB,CAACC,KAAD,CAAjB,CAAyBS,IAAzB,CAA8B,SAAAY,UAAU,CAAI,CAC1C,GAAI,CAACD,KAAD,EAAUC,UAAU,GAAK,IAA7B,CAAmC,CACjCF,QAAQ,CAACE,UAAD,CAAR,CACD,CACF,CAJD,EAKD,CAED,MAAO,WAAM,CACXD,KAAK,CAAG,IAAR,CACAD,QAAQ,CAAC,SAAD,CAAR,CACD,CAHD,CAID,CAfc,CAeZ,CAACnB,KAAD,CAfY,CAAf,CAiBA,MAAOkB,CAAAA,KAAP,CACD,CAED,MAAO,SAASI,CAAAA,YAAT,CAAsBC,YAAtB,CAA6C,gBACxB/B,QAAQ,CAAC,SAAD,CADgB,yCAC3C0B,KAD2C,eACpCC,QADoC,eAGlD1B,eAAe,CAAC,UAAM,CACpB,GAAI2B,CAAAA,KAAK,CAAG,KAAZ,CAEA,GAAIG,YAAJ,CAAkB,CAChBT,mBAAmB,CAACS,YAAD,CAAnB,CAAkCd,IAAlC,CAAuC,SAAAS,KAAK,CAAI,CAC9C,GAAI,CAACE,KAAD,EAAUF,KAAK,GAAK,IAAxB,CAA8B,CAC5BC,QAAQ,CAACD,KAAD,CAAR,CACD,CACF,CAJD,EAKD,CAED,MAAO,WAAM,CACXE,KAAK,CAAG,IAAR,CACAD,QAAQ,CAAC,SAAD,CAAR,CACD,CAHD,CAID,CAfc,CAeZ,CAACI,YAAD,CAfY,CAAf,CAiBA,MAAOL,CAAAA,KAAP,CACD","sourcesContent":["import { useState, useLayoutEffect } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { Token, ChainId } from '@uniswap/sdk'\nimport uriToHttp from 'utils/uriToHttp'\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  if (token.chainId === ChainId.RINKEBY && token.address === '0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735') {\n    return Promise.resolve('#FAAB14')\n  }\n\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n\n  return Vibrant.from(path)\n    .getPalette()\n    .then(palette => {\n      if (palette?.Vibrant) {\n        let detectedHex = palette.Vibrant.hex\n        let AAscore = hex(detectedHex, '#FFF')\n        while (AAscore < 3) {\n          detectedHex = shade(0.005, detectedHex)\n          AAscore = hex(detectedHex, '#FFF')\n        }\n        return detectedHex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n  const formattedPath = uriToHttp(uri)[0]\n\n  return Vibrant.from(formattedPath)\n    .getPalette()\n    .then(palette => {\n      if (palette?.Vibrant) {\n        return palette.Vibrant.hex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nexport function useColor(token?: Token) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then(tokenColor => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [token])\n\n  return color\n}\n\nexport function useListColor(listImageUri?: string) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (listImageUri) {\n      getColorFromUriPath(listImageUri).then(color => {\n        if (!stale && color !== null) {\n          setColor(color)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [listImageUri])\n\n  return color\n}\n"]},"metadata":{},"sourceType":"module"}