{"ast":null,"code":"'use strict';\n\nvar VMessage = require('vfile-message');\n\nvar VFile = require('./core.js');\n\nmodule.exports = VFile;\nvar proto = VFile.prototype;\nproto.message = message;\nproto.info = info;\nproto.fail = fail;\n/* Slight backwards compatibility.  Remove in the future. */\n\nproto.warn = message;\n/* Create a message with `reason` at `position`.\n * When an error is passed in as `reason`, copies the stack. */\n\nfunction message(reason, position, origin) {\n  var filePath = this.path;\n  var message = new VMessage(reason, position, origin);\n\n  if (filePath) {\n    message.name = filePath + ':' + message.name;\n    message.file = filePath;\n  }\n\n  message.fatal = false;\n  this.messages.push(message);\n  return message;\n}\n/* Fail. Creates a vmessage, associates it with the file,\n * and throws it. */\n\n\nfunction fail() {\n  var message = this.message.apply(this, arguments);\n  message.fatal = true;\n  throw message;\n}\n/* Info. Creates a vmessage, associates it with the file,\n * and marks the fatality as null. */\n\n\nfunction info() {\n  var message = this.message.apply(this, arguments);\n  message.fatal = null;\n  return message;\n}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/vfile/index.js"],"names":["VMessage","require","VFile","module","exports","proto","prototype","message","info","fail","warn","reason","position","origin","filePath","path","name","file","fatal","messages","push","apply","arguments"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiBF,KAAjB;AAEA,IAAIG,KAAK,GAAGH,KAAK,CAACI,SAAlB;AAEAD,KAAK,CAACE,OAAN,GAAgBA,OAAhB;AACAF,KAAK,CAACG,IAAN,GAAaA,IAAb;AACAH,KAAK,CAACI,IAAN,GAAaA,IAAb;AAEA;;AACAJ,KAAK,CAACK,IAAN,GAAaH,OAAb;AAEA;;;AAEA,SAASA,OAAT,CAAiBI,MAAjB,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA2C;AACzC,MAAIC,QAAQ,GAAG,KAAKC,IAApB;AACA,MAAIR,OAAO,GAAG,IAAIP,QAAJ,CAAaW,MAAb,EAAqBC,QAArB,EAA+BC,MAA/B,CAAd;;AAEA,MAAIC,QAAJ,EAAc;AACZP,IAAAA,OAAO,CAACS,IAAR,GAAeF,QAAQ,GAAG,GAAX,GAAiBP,OAAO,CAACS,IAAxC;AACAT,IAAAA,OAAO,CAACU,IAAR,GAAeH,QAAf;AACD;;AAEDP,EAAAA,OAAO,CAACW,KAAR,GAAgB,KAAhB;AAEA,OAAKC,QAAL,CAAcC,IAAd,CAAmBb,OAAnB;AAEA,SAAOA,OAAP;AACD;AAED;;;;AAEA,SAASE,IAAT,GAAgB;AACd,MAAIF,OAAO,GAAG,KAAKA,OAAL,CAAac,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAd;AAEAf,EAAAA,OAAO,CAACW,KAAR,GAAgB,IAAhB;AAEA,QAAMX,OAAN;AACD;AAED;;;;AAEA,SAASC,IAAT,GAAgB;AACd,MAAID,OAAO,GAAG,KAAKA,OAAL,CAAac,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAd;AAEAf,EAAAA,OAAO,CAACW,KAAR,GAAgB,IAAhB;AAEA,SAAOX,OAAP;AACD","sourcesContent":["'use strict';\n\nvar VMessage = require('vfile-message');\nvar VFile = require('./core.js');\n\nmodule.exports = VFile;\n\nvar proto = VFile.prototype;\n\nproto.message = message;\nproto.info = info;\nproto.fail = fail;\n\n/* Slight backwards compatibility.  Remove in the future. */\nproto.warn = message;\n\n/* Create a message with `reason` at `position`.\n * When an error is passed in as `reason`, copies the stack. */\nfunction message(reason, position, origin) {\n  var filePath = this.path;\n  var message = new VMessage(reason, position, origin);\n\n  if (filePath) {\n    message.name = filePath + ':' + message.name;\n    message.file = filePath;\n  }\n\n  message.fatal = false;\n\n  this.messages.push(message);\n\n  return message;\n}\n\n/* Fail. Creates a vmessage, associates it with the file,\n * and throws it. */\nfunction fail() {\n  var message = this.message.apply(this, arguments);\n\n  message.fatal = true;\n\n  throw message;\n}\n\n/* Info. Creates a vmessage, associates it with the file,\n * and marks the fatality as null. */\nfunction info() {\n  var message = this.message.apply(this, arguments);\n\n  message.fatal = null;\n\n  return message;\n}\n"]},"metadata":{},"sourceType":"script"}