{"ast":null,"code":"'use strict';\n\nvar _construct = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/construct\");\n\nvar _defineProperty = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nfunction withIs(Class, _ref) {\n  var className = _ref.className,\n      symbolName = _ref.symbolName;\n  var symbol = Symbol.for(symbolName);\n\n  var ClassIsWrapper = _defineProperty({}, className, /*#__PURE__*/function (_Class) {\n    _inherits(_class, _Class);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this2;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2 = _super.call.apply(_super, [this].concat(args));\n      Object.defineProperty(_assertThisInitialized(_this2), symbol, {\n        value: true\n      });\n      return _this2;\n    }\n\n    _createClass(_class, [{\n      key: Symbol.toStringTag,\n      get: function get() {\n        return className;\n      }\n    }]);\n\n    return _class;\n  }(Class))[className];\n\n  ClassIsWrapper[\"is\".concat(className)] = function (obj) {\n    return !!(obj && obj[symbol]);\n  };\n\n  return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, _ref2) {\n  var className = _ref2.className,\n      symbolName = _ref2.symbolName,\n      withoutNew = _ref2.withoutNew;\n  var symbol = Symbol.for(symbolName);\n  /* eslint-disable object-shorthand */\n\n  var ClassIsWrapper = _defineProperty({}, className, function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (withoutNew && !(this instanceof ClassIsWrapper)) {\n      return _construct(ClassIsWrapper, args);\n    }\n\n    var _this = Class.call.apply(Class, [this].concat(args)) || this;\n\n    if (_this && !_this[symbol]) {\n      Object.defineProperty(_this, symbol, {\n        value: true\n      });\n    }\n\n    return _this;\n  })[className];\n  /* eslint-enable object-shorthand */\n\n\n  ClassIsWrapper.prototype = Object.create(Class.prototype);\n  ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n  Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n    get: function get() {\n      return className;\n    }\n  });\n\n  ClassIsWrapper[\"is\".concat(className)] = function (obj) {\n    return !!(obj && obj[symbol]);\n  };\n\n  return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/class-is/index.js"],"names":["withIs","Class","className","symbolName","symbol","Symbol","for","ClassIsWrapper","args","Object","defineProperty","value","toStringTag","obj","withIsProto","withoutNew","_this","call","prototype","create","constructor","get","module","exports","proto"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA,SAASA,MAAT,CAAgBC,KAAhB,QAAkD;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC9C,MAAMC,MAAM,GAAGC,MAAM,CAACC,GAAP,CAAWH,UAAX,CAAf;;AAEA,MAAMI,cAAc,GAAG,oBAOlBL,SAPkB;AAAA;;AAAA;;AAQf,sBAAqB;AAAA;;AAAA;;AAAA,wCAANM,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACjB,uDAASA,IAAT;AACAC,MAAAA,MAAM,CAACC,cAAP,iCAA4BN,MAA5B,EAAoC;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAApC;AAFiB;AAGpB;;AAXc;AAAA,WAaVN,MAAM,CAACO,WAbG;AAAA,0BAaY;AACvB,eAAOV,SAAP;AACH;AAfc;;AAAA;AAAA,IAOQD,KAPR,GAiBrBC,SAjBqB,CAAvB;;AAmBAK,EAAAA,cAAc,aAAML,SAAN,EAAd,GAAmC,UAACW,GAAD;AAAA,WAAS,CAAC,EAAEA,GAAG,IAAIA,GAAG,CAACT,MAAD,CAAZ,CAAV;AAAA,GAAnC;;AAEA,SAAOG,cAAP;AACH;;AAED,SAASO,WAAT,CAAqBb,KAArB,SAAmE;AAAA,MAArCC,SAAqC,SAArCA,SAAqC;AAAA,MAA1BC,UAA0B,SAA1BA,UAA0B;AAAA,MAAdY,UAAc,SAAdA,UAAc;AAC/D,MAAMX,MAAM,GAAGC,MAAM,CAACC,GAAP,CAAWH,UAAX,CAAf;AAEA;;AACA,MAAMI,cAAc,GAAG,oBAClBL,SADkB,EACN,YAAmB;AAAA,uCAANM,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAC5B,QAAIO,UAAU,IAAI,EAAE,gBAAgBR,cAAlB,CAAlB,EAAqD;AACjD,wBAAWA,cAAX,EAA6BC,IAA7B;AACH;;AAED,QAAMQ,KAAK,GAAGf,KAAK,CAACgB,IAAN,OAAAhB,KAAK,GAAM,IAAN,SAAeO,IAAf,EAAL,IAA6B,IAA3C;;AAEA,QAAIQ,KAAK,IAAI,CAACA,KAAK,CAACZ,MAAD,CAAnB,EAA6B;AACzBK,MAAAA,MAAM,CAACC,cAAP,CAAsBM,KAAtB,EAA6BZ,MAA7B,EAAqC;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAArC;AACH;;AAED,WAAOK,KAAP;AACH,GAbkB,EAcrBd,SAdqB,CAAvB;AAeA;;;AAEAK,EAAAA,cAAc,CAACW,SAAf,GAA2BT,MAAM,CAACU,MAAP,CAAclB,KAAK,CAACiB,SAApB,CAA3B;AACAX,EAAAA,cAAc,CAACW,SAAf,CAAyBE,WAAzB,GAAuCb,cAAvC;AAEAE,EAAAA,MAAM,CAACC,cAAP,CAAsBH,cAAc,CAACW,SAArC,EAAgDb,MAAM,CAACO,WAAvD,EAAoE;AAChES,IAAAA,GADgE,iBAC1D;AACF,aAAOnB,SAAP;AACH;AAH+D,GAApE;;AAMAK,EAAAA,cAAc,aAAML,SAAN,EAAd,GAAmC,UAACW,GAAD;AAAA,WAAS,CAAC,EAAEA,GAAG,IAAIA,GAAG,CAACT,MAAD,CAAZ,CAAV;AAAA,GAAnC;;AAEA,SAAOG,cAAP;AACH;;AAEDe,MAAM,CAACC,OAAP,GAAiBvB,MAAjB;AACAsB,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBV,WAAvB","sourcesContent":["'use strict';\n\nfunction withIs(Class, { className, symbolName }) {\n    const symbol = Symbol.for(symbolName);\n\n    const ClassIsWrapper = {\n        // The code below assigns the class wrapper to an object to trick\n        // JavaScript engines to show the name of the extended class when\n        // logging an instances.\n        // We are assigning an anonymous class (class wrapper) to the object\n        // with key `className` to keep the correct name.\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\n        [className]: class extends Class {\n            constructor(...args) {\n                super(...args);\n                Object.defineProperty(this, symbol, { value: true });\n            }\n\n            get [Symbol.toStringTag]() {\n                return className;\n            }\n        },\n    }[className];\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\n    const symbol = Symbol.for(symbolName);\n\n    /* eslint-disable object-shorthand */\n    const ClassIsWrapper = {\n        [className]: function (...args) {\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\n                return new ClassIsWrapper(...args);\n            }\n\n            const _this = Class.call(this, ...args) || this;\n\n            if (_this && !_this[symbol]) {\n                Object.defineProperty(_this, symbol, { value: true });\n            }\n\n            return _this;\n        },\n    }[className];\n    /* eslint-enable object-shorthand */\n\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n        get() {\n            return className;\n        },\n    });\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;\n"]},"metadata":{},"sourceType":"script"}