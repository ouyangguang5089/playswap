{"ast":null,"code":"'use strict';\n\nmodule.exports = interrupt;\n\nfunction interrupt(interruptors, tokenizers, ctx, params) {\n  var bools = ['pedantic', 'commonmark'];\n  var count = bools.length;\n  var length = interruptors.length;\n  var index = -1;\n  var interruptor;\n  var config;\n  var fn;\n  var offset;\n  var bool;\n  var ignore;\n\n  while (++index < length) {\n    interruptor = interruptors[index];\n    config = interruptor[1] || {};\n    fn = interruptor[0];\n    offset = -1;\n    ignore = false;\n\n    while (++offset < count) {\n      bool = bools[offset];\n\n      if (config[bool] !== undefined && config[bool] !== ctx.options[bool]) {\n        ignore = true;\n        break;\n      }\n    }\n\n    if (ignore) {\n      continue;\n    }\n\n    if (tokenizers[fn].apply(ctx, params)) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/remark-parse/lib/util/interrupt.js"],"names":["module","exports","interrupt","interruptors","tokenizers","ctx","params","bools","count","length","index","interruptor","config","fn","offset","bool","ignore","undefined","options","apply"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,SAASA,SAAT,CAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,GAA7C,EAAkDC,MAAlD,EAA0D;AACxD,MAAIC,KAAK,GAAG,CAAC,UAAD,EAAa,YAAb,CAAZ;AACA,MAAIC,KAAK,GAAGD,KAAK,CAACE,MAAlB;AACA,MAAIA,MAAM,GAAGN,YAAY,CAACM,MAA1B;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,WAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,MAAJ;;AAEA,SAAO,EAAEN,KAAF,GAAUD,MAAjB,EAAyB;AACvBE,IAAAA,WAAW,GAAGR,YAAY,CAACO,KAAD,CAA1B;AACAE,IAAAA,MAAM,GAAGD,WAAW,CAAC,CAAD,CAAX,IAAkB,EAA3B;AACAE,IAAAA,EAAE,GAAGF,WAAW,CAAC,CAAD,CAAhB;AACAG,IAAAA,MAAM,GAAG,CAAC,CAAV;AACAE,IAAAA,MAAM,GAAG,KAAT;;AAEA,WAAO,EAAEF,MAAF,GAAWN,KAAlB,EAAyB;AACvBO,MAAAA,IAAI,GAAGR,KAAK,CAACO,MAAD,CAAZ;;AAEA,UAAIF,MAAM,CAACG,IAAD,CAAN,KAAiBE,SAAjB,IAA8BL,MAAM,CAACG,IAAD,CAAN,KAAiBV,GAAG,CAACa,OAAJ,CAAYH,IAAZ,CAAnD,EAAsE;AACpEC,QAAAA,MAAM,GAAG,IAAT;AACA;AACD;AACF;;AAED,QAAIA,MAAJ,EAAY;AACV;AACD;;AAED,QAAIZ,UAAU,CAACS,EAAD,CAAV,CAAeM,KAAf,CAAqBd,GAArB,EAA0BC,MAA1B,CAAJ,EAAuC;AACrC,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["'use strict';\n\nmodule.exports = interrupt;\n\nfunction interrupt(interruptors, tokenizers, ctx, params) {\n  var bools = ['pedantic', 'commonmark'];\n  var count = bools.length;\n  var length = interruptors.length;\n  var index = -1;\n  var interruptor;\n  var config;\n  var fn;\n  var offset;\n  var bool;\n  var ignore;\n\n  while (++index < length) {\n    interruptor = interruptors[index];\n    config = interruptor[1] || {};\n    fn = interruptor[0];\n    offset = -1;\n    ignore = false;\n\n    while (++offset < count) {\n      bool = bools[offset];\n\n      if (config[bool] !== undefined && config[bool] !== ctx.options[bool]) {\n        ignore = true;\n        break;\n      }\n    }\n\n    if (ignore) {\n      continue;\n    }\n\n    if (tokenizers[fn].apply(ctx, params)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"script"}