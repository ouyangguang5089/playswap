{"ast":null,"code":"import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{JSBI,Token,TokenAmount,WETH,Fraction,Percent,CurrencyAmount}from'@uniswap/sdk';import React,{useCallback,useMemo,useState}from'react';import ReactGA from'react-ga';import{Redirect}from'react-router';import{ButtonConfirmed}from'../../components/Button';import{LightCard}from'../../components/Card';import{AutoColumn}from'../../components/Column';import QuestionHelper from'../../components/QuestionHelper';import{AutoRow}from'../../components/Row';import{DEFAULT_DEADLINE_FROM_NOW}from'../../constants';import{useActiveWeb3React}from'../../hooks';import{useToken}from'../../hooks/Tokens';import{useV1ExchangeContract}from'../../hooks/useContract';import{NEVER_RELOAD,useSingleCallResult}from'../../state/multicall/hooks';import{useIsTransactionPending,useTransactionAdder}from'../../state/transactions/hooks';import{useTokenBalance,useETHBalances}from'../../state/wallet/hooks';import{BackArrow,TYPE}from'../../theme';import{isAddress}from'../../utils';import{BodyWrapper}from'../AppBody';import{EmptyState}from'./EmptyState';import{V1LiquidityInfo}from'./MigrateV1Exchange';import{AddressZero}from'@ethersproject/constants';import{Dots}from'../../components/swap/styleds';import{useTotalSupply}from'../../data/TotalSupply';var WEI_DENOM=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(18));var ZERO=JSBI.BigInt(0);var ONE=JSBI.BigInt(1);var ZERO_FRACTION=new Fraction(ZERO,ONE);function V1PairRemoval(_ref){var _useETHBalances;var exchangeContract=_ref.exchangeContract,liquidityTokenAmount=_ref.liquidityTokenAmount,token=_ref.token;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var totalSupply=useTotalSupply(liquidityTokenAmount.token);var exchangeETHBalance=(_useETHBalances=useETHBalances([liquidityTokenAmount.token.address]))===null||_useETHBalances===void 0?void 0:_useETHBalances[liquidityTokenAmount.token.address];var exchangeTokenBalance=useTokenBalance(liquidityTokenAmount.token.address,token);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),confirmingRemoval=_useState2[0],setConfirmingRemoval=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),pendingRemovalHash=_useState4[0],setPendingRemovalHash=_useState4[1];var shareFraction=totalSupply?new Percent(liquidityTokenAmount.raw,totalSupply.raw):ZERO_FRACTION;var ethWorth=exchangeETHBalance?CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient):CurrencyAmount.ether(ZERO);var tokenWorth=exchangeTokenBalance?new TokenAmount(token,shareFraction.multiply(exchangeTokenBalance.raw).quotient):new TokenAmount(token,ZERO);var addTransaction=useTransactionAdder();var isRemovalPending=useIsTransactionPending(pendingRemovalHash!==null&&pendingRemovalHash!==void 0?pendingRemovalHash:undefined);var remove=useCallback(function(){if(!liquidityTokenAmount)return;setConfirmingRemoval(true);exchangeContract.removeLiquidity(liquidityTokenAmount.raw.toString(),1,// min_eth, this is safe because we're removing liquidity\n1,// min_tokens, this is safe because we're removing liquidity\nMath.floor(new Date().getTime()/1000)+DEFAULT_DEADLINE_FROM_NOW).then(function(response){ReactGA.event({category:'Remove',action:'V1',label:token===null||token===void 0?void 0:token.symbol});addTransaction(response,{summary:\"Remove \".concat(chainId&&token.equals(WETH[chainId])?'WETH':token.symbol,\"/ETH V1 liquidity\")});setPendingRemovalHash(response.hash);}).catch(function(error){console.error(error);setConfirmingRemoval(false);});},[exchangeContract,liquidityTokenAmount,token,chainId,addTransaction]);var noLiquidityTokens=!!liquidityTokenAmount&&liquidityTokenAmount.equalTo(ZERO);var isSuccessfullyRemoved=!!pendingRemovalHash&&noLiquidityTokens;return/*#__PURE__*/React.createElement(AutoColumn,{gap:\"20px\"},/*#__PURE__*/React.createElement(TYPE.body,{my:9,style:{fontWeight:400}},\"This tool will remove your V1 liquidity and send the underlying assets to your wallet.\"),/*#__PURE__*/React.createElement(LightCard,null,/*#__PURE__*/React.createElement(V1LiquidityInfo,{token:token,liquidityTokenAmount:liquidityTokenAmount,tokenWorth:tokenWorth,ethWorth:ethWorth}),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',marginTop:'1rem'}},/*#__PURE__*/React.createElement(ButtonConfirmed,{confirmed:isSuccessfullyRemoved,disabled:isSuccessfullyRemoved||noLiquidityTokens||isRemovalPending||confirmingRemoval,onClick:remove},isSuccessfullyRemoved?'Success':isRemovalPending?/*#__PURE__*/React.createElement(Dots,null,\"Removing\"):'Remove'))),/*#__PURE__*/React.createElement(TYPE.darkGray,{style:{textAlign:'center'}},\"Your Uniswap V1 \".concat(chainId&&token.equals(WETH[chainId])?'WETH':token.symbol,\"/ETH liquidity will be redeemed for underlying assets.\")));}export default function RemoveV1Exchange(_ref2){var _useSingleCallResult,_useSingleCallResult$;var address=_ref2.match.params.address;var validatedAddress=isAddress(address);var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId,account=_useActiveWeb3React2.account;var exchangeContract=useV1ExchangeContract(validatedAddress?validatedAddress:undefined,true);var tokenAddress=(_useSingleCallResult=useSingleCallResult(exchangeContract,'tokenAddress',undefined,NEVER_RELOAD))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];var token=useToken(tokenAddress);var liquidityToken=useMemo(function(){return validatedAddress&&chainId&&token?new Token(chainId,validatedAddress,18,\"UNI-V1-\".concat(token.symbol),'Uniswap V1'):undefined;},[chainId,validatedAddress,token]);var userLiquidityBalance=useTokenBalance(account!==null&&account!==void 0?account:undefined,liquidityToken);// redirect for invalid url params\nif(!validatedAddress||tokenAddress===AddressZero){console.error('Invalid address in path',address);return/*#__PURE__*/React.createElement(Redirect,{to:\"/migrate/v1\"});}return/*#__PURE__*/React.createElement(BodyWrapper,{style:{padding:24},id:\"remove-v1-exchange\"},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"16px\"},/*#__PURE__*/React.createElement(AutoRow,{style:{alignItems:'center',justifyContent:'space-between'},gap:\"8px\"},/*#__PURE__*/React.createElement(BackArrow,{to:\"/migrate/v1\"}),/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,\"Remove V1 Liquidity\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Remove your Uniswap V1 liquidity tokens.\"}))),!account?/*#__PURE__*/React.createElement(TYPE.largeHeader,null,\"You must connect an account.\"):userLiquidityBalance&&token&&exchangeContract?/*#__PURE__*/React.createElement(V1PairRemoval,{exchangeContract:exchangeContract,liquidityTokenAmount:userLiquidityBalance,token:token}):/*#__PURE__*/React.createElement(EmptyState,{message:\"Loading...\"})));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/pages/MigrateV1/RemoveV1Exchange.tsx"],"names":["JSBI","Token","TokenAmount","WETH","Fraction","Percent","CurrencyAmount","React","useCallback","useMemo","useState","ReactGA","Redirect","ButtonConfirmed","LightCard","AutoColumn","QuestionHelper","AutoRow","DEFAULT_DEADLINE_FROM_NOW","useActiveWeb3React","useToken","useV1ExchangeContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useTokenBalance","useETHBalances","BackArrow","TYPE","isAddress","BodyWrapper","EmptyState","V1LiquidityInfo","AddressZero","Dots","useTotalSupply","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","V1PairRemoval","exchangeContract","liquidityTokenAmount","token","chainId","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","confirmingRemoval","setConfirmingRemoval","pendingRemovalHash","setPendingRemovalHash","shareFraction","raw","ethWorth","ether","multiply","quotient","tokenWorth","addTransaction","isRemovalPending","undefined","remove","removeLiquidity","toString","Math","floor","Date","getTime","then","response","event","category","action","label","symbol","summary","equals","hash","catch","error","console","noLiquidityTokens","equalTo","isSuccessfullyRemoved","fontWeight","display","marginTop","textAlign","RemoveV1Exchange","match","params","validatedAddress","account","tokenAddress","result","liquidityToken","userLiquidityBalance","padding","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\nimport { JSBI, Token, TokenAmount, WETH, Fraction, Percent, CurrencyAmount } from '@uniswap/sdk'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport { ButtonConfirmed } from '../../components/Button'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoRow } from '../../components/Row'\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useToken } from '../../hooks/Tokens'\nimport { useV1ExchangeContract } from '../../hooks/useContract'\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\nimport { useTokenBalance, useETHBalances } from '../../state/wallet/hooks'\nimport { BackArrow, TYPE } from '../../theme'\nimport { isAddress } from '../../utils'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\nimport { V1LiquidityInfo } from './MigrateV1Exchange'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Dots } from '../../components/swap/styleds'\nimport { Contract } from '@ethersproject/contracts'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\n\nfunction V1PairRemoval({\n  exchangeContract,\n  liquidityTokenAmount,\n  token\n}: {\n  exchangeContract: Contract\n  liquidityTokenAmount: TokenAmount\n  token: Token\n}) {\n  const { chainId } = useActiveWeb3React()\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\n\n  const [confirmingRemoval, setConfirmingRemoval] = useState<boolean>(false)\n  const [pendingRemovalHash, setPendingRemovalHash] = useState<string | null>(null)\n\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\n    : CurrencyAmount.ether(ZERO)\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\n    : new TokenAmount(token, ZERO)\n\n  const addTransaction = useTransactionAdder()\n  const isRemovalPending = useIsTransactionPending(pendingRemovalHash ?? undefined)\n\n  const remove = useCallback(() => {\n    if (!liquidityTokenAmount) return\n\n    setConfirmingRemoval(true)\n    exchangeContract\n      .removeLiquidity(\n        liquidityTokenAmount.raw.toString(),\n        1, // min_eth, this is safe because we're removing liquidity\n        1, // min_tokens, this is safe because we're removing liquidity\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n      )\n      .then((response: TransactionResponse) => {\n        ReactGA.event({\n          category: 'Remove',\n          action: 'V1',\n          label: token?.symbol\n        })\n\n        addTransaction(response, {\n          summary: `Remove ${chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH V1 liquidity`\n        })\n        setPendingRemovalHash(response.hash)\n      })\n      .catch((error: Error) => {\n        console.error(error)\n        setConfirmingRemoval(false)\n      })\n  }, [exchangeContract, liquidityTokenAmount, token, chainId, addTransaction])\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\n\n  const isSuccessfullyRemoved = !!pendingRemovalHash && noLiquidityTokens\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will remove your V1 liquidity and send the underlying assets to your wallet.\n      </TYPE.body>\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\n          <ButtonConfirmed\n            confirmed={isSuccessfullyRemoved}\n            disabled={isSuccessfullyRemoved || noLiquidityTokens || isRemovalPending || confirmingRemoval}\n            onClick={remove}\n          >\n            {isSuccessfullyRemoved ? 'Success' : isRemovalPending ? <Dots>Removing</Dots> : 'Remove'}\n          </ButtonConfirmed>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: 'center' }}>\n        {`Your Uniswap V1 ${\n          chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol\n        }/ETH liquidity will be redeemed for underlying assets.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  )\n}\n\nexport default function RemoveV1Exchange({\n  match: {\n    params: { address }\n  }\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address)\n  const { chainId, account } = useActiveWeb3React()\n\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined, true)\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\n  const token = useToken(tokenAddress)\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && chainId && token\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\n        : undefined,\n    [chainId, validatedAddress, token]\n  )\n  const userLiquidityBalance = useTokenBalance(account ?? undefined, liquidityToken)\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address)\n    return <Redirect to=\"/migrate/v1\" />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }} id=\"remove-v1-exchange\">\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Remove V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Remove your Uniswap V1 liquidity tokens.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : userLiquidityBalance && token && exchangeContract ? (\n          <V1PairRemoval\n            exchangeContract={exchangeContract}\n            liquidityTokenAmount={userLiquidityBalance}\n            token={token}\n          />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}