{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/delete');\n\nmodule.exports = strikethrough;\nstrikethrough.locator = locate;\nvar C_TILDE = '~';\nvar DOUBLE = '~~';\n\nfunction strikethrough(eat, value, silent) {\n  var self = this;\n  var character = '';\n  var previous = '';\n  var preceding = '';\n  var subvalue = '';\n  var index;\n  var length;\n  var now;\n\n  if (!self.options.gfm || value.charAt(0) !== C_TILDE || value.charAt(1) !== C_TILDE || whitespace(value.charAt(2))) {\n    return;\n  }\n\n  index = 1;\n  length = value.length;\n  now = eat.now();\n  now.column += 2;\n  now.offset += 2;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === C_TILDE && previous === C_TILDE && (!preceding || !whitespace(preceding))) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      return eat(DOUBLE + subvalue + DOUBLE)({\n        type: 'delete',\n        children: self.tokenizeInline(subvalue, now)\n      });\n    }\n\n    subvalue += previous;\n    preceding = previous;\n    previous = character;\n  }\n}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/node_modules/remark-parse/lib/tokenize/delete.js"],"names":["whitespace","require","locate","module","exports","strikethrough","locator","C_TILDE","DOUBLE","eat","value","silent","self","character","previous","preceding","subvalue","index","length","now","options","gfm","charAt","column","offset","type","children","tokenizeInline"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,kBAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AACAA,aAAa,CAACC,OAAd,GAAwBJ,MAAxB;AAEA,IAAIK,OAAO,GAAG,GAAd;AACA,IAAIC,MAAM,GAAG,IAAb;;AAEA,SAASH,aAAT,CAAuBI,GAAvB,EAA4BC,KAA5B,EAAmCC,MAAnC,EAA2C;AACzC,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,KAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,GAAJ;;AAEA,MACE,CAACP,IAAI,CAACQ,OAAL,CAAaC,GAAd,IACAX,KAAK,CAACY,MAAN,CAAa,CAAb,MAAoBf,OADpB,IAEAG,KAAK,CAACY,MAAN,CAAa,CAAb,MAAoBf,OAFpB,IAGAP,UAAU,CAACU,KAAK,CAACY,MAAN,CAAa,CAAb,CAAD,CAJZ,EAKE;AACA;AACD;;AAEDL,EAAAA,KAAK,GAAG,CAAR;AACAC,EAAAA,MAAM,GAAGR,KAAK,CAACQ,MAAf;AACAC,EAAAA,GAAG,GAAGV,GAAG,CAACU,GAAJ,EAAN;AACAA,EAAAA,GAAG,CAACI,MAAJ,IAAc,CAAd;AACAJ,EAAAA,GAAG,CAACK,MAAJ,IAAc,CAAd;;AAEA,SAAO,EAAEP,KAAF,GAAUC,MAAjB,EAAyB;AACvBL,IAAAA,SAAS,GAAGH,KAAK,CAACY,MAAN,CAAaL,KAAb,CAAZ;;AAEA,QACEJ,SAAS,KAAKN,OAAd,IACAO,QAAQ,KAAKP,OADb,KAEC,CAACQ,SAAD,IAAc,CAACf,UAAU,CAACe,SAAD,CAF1B,CADF,EAIE;AACA;AACA,UAAIJ,MAAJ,EAAY;AACV,eAAO,IAAP;AACD;;AAED,aAAOF,GAAG,CAACD,MAAM,GAAGQ,QAAT,GAAoBR,MAArB,CAAH,CAAgC;AACrCiB,QAAAA,IAAI,EAAE,QAD+B;AAErCC,QAAAA,QAAQ,EAAEd,IAAI,CAACe,cAAL,CAAoBX,QAApB,EAA8BG,GAA9B;AAF2B,OAAhC,CAAP;AAID;;AAEDH,IAAAA,QAAQ,IAAIF,QAAZ;AACAC,IAAAA,SAAS,GAAGD,QAAZ;AACAA,IAAAA,QAAQ,GAAGD,SAAX;AACD;AACF","sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/delete');\n\nmodule.exports = strikethrough;\nstrikethrough.locator = locate;\n\nvar C_TILDE = '~';\nvar DOUBLE = '~~';\n\nfunction strikethrough(eat, value, silent) {\n  var self = this;\n  var character = '';\n  var previous = '';\n  var preceding = '';\n  var subvalue = '';\n  var index;\n  var length;\n  var now;\n\n  if (\n    !self.options.gfm ||\n    value.charAt(0) !== C_TILDE ||\n    value.charAt(1) !== C_TILDE ||\n    whitespace(value.charAt(2))\n  ) {\n    return;\n  }\n\n  index = 1;\n  length = value.length;\n  now = eat.now();\n  now.column += 2;\n  now.offset += 2;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (\n      character === C_TILDE &&\n      previous === C_TILDE &&\n      (!preceding || !whitespace(preceding))\n    ) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      return eat(DOUBLE + subvalue + DOUBLE)({\n        type: 'delete',\n        children: self.tokenizeInline(subvalue, now)\n      });\n    }\n\n    subvalue += previous;\n    preceding = previous;\n    previous = character;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}