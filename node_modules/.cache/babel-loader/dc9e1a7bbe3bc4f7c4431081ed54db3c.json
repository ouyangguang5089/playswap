{"ast":null,"code":"import _defineProperty from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{JSBI,Token}from'@uniswap/sdk';import React,{useCallback,useContext,useEffect,useMemo,useState}from'react';import{ArrowDown}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{ThemeContext}from'styled-components';import AddressInputPanel from'../../components/AddressInputPanel';import{ButtonError,ButtonLight,ButtonPrimary,ButtonConfirmed}from'../../components/Button';import Card,{GreyCard}from'../../components/Card';import Column,{AutoColumn}from'../../components/Column';import ConfirmSwapModal from'../../components/swap/ConfirmSwapModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{SwapPoolTabs}from'../../components/NavigationTabs';import{AutoRow,RowBetween}from'../../components/Row';import AdvancedSwapDetailsDropdown from'../../components/swap/AdvancedSwapDetailsDropdown';import BetterTradeLink,{DefaultVersionLink}from'../../components/swap/BetterTradeLink';import confirmPriceImpactWithoutFee from'../../components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,SwapCallbackError,Wrapper}from'../../components/swap/styleds';import TradePrice from'../../components/swap/TradePrice';import TokenWarningModal from'../../components/TokenWarningModal';import ProgressSteps from'../../components/ProgressSteps';import SwapHeader from'../../components/swap/SwapHeader';import{INITIAL_ALLOWED_SLIPPAGE}from'../../constants';import{getTradeVersion}from'../../data/V1';import{useActiveWeb3React}from'../../hooks';import{useCurrency,useAllTokens}from'../../hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'../../hooks/useApproveCallback';import useENSAddress from'../../hooks/useENSAddress';import{useSwapCallback}from'../../hooks/useSwapCallback';import useToggledVersion,{DEFAULT_VERSION,Version}from'../../hooks/useToggledVersion';import useWrapCallback,{WrapType}from'../../hooks/useWrapCallback';import{useToggleSettingsMenu,useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'../../state/swap/hooks';import{useExpertModeManager,useUserSlippageTolerance,useUserSingleHopOnly}from'../../state/user/hooks';import{LinkStyledButton,TYPE}from'../../theme';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'../../utils/prices';import AppBody from'../AppBody';import{ClickableText}from'../Pool/styleds';import Loader from'../../components/Loader';import{useIsTransactionUnsupported}from'hooks/Trades';import UnsupportedCurrencyFooter from'components/swap/UnsupportedCurrencyFooter';import{isTradeBetter}from'utils/trades';export default function Swap(){var _tradesByVersion,_ref3,_ref4,_parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;var loadedUrlParams=useDefaultsFromURLSearch();// token warning stuff\nvar _ref=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)],loadedInputCurrency=_ref[0],loadedOutputCurrency=_ref[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dismissTokenWarning=_useState2[0],setDismissTokenWarning=_useState2[1];var urlLoadedTokens=useMemo(function(){var _filter,_ref2;return(_filter=(_ref2=[loadedInputCurrency,loadedOutputCurrency])===null||_ref2===void 0?void 0:_ref2.filter(function(c){return c instanceof Token;}))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);var handleConfirmTokenWarning=useCallback(function(){setDismissTokenWarning(true);},[]);// dismiss warning if all imported tokens are in active lists\nvar defaultTokens=useAllTokens();var importTokensNotInDefault=urlLoadedTokens&&urlLoadedTokens.filter(function(token){return!Boolean(token.address in defaultTokens);});var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var theme=useContext(ThemeContext);// toggle wallet when disconnected\nvar toggleWalletModal=useWalletModalToggle();// for expert mode\nvar toggleSettings=useToggleSettingsMenu();var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,1),isExpertMode=_useExpertModeManager2[0];// get custom setting values for user\nvar _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// swap state\nvar _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,recipient=_useSwapState.recipient;var _useDerivedSwapInfo=useDerivedSwapInfo(),v1Trade=_useDerivedSwapInfo.v1Trade,v2Trade=_useDerivedSwapInfo.v2Trade,currencyBalances=_useDerivedSwapInfo.currencyBalances,parsedAmount=_useDerivedSwapInfo.parsedAmount,currencies=_useDerivedSwapInfo.currencies,swapInputError=_useDerivedSwapInfo.inputError;var _useWrapCallback=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue),wrapType=_useWrapCallback.wrapType,onWrap=_useWrapCallback.execute,wrapInputError=_useWrapCallback.inputError;var showWrap=wrapType!==WrapType.NOT_APPLICABLE;var _useENSAddress=useENSAddress(recipient),recipientAddress=_useENSAddress.address;var toggledVersion=useToggledVersion();var tradesByVersion=(_tradesByVersion={},_defineProperty(_tradesByVersion,Version.v1,v1Trade),_defineProperty(_tradesByVersion,Version.v2,v2Trade),_tradesByVersion);var trade=showWrap?undefined:tradesByVersion[toggledVersion];var defaultTrade=showWrap?undefined:tradesByVersion[DEFAULT_VERSION];var betterTradeLinkV2=toggledVersion===Version.v1&&isTradeBetter(v1Trade,v2Trade)?Version.v2:undefined;var parsedAmounts=showWrap?(_ref3={},_defineProperty(_ref3,Field.INPUT,parsedAmount),_defineProperty(_ref3,Field.OUTPUT,parsedAmount),_ref3):(_ref4={},_defineProperty(_ref4,Field.INPUT,independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount),_defineProperty(_ref4,Field.OUTPUT,independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount),_ref4);var _useSwapActionHandler=useSwapActionHandlers(),onSwitchTokens=_useSwapActionHandler.onSwitchTokens,onCurrencySelection=_useSwapActionHandler.onCurrencySelection,onUserInput=_useSwapActionHandler.onUserInput,onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var isValid=!swapInputError;var dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;var handleTypeInput=useCallback(function(value){onUserInput(Field.INPUT,value);},[onUserInput]);var handleTypeOutput=useCallback(function(value){onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nvar _useState3=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined}),_useState4=_slicedToArray(_useState3,2),_useState4$=_useState4[0],showConfirm=_useState4$.showConfirm,tradeToConfirm=_useState4$.tradeToConfirm,swapErrorMessage=_useState4$.swapErrorMessage,attemptingTxn=_useState4$.attemptingTxn,txHash=_useState4$.txHash,setSwapState=_useState4[1];var formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);var route=trade===null||trade===void 0?void 0:trade.route;var userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));var noRoute=!route;// check whether the user has approved the router on the input token\nvar _useApproveCallbackFr=useApproveCallbackFromTrade(trade,allowedSlippage),_useApproveCallbackFr2=_slicedToArray(_useApproveCallbackFr,2),approval=_useApproveCallbackFr2[0],approveCallback=_useApproveCallbackFr2[1];// check if user has gone through approval process, used to show two step buttons, reset on token change\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),approvalSubmitted=_useState6[0],setApprovalSubmitted=_useState6[1];// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(function(){if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);var maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);var atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nvar _useSwapCallback=useSwapCallback(trade,allowedSlippage,recipient),swapCallback=_useSwapCallback.callback,swapCallbackError=_useSwapCallback.error;var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee;var _useUserSingleHopOnly=useUserSingleHopOnly(),_useUserSingleHopOnly2=_slicedToArray(_useUserSingleHopOnly,1),singleHopOnly=_useUserSingleHopOnly2[0];var handleSwap=useCallback(function(){if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState({attemptingTxn:true,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:undefined});swapCallback().then(function(hash){var _trade$inputAmount,_trade$inputAmount$cu,_trade$outputAmount,_trade$outputAmount$c;setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:hash});ReactGA.event({category:'Swap',action:recipient===null?'Swap w/o Send':(recipientAddress!==null&&recipientAddress!==void 0?recipientAddress:recipient)===account?'Swap w/o Send + recipient':'Swap w/ Send',label:[trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:(_trade$inputAmount$cu=_trade$inputAmount.currency)===null||_trade$inputAmount$cu===void 0?void 0:_trade$inputAmount$cu.symbol,trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:(_trade$outputAmount$c=_trade$outputAmount.currency)===null||_trade$outputAmount$c===void 0?void 0:_trade$outputAmount$c.symbol,getTradeVersion(trade)].join('/')});ReactGA.event({category:'Routing',action:singleHopOnly?'Swap with multihop disabled':'Swap with multihop enabled'});}).catch(function(error){setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:error.message,txHash:undefined});});},[priceImpactWithoutFee,swapCallback,tradeToConfirm,showConfirm,recipient,recipientAddress,account,trade,singleHopOnly]);// errors\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showInverted=_useState8[0],setShowInverted=_useState8[1];// warnings on slippage\nvar priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nvar showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);var handleConfirmDismiss=useCallback(function(){setSwapState({showConfirm:false,tradeToConfirm:tradeToConfirm,attemptingTxn:attemptingTxn,swapErrorMessage:swapErrorMessage,txHash:txHash});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[attemptingTxn,onUserInput,swapErrorMessage,tradeToConfirm,txHash]);var handleAcceptChanges=useCallback(function(){setSwapState({tradeToConfirm:trade,swapErrorMessage:swapErrorMessage,txHash:txHash,attemptingTxn:attemptingTxn,showConfirm:showConfirm});},[attemptingTxn,showConfirm,swapErrorMessage,trade,txHash]);var handleInputSelect=useCallback(function(inputCurrency){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);},[onCurrencySelection]);var handleMaxInput=useCallback(function(){maxAmountInput&&onUserInput(Field.INPUT,maxAmountInput.toExact());},[maxAmountInput,onUserInput]);var handleOutputSelect=useCallback(function(outputCurrency){return onCurrencySelection(Field.OUTPUT,outputCurrency);},[onCurrencySelection]);var swapIsUnsupported=useIsTransactionUnsupported(currencies===null||currencies===void 0?void 0:currencies.INPUT,currencies===null||currencies===void 0?void 0:currencies.OUTPUT);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TokenWarningModal,{isOpen:importTokensNotInDefault.length>0&&!dismissTokenWarning,tokens:importTokensNotInDefault,onConfirm:handleConfirmTokenWarning}),/*#__PURE__*/React.createElement(SwapPoolTabs,{active:'swap'}),/*#__PURE__*/React.createElement(AppBody,null,/*#__PURE__*/React.createElement(SwapHeader,null),/*#__PURE__*/React.createElement(Wrapper,{id:\"swap-page\"},/*#__PURE__*/React.createElement(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/React.createElement(AutoColumn,{gap:'md'},/*#__PURE__*/React.createElement(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap&&trade?'From (estimated)':'From',value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/React.createElement(AutoColumn,{justify:\"space-between\"},/*#__PURE__*/React.createElement(AutoRow,{justify:isExpertMode?'space-between':'center',style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:true},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",onClick:function onClick(){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},color:currencies[Field.INPUT]&&currencies[Field.OUTPUT]?theme.primary1:theme.text2})),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"add-recipient-button\",onClick:function onClick(){return onChangeRecipient('');}},\"+ Add a send (optional)\"):null)),/*#__PURE__*/React.createElement(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap&&trade?'To (estimated)':'To',showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:false},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",color:theme.text2})),/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"remove-recipient-button\",onClick:function onClick(){return onChangeRecipient(null);}},\"- Remove send\")),/*#__PURE__*/React.createElement(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})):null,showWrap?null:/*#__PURE__*/React.createElement(Card,{padding:showWrap?'.25rem 1rem 0 1rem':'0px',borderRadius:'20px'},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"8px\",style:{padding:'0 16px'}},Boolean(trade)&&/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:14,color:theme.text2},\"Price\"),/*#__PURE__*/React.createElement(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},\"Slippage Tolerance\"),/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},allowedSlippage/100,\"%\"))))),/*#__PURE__*/React.createElement(BottomGrouping,null,swapIsUnsupported?/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:true},/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},\"Unsupported Asset\")):!account?/*#__PURE__*/React.createElement(ButtonLight,{onClick:toggleWalletModal},\"Connect Wallet\"):showWrap?/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:Boolean(wrapInputError),onClick:onWrap},wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/React.createElement(GreyCard,{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},\"Insufficient liquidity for this trade.\"),singleHopOnly&&/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},\"Try enabling multi-hop trades.\")):showApproveFlow?/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(ButtonConfirmed,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,width:\"48%\",altDisabledStyle:approval===ApprovalState.PENDING// show solid button while waiting\n,confirmed:approval===ApprovalState.APPROVED},approval===ApprovalState.PENDING?/*#__PURE__*/React.createElement(AutoRow,{gap:\"6px\",justify:\"center\"},\"Approving \",/*#__PURE__*/React.createElement(Loader,{stroke:\"white\"})):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':'Approve '+((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)),/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},width:\"48%\",id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,error:isValid&&priceImpactSeverity>2},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')))):/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,error:isValid&&priceImpactSeverity>2&&!swapCallbackError},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500},swapInputError?swapInputError:priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))),showApproveFlow&&/*#__PURE__*/React.createElement(Column,{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(ProgressSteps,{steps:[approval===ApprovalState.APPROVED]})),isExpertMode&&swapErrorMessage?/*#__PURE__*/React.createElement(SwapCallbackError,{error:swapErrorMessage}):null,betterTradeLinkV2&&!swapIsUnsupported&&toggledVersion===Version.v1?/*#__PURE__*/React.createElement(BetterTradeLink,{version:betterTradeLinkV2}):toggledVersion!==DEFAULT_VERSION&&defaultTrade?/*#__PURE__*/React.createElement(DefaultVersionLink,null):null))),!swapIsUnsupported?/*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown,{trade:trade}):/*#__PURE__*/React.createElement(UnsupportedCurrencyFooter,{show:swapIsUnsupported,currencies:[currencies.INPUT,currencies.OUTPUT]}));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/pages/Swap/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","ReactGA","Text","ThemeContext","AddressInputPanel","ButtonError","ButtonLight","ButtonPrimary","ButtonConfirmed","Card","GreyCard","Column","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","BetterTradeLink","DefaultVersionLink","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","ProgressSteps","SwapHeader","INITIAL_ALLOWED_SLIPPAGE","getTradeVersion","useActiveWeb3React","useCurrency","useAllTokens","ApprovalState","useApproveCallbackFromTrade","useENSAddress","useSwapCallback","useToggledVersion","DEFAULT_VERSION","Version","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","useUserSingleHopOnly","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Loader","useIsTransactionUnsupported","UnsupportedCurrencyFooter","isTradeBetter","Swap","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","Boolean","address","account","theme","toggleWalletModal","toggleSettings","isExpertMode","allowedSlippage","independentField","typedValue","recipient","v1Trade","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","recipientAddress","toggledVersion","tradesByVersion","v1","v2","trade","undefined","defaultTrade","betterTradeLinkV2","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","singleHopOnly","handleSwap","then","hash","event","category","action","label","currency","symbol","join","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","swapIsUnsupported","length","padding","primary1","text2","executionPrice","WRAP","UNWRAP","textAlign","marginTop"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@uniswap/sdk'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonConfirmed } from '../../components/Button'\nimport Card, { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Column'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\nimport BetterTradeLink, { DefaultVersionLink } from '../../components/swap/BetterTradeLink'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport TradePrice from '../../components/swap/TradePrice'\nimport TokenWarningModal from '../../components/TokenWarningModal'\nimport ProgressSteps from '../../components/ProgressSteps'\nimport SwapHeader from '../../components/swap/SwapHeader'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { getTradeVersion } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport useENSAddress from '../../hooks/useENSAddress'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useToggledVersion, { DEFAULT_VERSION, Version } from '../../hooks/useToggledVersion'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { LinkStyledButton, TYPE } from '../../theme'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { ClickableText } from '../Pool/styleds'\nimport Loader from '../../components/Loader'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { isTradeBetter } from 'utils/trades'\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId)\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !Boolean(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu()\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const { address: recipientAddress } = useENSAddress(recipient)\n  const toggledVersion = useToggledVersion()\n  const tradesByVersion = {\n    [Version.v1]: v1Trade,\n    [Version.v2]: v2Trade\n  }\n  const trade = showWrap ? undefined : tradesByVersion[toggledVersion]\n  const defaultTrade = showWrap ? undefined : tradesByVersion[DEFAULT_VERSION]\n\n  const betterTradeLinkV2: Version | undefined =\n    toggledVersion === Version.v1 && isTradeBetter(v1Trade, v2Trade) ? Version.v2 : undefined\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(hash => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n\n        ReactGA.event({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [\n            trade?.inputAmount?.currency?.symbol,\n            trade?.outputAmount?.currency?.symbol,\n            getTradeVersion(trade)\n          ].join('/')\n        })\n\n        ReactGA.event({\n          category: 'Routing',\n          action: singleHopOnly ? 'Swap with multihop disabled' : 'Swap with multihop enabled'\n        })\n      })\n      .catch(error => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined\n        })\n      })\n  }, [\n    priceImpactWithoutFee,\n    swapCallback,\n    tradeToConfirm,\n    showConfirm,\n    recipient,\n    recipientAddress,\n    account,\n    trade,\n    singleHopOnly\n  ])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    inputCurrency => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact())\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [\n    onCurrencySelection\n  ])\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SwapPoolTabs active={'swap'} />\n      <AppBody>\n        <SwapHeader />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card padding={showWrap ? '.25rem 1rem 0 1rem' : '0px'} borderRadius={'20px'}>\n                <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                  {Boolean(trade) && (\n                    <RowBetween align=\"center\">\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                        Price\n                      </Text>\n                      <TradePrice\n                        price={trade?.executionPrice}\n                        showInverted={showInverted}\n                        setShowInverted={setShowInverted}\n                      />\n                    </RowBetween>\n                  )}\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <RowBetween align=\"center\">\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        Slippage Tolerance\n                      </ClickableText>\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        {allowedSlippage / 100}%\n                      </ClickableText>\n                    </RowBetween>\n                  )}\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n          <BottomGrouping>\n            {swapIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <TYPE.main mb=\"4px\">Unsupported Asset</TYPE.main>\n              </ButtonPrimary>\n            ) : !account ? (\n              <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\n            ) : showWrap ? (\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <TYPE.main mb=\"4px\">Insufficient liquidity for this trade.</TYPE.main>\n                {singleHopOnly && <TYPE.main mb=\"4px\">Try enabling multi-hop trades.</TYPE.main>}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonConfirmed\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                  altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                  confirmed={approval === ApprovalState.APPROVED}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      Approving <Loader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    'Approved'\n                  ) : (\n                    'Approve ' + currencies[Field.INPUT]?.symbol\n                  )}\n                </ButtonConfirmed>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined\n                      })\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined\n                    })\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                </Text>\n              </ButtonError>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            {betterTradeLinkV2 && !swapIsUnsupported && toggledVersion === Version.v1 ? (\n              <BetterTradeLink version={betterTradeLinkV2} />\n            ) : toggledVersion !== DEFAULT_VERSION && defaultTrade ? (\n              <DefaultVersionLink />\n            ) : null}\n          </BottomGrouping>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter show={swapIsUnsupported} currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}