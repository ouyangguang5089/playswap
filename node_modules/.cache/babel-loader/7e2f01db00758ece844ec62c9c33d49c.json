{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Semaphore = /*#__PURE__*/function () {\n  function Semaphore(count) {\n    _classCallCheck(this, Semaphore);\n\n    this.tasks = [];\n    this.count = count;\n  }\n\n  _createClass(Semaphore, [{\n    key: \"sched\",\n    value: function sched() {\n      if (this.count > 0 && this.tasks.length > 0) {\n        this.count--;\n        var next = this.tasks.shift();\n\n        if (next === undefined) {\n          throw \"Unexpected undefined value in tasks list\";\n        }\n\n        next();\n      }\n    }\n  }, {\n    key: \"acquire\",\n    value: function acquire() {\n      var _this = this;\n\n      return new Promise(function (res, rej) {\n        var task = function task() {\n          var released = false;\n          res(function () {\n            if (!released) {\n              released = true;\n              _this.count++;\n\n              _this.sched();\n            }\n          });\n        };\n\n        _this.tasks.push(task);\n\n        if (process && process.nextTick) {\n          process.nextTick(_this.sched.bind(_this));\n        } else {\n          setImmediate(_this.sched.bind(_this));\n        }\n      });\n    }\n  }, {\n    key: \"use\",\n    value: function use(f) {\n      return this.acquire().then(function (release) {\n        return f().then(function (res) {\n          release();\n          return res;\n        }).catch(function (err) {\n          release();\n          throw err;\n        });\n      });\n    }\n  }]);\n\n  return Semaphore;\n}();\n\nexports.Semaphore = Semaphore;\n\nvar Mutex = /*#__PURE__*/function (_Semaphore) {\n  _inherits(Mutex, _Semaphore);\n\n  var _super = _createSuper(Mutex);\n\n  function Mutex() {\n    _classCallCheck(this, Mutex);\n\n    return _super.call(this, 1);\n  }\n\n  return Mutex;\n}(Semaphore);\n\nexports.Mutex = Mutex;","map":{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;IAAA,S;AAII,qBAAY,KAAZ,EAAyB;AAAA;;AAHjB,SAAA,KAAA,GAAwB,EAAxB;AAIJ,SAAK,KAAL,GAAa,KAAb;AACH;;;;4BAEY;AACT,UAAI,KAAK,KAAL,GAAa,CAAb,IAAkB,KAAK,KAAL,CAAW,MAAX,GAAoB,CAA1C,EAA6C;AACzC,aAAK,KAAL;AACA,YAAI,IAAI,GAAG,KAAK,KAAL,CAAW,KAAX,EAAX;;AACA,YAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,gBAAM,0CAAN;AACH;;AAED,QAAA,IAAI;AACP;AACJ;;;8BAEa;AAAA;;AACV,aAAO,IAAI,OAAJ,CAAwB,UAAC,GAAD,EAAM,GAAN,EAAS;AACpC,YAAI,IAAI,GAAG,SAAP,IAAO,GAAA;AACP,cAAI,QAAQ,GAAG,KAAf;AACA,UAAA,GAAG,CAAC,YAAA;AACA,gBAAI,CAAC,QAAL,EAAe;AACX,cAAA,QAAQ,GAAG,IAAX;AACA,cAAA,KAAI,CAAC,KAAL;;AACA,cAAA,KAAI,CAAC,KAAL;AACH;AACJ,WANE,CAAH;AAOH,SATD;;AAUA,QAAA,KAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,IAAhB;;AACA,YAAI,OAAO,IAAI,OAAO,CAAC,QAAvB,EAAiC;AAC7B,UAAA,OAAO,CAAC,QAAR,CAAiB,KAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,KAAhB,CAAjB;AACH,SAFD,MAEO;AACH,UAAA,YAAY,CAAC,KAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,KAAhB,CAAD,CAAZ;AACH;AACJ,OAjBM,CAAP;AAkBH;;;wBAEa,C,EAAmB;AAC7B,aAAO,KAAK,OAAL,GACN,IADM,CACD,UAAA,OAAO,EAAA;AACT,eAAO,CAAC,GACP,IADM,CACD,UAAC,GAAD,EAAI;AACN,UAAA,OAAO;AACP,iBAAO,GAAP;AACH,SAJM,EAKN,KALM,CAKA,UAAC,GAAD,EAAI;AACP,UAAA,OAAO;AACP,gBAAM,GAAN;AACH,SARM,CAAP;AASH,OAXM,CAAP;AAYH;;;;;;AAtDQ,OAAA,CAAA,SAAA,GAAS,SAAT;;IAyDb,K;;;;;AACI,mBAAA;AAAA;;AAAA,6BACU,CADV;AAEC;;;EAHsB,S;;AAAd,OAAA,CAAA,KAAA,GAAK,KAAL","sourceRoot":"","sourcesContent":["\"use strict\";\nclass Semaphore {\n    constructor(count) {\n        this.tasks = [];\n        this.count = count;\n    }\n    sched() {\n        if (this.count > 0 && this.tasks.length > 0) {\n            this.count--;\n            let next = this.tasks.shift();\n            if (next === undefined) {\n                throw \"Unexpected undefined value in tasks list\";\n            }\n            next();\n        }\n    }\n    acquire() {\n        return new Promise((res, rej) => {\n            var task = () => {\n                var released = false;\n                res(() => {\n                    if (!released) {\n                        released = true;\n                        this.count++;\n                        this.sched();\n                    }\n                });\n            };\n            this.tasks.push(task);\n            if (process && process.nextTick) {\n                process.nextTick(this.sched.bind(this));\n            }\n            else {\n                setImmediate(this.sched.bind(this));\n            }\n        });\n    }\n    use(f) {\n        return this.acquire()\n            .then(release => {\n            return f()\n                .then((res) => {\n                release();\n                return res;\n            })\n                .catch((err) => {\n                release();\n                throw err;\n            });\n        });\n    }\n}\nexports.Semaphore = Semaphore;\nclass Mutex extends Semaphore {\n    constructor() {\n        super(1);\n    }\n}\nexports.Mutex = Mutex;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}