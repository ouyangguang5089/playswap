{"ast":null,"code":"import _slicedToArray from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/projects/testswap/uniswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useCallback}from'react';import styled from'styled-components';import ReactGA from'react-ga';import{TYPE,CloseIcon}from'theme';import Card from'components/Card';import{AutoColumn}from'components/Column';import{RowBetween,RowFixed,AutoRow}from'components/Row';import{ArrowLeft,AlertTriangle}from'react-feather';import useTheme from'hooks/useTheme';import{transparentize}from'polished';import{ButtonPrimary}from'components/Button';import{SectionBreak}from'components/swap/styleds';import{ExternalLink}from'../../theme/components';import ListLogo from'components/ListLogo';import{PaddedColumn,Checkbox,TextDot}from'./styleds';import{useDispatch}from'react-redux';import{useFetchListCallback}from'hooks/useFetchListCallback';import{removeList,enableList}from'state/lists/actions';import{CurrencyModalView}from'./CurrencySearchModal';import{useAllLists}from'state/lists/hooks';var Wrapper=styled.div(_templateObject());export function ImportList(_ref){var _lists$listURL;var listURL=_ref.listURL,list=_ref.list,setModalView=_ref.setModalView,onDismiss=_ref.onDismiss;var theme=useTheme();var dispatch=useDispatch();// user must accept\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),confirmed=_useState2[0],setConfirmed=_useState2[1];var lists=useAllLists();var fetchList=useFetchListCallback();// monitor is list is loading\nvar adding=Boolean((_lists$listURL=lists[listURL])===null||_lists$listURL===void 0?void 0:_lists$listURL.loadingRequestId);var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),addError=_useState4[0],setAddError=_useState4[1];var handleAddList=useCallback(function(){if(adding)return;setAddError(null);fetchList(listURL).then(function(){ReactGA.event({category:'Lists',action:'Add List',label:listURL});// turn list on\ndispatch(enableList(listURL));// go back to lists\nsetModalView(CurrencyModalView.manage);}).catch(function(error){ReactGA.event({category:'Lists',action:'Add List Failed',label:listURL});setAddError(error.message);dispatch(removeList(listURL));});},[adding,dispatch,fetchList,listURL,setModalView]);return/*#__PURE__*/React.createElement(Wrapper,null,/*#__PURE__*/React.createElement(PaddedColumn,{gap:\"14px\",style:{width:'100%',flex:'1 1'}},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(ArrowLeft,{style:{cursor:'pointer'},onClick:function onClick(){return setModalView(CurrencyModalView.manage);}}),/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,\"Import List\"),/*#__PURE__*/React.createElement(CloseIcon,{onClick:onDismiss}))),/*#__PURE__*/React.createElement(SectionBreak,null),/*#__PURE__*/React.createElement(PaddedColumn,{gap:\"md\"},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"md\"},/*#__PURE__*/React.createElement(Card,{backgroundColor:theme.bg2,padding:\"12px 20px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,list.logoURI&&/*#__PURE__*/React.createElement(ListLogo,{logoURI:list.logoURI,size:\"40px\"}),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"sm\",style:{marginLeft:'20px'}},/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:600,mr:\"6px\"},list.name),/*#__PURE__*/React.createElement(TextDot,null),/*#__PURE__*/React.createElement(TYPE.main,{fontSize:'16px',ml:\"6px\"},list.tokens.length,\" tokens\")),/*#__PURE__*/React.createElement(ExternalLink,{href:\"https://tokenlists.org/token-list?url=\".concat(listURL)},/*#__PURE__*/React.createElement(TYPE.main,{fontSize:'12px',color:theme.blue1},listURL)))))),/*#__PURE__*/React.createElement(Card,{style:{backgroundColor:transparentize(0.8,theme.red1)}},/*#__PURE__*/React.createElement(AutoColumn,{justify:\"center\",style:{textAlign:'center',gap:'16px',marginBottom:'12px'}},/*#__PURE__*/React.createElement(AlertTriangle,{stroke:theme.red1,size:32}),/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:500,fontSize:20,color:theme.red1},\"Import at your own risk\",' ')),/*#__PURE__*/React.createElement(AutoColumn,{style:{textAlign:'center',gap:'16px',marginBottom:'12px'}},/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:500,color:theme.red1},\"By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.\"),/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:600,color:theme.red1},\"If you purchase a token from this list, you may not be able to sell it back.\")),/*#__PURE__*/React.createElement(AutoRow,{justify:\"center\",style:{cursor:'pointer'},onClick:function onClick(){return setConfirmed(!confirmed);}},/*#__PURE__*/React.createElement(Checkbox,{name:\"confirmed\",type:\"checkbox\",checked:confirmed,onChange:function onChange(){return setConfirmed(!confirmed);}}),/*#__PURE__*/React.createElement(TYPE.body,{ml:\"10px\",fontSize:\"16px\",color:theme.red1,fontWeight:500},\"I understand\"))),/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:!confirmed,altDisabledStyle:true,borderRadius:\"20px\",padding:\"10px 1rem\",onClick:handleAddList},\"Import\"),addError?/*#__PURE__*/React.createElement(TYPE.error,{title:addError,style:{textOverflow:'ellipsis',overflow:'hidden'},error:true},addError):null)));}","map":{"version":3,"sources":["/projects/testswap/uniswap-interface/src/components/SearchModal/ImportList.tsx"],"names":["React","useState","useCallback","styled","ReactGA","TYPE","CloseIcon","Card","AutoColumn","RowBetween","RowFixed","AutoRow","ArrowLeft","AlertTriangle","useTheme","transparentize","ButtonPrimary","SectionBreak","ExternalLink","ListLogo","PaddedColumn","Checkbox","TextDot","useDispatch","useFetchListCallback","removeList","enableList","CurrencyModalView","useAllLists","Wrapper","div","ImportList","listURL","list","setModalView","onDismiss","theme","dispatch","confirmed","setConfirmed","lists","fetchList","adding","Boolean","loadingRequestId","addError","setAddError","handleAddList","then","event","category","action","label","manage","catch","error","message","width","flex","cursor","bg2","logoURI","marginLeft","name","tokens","length","blue1","backgroundColor","red1","textAlign","gap","marginBottom","textOverflow","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport ReactGA from 'react-ga'\nimport { TYPE, CloseIcon } from 'theme'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\nimport { ArrowLeft, AlertTriangle } from 'react-feather'\nimport useTheme from 'hooks/useTheme'\nimport { transparentize } from 'polished'\nimport { ButtonPrimary } from 'components/Button'\nimport { SectionBreak } from 'components/swap/styleds'\nimport { ExternalLink } from '../../theme/components'\nimport ListLogo from 'components/ListLogo'\nimport { PaddedColumn, Checkbox, TextDot } from './styleds'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport { useFetchListCallback } from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { CurrencyModalView } from './CurrencySearchModal'\nimport { useAllLists } from 'state/lists/hooks'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onDismiss: () => void\n  setModalView: (view: CurrencyModalView) => void\n}\n\nexport function ImportList({ listURL, list, setModalView, onDismiss }: ImportProps) {\n  const theme = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List',\n          label: listURL\n        })\n\n        // turn list on\n        dispatch(enableList(listURL))\n        // go back to lists\n        setModalView(CurrencyModalView.manage)\n      })\n      .catch(error => {\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List Failed',\n          label: listURL\n        })\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, setModalView])\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\" style={{ width: '100%', flex: '1 1' }}>\n        <RowBetween>\n          <ArrowLeft style={{ cursor: 'pointer' }} onClick={() => setModalView(CurrencyModalView.manage)} />\n          <TYPE.mediumHeader>Import List</TYPE.mediumHeader>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n      <SectionBreak />\n      <PaddedColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card backgroundColor={theme.bg2} padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <TYPE.body fontWeight={600} mr=\"6px\">\n                      {list.name}\n                    </TYPE.body>\n                    <TextDot />\n                    <TYPE.main fontSize={'16px'} ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </TYPE.main>\n                  </RowFixed>\n                  <ExternalLink href={`https://tokenlists.org/token-list?url=${listURL}`}>\n                    <TYPE.main fontSize={'12px'} color={theme.blue1}>\n                      {listURL}\n                    </TYPE.main>\n                  </ExternalLink>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n          <Card style={{ backgroundColor: transparentize(0.8, theme.red1) }}>\n            <AutoColumn justify=\"center\" style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <AlertTriangle stroke={theme.red1} size={32} />\n              <TYPE.body fontWeight={500} fontSize={20} color={theme.red1}>\n                Import at your own risk{' '}\n              </TYPE.body>\n            </AutoColumn>\n\n            <AutoColumn style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <TYPE.body fontWeight={500} color={theme.red1}>\n                By adding this list you are implicitly trusting that the data is correct. Anyone can create a list,\n                including creating fake versions of existing lists and lists that claim to represent projects that do\n                not have one.\n              </TYPE.body>\n              <TYPE.body fontWeight={600} color={theme.red1}>\n                If you purchase a token from this list, you may not be able to sell it back.\n              </TYPE.body>\n            </AutoColumn>\n            <AutoRow justify=\"center\" style={{ cursor: 'pointer' }} onClick={() => setConfirmed(!confirmed)}>\n              <Checkbox\n                name=\"confirmed\"\n                type=\"checkbox\"\n                checked={confirmed}\n                onChange={() => setConfirmed(!confirmed)}\n              />\n              <TYPE.body ml=\"10px\" fontSize=\"16px\" color={theme.red1} fontWeight={500}>\n                I understand\n              </TYPE.body>\n            </AutoRow>\n          </Card>\n\n          <ButtonPrimary\n            disabled={!confirmed}\n            altDisabledStyle={true}\n            borderRadius=\"20px\"\n            padding=\"10px 1rem\"\n            onClick={handleAddList}\n          >\n            Import\n          </ButtonPrimary>\n          {addError ? (\n            <TYPE.error title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }} error>\n              {addError}\n            </TYPE.error>\n          ) : null}\n        </AutoColumn>\n        {/* </Card> */}\n      </PaddedColumn>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}